=== FUNCTION EXTRACTION & QUESTION GENERATION LOG ===
Session ID: session-1760546051744
Started: 2025-10-15T16:34:11.744Z


--- FUNCTION EXTRACTION ---
Timestamp: 2025-10-15T16:34:11.746Z
File: [3 files: Specific Stripe Error types:, route.ts, No need to run further tests on non-Node environments]
Functions Extracted: 2


Function 1: POST
Language: TypeScript
Lines: 12
Full Code:
--------------------------------------------------------------------------------
export async function POST(req: Request) {
  let event: Stripe.Event;

  try {
    const stripeSignature = (await headers()).get('stripe-signature');

    event = stripe.webhooks.constructEvent(
      await req.text(),
      stripeSignature as string,
      process.env.STRIPE_WEBHOOK_SECRET as string
    );
  } catch (err) {
    const errorMessage = err instanceof Error ? err.message : 'Unknown error';
  }
}
--------------------------------------------------------------------------------


Function 2: createEmitter
Language: JavaScript
Lines: 39
Full Code:
--------------------------------------------------------------------------------
describe('createEmitter', () => {
      let emitter;
      beforeEach(() => {
        emitter = platformFunctions.createEmitter();
      });

      it('should emit a `foo` event with data to listeners', (done) => {
        function onFoo(data): void {
          emitter.removeListener('foo', onFoo);

          expect(data.bar).to.equal('bar');
          expect(data.baz).to.equal('baz');

          done();
        }

        emitter.on('foo', onFoo);
        emitter.emit('foo', {bar: 'bar', baz: 'baz'});
      });

      it('listeners registered via `on` keep firing until removed', (done) => {
        let calls = 0;

        function onFoo(): void {
          calls += 1;
        }

        emitter.on('foo', onFoo);
        emitter.emit('foo');
        expect(calls).to.equal(1);
        emitter.emit('foo');
        expect(calls).to.equal(2);
        emitter.removeListener('foo', onFoo);

        done();
      });

      it('listeners registered via `once` only fire once', (done) => {
        let calls = 0;

        function onFoo(): void {
          calls += 1;
        }

        emitter.once('foo', onFoo);
        emitter.emit('foo');
        expect(calls).to.equal(1);
        emitter.emit('foo');
        expect(calls).to.equal(1);

        done();
      });

      it('listeners registered multiple times are for each time it was registered', (done) => {
        let calls = 0;

        function onFoo(): void {
          calls += 1;
        }

        emitter.on('foo', onFoo);
        emitter.once('foo', onFoo);

        emitter.emit('foo');
        expect(calls).to.equal(2);

        done();
      });

      it('should not emit a `foo` event to removed listeners', (done) => {
        function onFoo(): void {
          done(new Error('How did you get here?'));
        }

        emitter.once('response', onFoo);
        emitter.removeListener('response', onFoo);
        emitter.emit('foo');

        done();
      });
    });
--------------------------------------------------------------------------------

================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-15T16:34:29.870Z
Question Type: order-sequence
Function: createEmitter
Function Size: 2093 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: createEmitter (JavaScript)\n// Tests the functionality of an event emitter, ensuring events are emitted and handled correctly.\n\ndescribe('createEmitter', () => {\n      let emitter;\n      beforeEach(() => {\n        emitter = platformFunctions.createEmitter();\n      });\n\n      it('should e
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-15T16:34:31.712Z
Question Type: function-variant
Function: createEmitter
Function Size: 2093 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: createEmitter (JavaScript)\n// Tests the functionality of an event emitter, ensuring events are emitted and handled correctly.\n\ndescribe('createEmitter', () => {\n      let emitter;\n      beforeEach(() => {\n        emitter = platformFunctions.createEmitter();\n      });\n\n      it('should e
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-15T16:34:34.208Z
Question Type: select-all
Function: createEmitter
Function Size: 2093 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: createEmitter (JavaScript)\n// Tests the functionality of an event emitter, ensuring events are emitted and handled correctly.\n\ndescribe('createEmitter', () => {\n      let emitter;\n      beforeEach(() => {\n        emitter = platformFunctions.createEmitter();\n      });\n\n      it('should e
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-15T16:34:39.092Z
Question Type: true-false
Function: POST
Function Size: 498 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: POST (TypeScript)\n// Handles incoming POST requests for Stripe webhooks.\n\nexport async function POST(req: Request) {\n  let event: Stripe.Event;\n\n  try {\n    const stripeSignature = (await headers()).get('stripe-signature');\n\n    event = stripe.webhooks.constructEvent(\n      await req.te
================================================================================


=== SESSION SUMMARY ===
Session ID: session-1760546051744
Repository: Unknown
Total Questions Generated: 4
Total Chunks Processed: 2
Ended: 2025-10-15T16:34:39.119Z
================================================================================


--- FUNCTION EXTRACTION ---
Timestamp: 2025-10-15T16:34:45.024Z
File: [2 files: We can't use .flat() since this isn't supported in Node 10., rawErrorTypeEnum: The end of the section generated from our OpenAPI spec]
Functions Extracted: 1


Function 1: onCustomer
Language: JavaScript
Lines: 7
Full Code:
--------------------------------------------------------------------------------
function onCustomer(customer, next) {
  customerIds.push(customer.id);
  if (customerIds.length === LIMIT) {
    next(false);
  } else {
    expect(customerIds.length).to.be.lessThan(LIMIT);
    next();
  }
}
--------------------------------------------------------------------------------

================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-15T16:34:51.776Z
Question Type: true-false
Function: onCustomer
Function Size: 356 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: onCustomer (JavaScript)\n// Handles each customer during pagination, pushing customer IDs to an array and controlling pagination flow.\n\nfunction onCustomer(customer, next) {\n  customerIds.push(customer.id);\n  if (customerIds.length === LIMIT) {\n    next(false);\n  } else {\n    expect(cust
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-15T16:34:55.720Z
Question Type: select-all
Function: onCustomer
Function Size: 356 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: onCustomer (JavaScript)\n// Handles each customer during pagination, pushing customer IDs to an array and controlling pagination flow.\n\nfunction onCustomer(customer, next) {\n  customerIds.push(customer.id);\n  if (customerIds.length === LIMIT) {\n    next(false);\n  } else {\n    expect(cust
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-15T16:35:05.043Z
Question Type: multiple-choice
Function: onCustomer
Function Size: 356 characters
Questions Generated: 3
Repository: Unknown
Function Preview: // Function: onCustomer (JavaScript)\n// Handles each customer during pagination, pushing customer IDs to an array and controlling pagination flow.\n\nfunction onCustomer(customer, next) {\n  customerIds.push(customer.id);\n  if (customerIds.length === LIMIT) {\n    next(false);\n  } else {\n    expect(cust
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-15T16:35:06.269Z
Question Type: function-variant
Function: onCustomer
Function Size: 356 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: onCustomer (JavaScript)\n// Handles each customer during pagination, pushing customer IDs to an array and controlling pagination flow.\n\nfunction onCustomer(customer, next) {\n  customerIds.push(customer.id);\n  if (customerIds.length === LIMIT) {\n    next(false);\n  } else {\n    expect(cust
================================================================================


=== SESSION SUMMARY ===
Session ID: session-1760546051744
Repository: Unknown
Total Questions Generated: 6
Total Chunks Processed: 1
Ended: 2025-10-15T16:35:06.322Z
================================================================================


--- FUNCTION EXTRACTION ---
Timestamp: 2025-10-15T16:35:14.708Z
File: [3 files: PlatformFunctions.ts, HttpClient.ts, errorClassNameEnum: The end of the section generated from our OpenAPI spec]
Functions Extracted: 2


Function 1: secureCompare
Language: TypeScript
Lines: 6
Full Code:
--------------------------------------------------------------------------------
secureCompare(a: string, b: string): boolean {
    // Implementation of secure string comparison
    if (a.length !== b.length) return false;
    let result = 0;
    for (let i = 0; i < a.length; i++) {
        result |= a.charCodeAt(i) ^ b.charCodeAt(i);
    }
    return result === 0;
}
--------------------------------------------------------------------------------


Function 2: makeRequest
Language: TypeScript
Lines: 8
Full Code:
--------------------------------------------------------------------------------
makeRequest(
    host: string,
    port: string,
    path: string,
    method: string,
    headers: RequestHeaders,
    requestData: string,
    protocol: string,
    timeout: number
): Promise<HttpClientResponseInterface> {
    // Implementation for making an HTTP request to the Stripe API
    throw new Error('makeRequest not implemented.');
}
--------------------------------------------------------------------------------

================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-15T16:35:25.283Z
Question Type: select-all
Function: secureCompare
Function Size: 397 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: secureCompare (TypeScript)\n// Compares two strings in constant time to prevent timing attacks.\n\nsecureCompare(a: string, b: string): boolean {\n    // Implementation of secure string comparison\n    if (a.length !== b.length) return false;\n    let result = 0;\n    for (let i = 0; i < a.len
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-15T16:35:27.037Z
Question Type: select-all
Function: makeRequest
Function Size: 450 characters
Questions Generated: 0
Repository: Unknown
Function Preview: // Function: makeRequest (TypeScript)\n// Issues a request to the Stripe API with specified parameters.\n\nmakeRequest(\n    host: string,\n    port: string,\n    path: string,\n    method: string,\n    headers: RequestHeaders,\n    requestData: string,\n    protocol: string,\n    timeout: number\n): Promise<Ht
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-15T16:35:34.550Z
Question Type: multiple-choice
Function: makeRequest
Function Size: 450 characters
Questions Generated: 3
Repository: Unknown
Function Preview: // Function: makeRequest (TypeScript)\n// Issues a request to the Stripe API with specified parameters.\n\nmakeRequest(\n    host: string,\n    port: string,\n    path: string,\n    method: string,\n    headers: RequestHeaders,\n    requestData: string,\n    protocol: string,\n    timeout: number\n): Promise<Ht
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-15T16:35:38.231Z
Question Type: function-variant
Function: makeRequest
Function Size: 450 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: makeRequest (TypeScript)\n// Issues a request to the Stripe API with specified parameters.\n\nmakeRequest(\n    host: string,\n    port: string,\n    path: string,\n    method: string,\n    headers: RequestHeaders,\n    requestData: string,\n    protocol: string,\n    timeout: number\n): Promise<Ht
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-15T16:35:42.465Z
Question Type: order-sequence
Function: secureCompare
Function Size: 397 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: secureCompare (TypeScript)\n// Compares two strings in constant time to prevent timing attacks.\n\nsecureCompare(a: string, b: string): boolean {\n    // Implementation of secure string comparison\n    if (a.length !== b.length) return false;\n    let result = 0;\n    for (let i = 0; i < a.len
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-15T16:35:44.714Z
Question Type: function-variant
Function: secureCompare
Function Size: 397 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: secureCompare (TypeScript)\n// Compares two strings in constant time to prevent timing attacks.\n\nsecureCompare(a: string, b: string): boolean {\n    // Implementation of secure string comparison\n    if (a.length !== b.length) return false;\n    let result = 0;\n    for (let i = 0; i < a.len
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-15T16:35:57.535Z
Question Type: select-all
Function: makeRequest
Function Size: 450 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: makeRequest (TypeScript)\n// Issues a request to the Stripe API with specified parameters.\n\nmakeRequest(\n    host: string,\n    port: string,\n    path: string,\n    method: string,\n    headers: RequestHeaders,\n    requestData: string,\n    protocol: string,\n    timeout: number\n): Promise<Ht
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-15T16:35:58.552Z
Question Type: function-variant
Function: secureCompare
Function Size: 397 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: secureCompare (TypeScript)\n// Compares two strings in constant time to prevent timing attacks.\n\nsecureCompare(a: string, b: string): boolean {\n    // Implementation of secure string comparison\n    if (a.length !== b.length) return false;\n    let result = 0;\n    for (let i = 0; i < a.len
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-15T16:35:59.260Z
Question Type: function-variant
Function: makeRequest
Function Size: 450 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: makeRequest (TypeScript)\n// Issues a request to the Stripe API with specified parameters.\n\nmakeRequest(\n    host: string,\n    port: string,\n    path: string,\n    method: string,\n    headers: RequestHeaders,\n    requestData: string,\n    protocol: string,\n    timeout: number\n): Promise<Ht
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-15T16:36:05.610Z
Question Type: true-false
Function: makeRequest
Function Size: 450 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: makeRequest (TypeScript)\n// Issues a request to the Stripe API with specified parameters.\n\nmakeRequest(\n    host: string,\n    port: string,\n    path: string,\n    method: string,\n    headers: RequestHeaders,\n    requestData: string,\n    protocol: string,\n    timeout: number\n): Promise<Ht
================================================================================


=== SESSION SUMMARY ===
Session ID: session-1760546051744
Repository: Unknown
Total Questions Generated: 11
Total Chunks Processed: 2
Ended: 2025-10-15T16:36:05.658Z
================================================================================


--- FUNCTION EXTRACTION ---
Timestamp: 2025-10-15T16:36:45.733Z
File: eslint-disable-next-line no-await-in-loop
Functions Extracted: 3


Function 1: forAwaitUntil
Language: JavaScript
Lines: 10
Full Code:
--------------------------------------------------------------------------------
async function forAwaitUntil(iterator, limit) {
    const items = [];
    for await (const item of iterator) {
        items.push(item);
        if (items.length === limit) {
            break;
        }
        if (items.length > limit) {
            throw Error('Kept iterating after break.');
        }
    }
    return items;
}
--------------------------------------------------------------------------------


Function 2: mockPaginationV1Search
Language: JavaScript
Lines: 30
Full Code:
--------------------------------------------------------------------------------
const mockPaginationV1Search = (pages, initialArgs) => {
    let i = 1;
    const paramsLog = [];
    const spec = {
        method: 'GET',
        methodType: 'search',
    };

    const addNextPage = (props) => {
        const nextPageProperties = {
            next_page: props.has_more
                ? `${props.data[props.data.length - 1].id}-encoded`
                : null,
        };
        return {...props, ...nextPageProperties};
    };

    const mockStripe = getMockStripe(
        {},
        (_1, _2, path, _4, _5, _6, _7, callback) => {
            paramsLog.push(path.slice(path.indexOf('?')));

            callback(
                null,
                Promise.resolve(
                    addNextPage({
                        data: pages[i].map((id) => ({id})),
                        has_more: i < pages.length - 1,
                    })
                )
            );
            i += 1;
        }
    );
    const resource = new StripeResource(mockStripe);

    const paginator = makeAutoPaginationMethods(
        resource,
        initialArgs || {},
        spec,
        Promise.resolve(
            addNextPage({
                data: pages[0].map((id) => ({id})),
                has_more: pages.length > 1,
            })
        )
    );
    return {paginator, paramsLog};
};
--------------------------------------------------------------------------------


Function 3: mockPaginationV2List
Language: JavaScript
Lines: 30
Full Code:
--------------------------------------------------------------------------------
const mockPaginationV2List = (pages, initialArgs) => {
    let i = 1;
    const paramsLog = [];
    const spec = {
        method: 'GET',
        fullPath: '/v2/items',
        methodType: 'list',
    };

    const mockStripe = getMockStripe(
        {},
        (_1, _2, path, _4, _5, _6, _7, callback) => {
            paramsLog.push(path.slice(path.indexOf('?')));
            callback(
                null,
                Promise.resolve({
                    data: pages[i].ids.map((id) => ({id})),
                    next_page_url: pages[i].next_page_url,
                })
            );
            i += 1;
        }
    );
    const resource = new StripeResource(mockStripe);

    const paginator = makeAutoPaginationMethods(
        resource,
        initialArgs || {},
        spec,
        Promise.resolve({
            data: pages[0].ids.map((id) => ({id})),
            next_page_url: pages[0].next_page_url,
        })
    );
    return {paginator, paramsLog};
};
--------------------------------------------------------------------------------

================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-15T16:36:54.761Z
Question Type: select-all
Function: mockPaginationV1Search
Function Size: 1452 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: mockPaginationV1Search (JavaScript)\n// Mocks pagination for V1 search, simulating API responses based on provided page data.\n\nconst mockPaginationV1Search = (pages, initialArgs) => {\n    let i = 1;\n    const paramsLog = [];\n    const spec = {\n        method: 'GET',\n        methodType: '
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-15T16:36:56.601Z
Question Type: select-all
Function: forAwaitUntil
Function Size: 456 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: forAwaitUntil (JavaScript)\n// Collects items from an asynchronous iterator until a specified limit is reached.\n\nasync function forAwaitUntil(iterator, limit) {\n    const items = [];\n    for await (const item of iterator) {\n        items.push(item);\n        if (items.length === limit) {\n
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-15T16:36:59.899Z
Question Type: order-sequence
Function: forAwaitUntil
Function Size: 456 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: forAwaitUntil (JavaScript)\n// Collects items from an asynchronous iterator until a specified limit is reached.\n\nasync function forAwaitUntil(iterator, limit) {\n    const items = [];\n    for await (const item of iterator) {\n        items.push(item);\n        if (items.length === limit) {\n
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-15T16:37:07.772Z
Question Type: multiple-choice
Function: forAwaitUntil
Function Size: 456 characters
Questions Generated: 0
Repository: Unknown
Function Preview: // Function: forAwaitUntil (JavaScript)\n// Collects items from an asynchronous iterator until a specified limit is reached.\n\nasync function forAwaitUntil(iterator, limit) {\n    const items = [];\n    for await (const item of iterator) {\n        items.push(item);\n        if (items.length === limit) {\n
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-15T16:37:12.507Z
Question Type: true-false
Function: mockPaginationV2List
Function Size: 1117 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: mockPaginationV2List (JavaScript)\n// Mocks pagination for V2 list, simulating API responses based on provided page data.\n\nconst mockPaginationV2List = (pages, initialArgs) => {\n    let i = 1;\n    const paramsLog = [];\n    const spec = {\n        method: 'GET',\n        fullPath: '/v2/item
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-15T16:37:15.769Z
Question Type: function-variant
Function: mockPaginationV2List
Function Size: 1117 characters
Questions Generated: 0
Repository: Unknown
Function Preview: // Function: mockPaginationV2List (JavaScript)\n// Mocks pagination for V2 list, simulating API responses based on provided page data.\n\nconst mockPaginationV2List = (pages, initialArgs) => {\n    let i = 1;\n    const paramsLog = [];\n    const spec = {\n        method: 'GET',\n        fullPath: '/v2/item
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-15T16:37:24.214Z
Question Type: true-false
Function: mockPaginationV1Search
Function Size: 1452 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: mockPaginationV1Search (JavaScript)\n// Mocks pagination for V1 search, simulating API responses based on provided page data.\n\nconst mockPaginationV1Search = (pages, initialArgs) => {\n    let i = 1;\n    const paramsLog = [];\n    const spec = {\n        method: 'GET',\n        methodType: '
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-15T16:37:26.617Z
Question Type: function-variant
Function: mockPaginationV1Search
Function Size: 1452 characters
Questions Generated: 0
Repository: Unknown
Function Preview: // Function: mockPaginationV1Search (JavaScript)\n// Mocks pagination for V1 search, simulating API responses based on provided page data.\n\nconst mockPaginationV1Search = (pages, initialArgs) => {\n    let i = 1;\n    const paramsLog = [];\n    const spec = {\n        method: 'GET',\n        methodType: '
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-15T16:37:33.777Z
Question Type: select-all
Function: mockPaginationV2List
Function Size: 1117 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: mockPaginationV2List (JavaScript)\n// Mocks pagination for V2 list, simulating API responses based on provided page data.\n\nconst mockPaginationV2List = (pages, initialArgs) => {\n    let i = 1;\n    const paramsLog = [];\n    const spec = {\n        method: 'GET',\n        fullPath: '/v2/item
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-15T16:37:41.144Z
Question Type: order-sequence
Function: mockPaginationV2List
Function Size: 1117 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: mockPaginationV2List (JavaScript)\n// Mocks pagination for V2 list, simulating API responses based on provided page data.\n\nconst mockPaginationV2List = (pages, initialArgs) => {\n    let i = 1;\n    const paramsLog = [];\n    const spec = {\n        method: 'GET',\n        fullPath: '/v2/item
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-15T16:37:44.307Z
Question Type: select-all
Function: mockPaginationV1Search
Function Size: 1452 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: mockPaginationV1Search (JavaScript)\n// Mocks pagination for V1 search, simulating API responses based on provided page data.\n\nconst mockPaginationV1Search = (pages, initialArgs) => {\n    let i = 1;\n    const paramsLog = [];\n    const spec = {\n        method: 'GET',\n        methodType: '
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-15T16:37:44.447Z
Question Type: function-variant
Function: forAwaitUntil
Function Size: 456 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: forAwaitUntil (JavaScript)\n// Collects items from an asynchronous iterator until a specified limit is reached.\n\nasync function forAwaitUntil(iterator, limit) {\n    const items = [];\n    for await (const item of iterator) {\n        items.push(item);\n        if (items.length === limit) {\n
================================================================================


=== SESSION SUMMARY ===
Session ID: session-1760546051744
Repository: Unknown
Total Questions Generated: 9
Total Chunks Processed: 3
Ended: 2025-10-15T16:37:44.491Z
================================================================================


--- FUNCTION EXTRACTION ---
Timestamp: 2025-10-15T16:38:04.879Z
File: [4 files: Specific Stripe Error types:, HttpClient.ts, route.ts, errorClassNameEnum: The end of the section generated from our OpenAPI spec]
Functions Extracted: 3


Function 1: POST
Language: TypeScript
Lines: 12
Full Code:
--------------------------------------------------------------------------------
export async function POST(req: Request) {
  let event: Stripe.Event;

  try {
    const stripeSignature = (await headers()).get('stripe-signature');

    event = stripe.webhooks.constructEvent(
      await req.text(),
      stripeSignature as string,
      process.env.STRIPE_WEBHOOK_SECRET as string
    );
  } catch (err) {
    const errorMessage = err instanceof Error ? err.message : 'Unknown error';
  }
}
--------------------------------------------------------------------------------


Function 2: makeRequest
Language: TypeScript
Lines: 8
Full Code:
--------------------------------------------------------------------------------
makeRequest(
    host: string,
    port: string,
    path: string,
    method: string,
    headers: RequestHeaders,
    requestData: string,
    protocol: string,
    timeout: number
  ): Promise<HttpClientResponseInterface> {
    throw new Error('makeRequest not implemented.');
  }
--------------------------------------------------------------------------------


Function 3: makeTimeoutError
Language: TypeScript
Lines: 6
Full Code:
--------------------------------------------------------------------------------
static makeTimeoutError(): TimeoutError {
    const timeoutErr: TimeoutError = new TypeError(
      HttpClient.TIMEOUT_ERROR_CODE
    );
    timeoutErr.code = HttpClient.TIMEOUT_ERROR_CODE;
    return timeoutErr;
  }
--------------------------------------------------------------------------------

================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-15T16:38:14.465Z
Question Type: true-false
Function: POST
Function Size: 556 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: POST (TypeScript)\n// Handles incoming POST requests for Stripe webhooks, constructs the event from the request body and signature.\n\nexport async function POST(req: Request) {\n  let event: Stripe.Event;\n\n  try {\n    const stripeSignature = (await headers()).get('stripe-signature');\n\n    
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-15T16:38:20.686Z
Question Type: select-all
Function: POST
Function Size: 556 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: POST (TypeScript)\n// Handles incoming POST requests for Stripe webhooks, constructs the event from the request body and signature.\n\nexport async function POST(req: Request) {\n  let event: Stripe.Event;\n\n  try {\n    const stripeSignature = (await headers()).get('stripe-signature');\n\n    
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-15T16:38:21.492Z
Question Type: order-sequence
Function: makeRequest
Function Size: 432 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: makeRequest (TypeScript)\n// Defines the method to make an HTTP request to the Stripe API, which needs to be implemented by subclasses.\n\nmakeRequest(\n    host: string,\n    port: string,\n    path: string,\n    method: string,\n    headers: RequestHeaders,\n    requestData: string,\n    protoc
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-15T16:38:24.255Z
Question Type: order-sequence
Function: makeTimeoutError
Function Size: 361 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: makeTimeoutError (TypeScript)\n// Creates a standardized timeout error object for consistent error handling across implementations.\n\nstatic makeTimeoutError(): TimeoutError {\n    const timeoutErr: TimeoutError = new TypeError(\n      HttpClient.TIMEOUT_ERROR_CODE\n    );\n    timeoutErr.cod
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-15T16:38:26.543Z
Question Type: select-all
Function: POST
Function Size: 556 characters
Questions Generated: 0
Repository: Unknown
Function Preview: // Function: POST (TypeScript)\n// Handles incoming POST requests for Stripe webhooks, constructs the event from the request body and signature.\n\nexport async function POST(req: Request) {\n  let event: Stripe.Event;\n\n  try {\n    const stripeSignature = (await headers()).get('stripe-signature');\n\n    
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-15T16:38:35.630Z
Question Type: function-variant
Function: makeTimeoutError
Function Size: 361 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: makeTimeoutError (TypeScript)\n// Creates a standardized timeout error object for consistent error handling across implementations.\n\nstatic makeTimeoutError(): TimeoutError {\n    const timeoutErr: TimeoutError = new TypeError(\n      HttpClient.TIMEOUT_ERROR_CODE\n    );\n    timeoutErr.cod
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-15T16:38:36.443Z
Question Type: multiple-choice
Function: makeTimeoutError
Function Size: 361 characters
Questions Generated: 3
Repository: Unknown
Function Preview: // Function: makeTimeoutError (TypeScript)\n// Creates a standardized timeout error object for consistent error handling across implementations.\n\nstatic makeTimeoutError(): TimeoutError {\n    const timeoutErr: TimeoutError = new TypeError(\n      HttpClient.TIMEOUT_ERROR_CODE\n    );\n    timeoutErr.cod
================================================================================


=== SESSION SUMMARY ===
Session ID: session-1760546051744
Repository: Unknown
Total Questions Generated: 6
Total Chunks Processed: 3
Ended: 2025-10-15T16:38:36.476Z
================================================================================


--- QUESTION GENERATION ---
Timestamp: 2025-10-15T16:38:46.695Z
Question Type: multiple-choice
Function: forAwaitUntil
Function Size: 456 characters
Questions Generated: 3
Repository: Unknown
Function Preview: // Function: forAwaitUntil (JavaScript)\n// Collects items from an asynchronous iterator until a specified limit is reached.\n\nasync function forAwaitUntil(iterator, limit) {\n    const items = [];\n    for await (const item of iterator) {\n        items.push(item);\n        if (items.length === limit) {\n
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-15T16:38:49.139Z
Question Type: select-all
Function: makeTimeoutError
Function Size: 361 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: makeTimeoutError (TypeScript)\n// Creates a standardized timeout error object for consistent error handling across implementations.\n\nstatic makeTimeoutError(): TimeoutError {\n    const timeoutErr: TimeoutError = new TypeError(\n      HttpClient.TIMEOUT_ERROR_CODE\n    );\n    timeoutErr.cod
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-15T16:38:50.347Z
Question Type: true-false
Function: mockPaginationV2List
Function Size: 1117 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: mockPaginationV2List (JavaScript)\n// Mocks pagination for V2 list, simulating API responses based on provided page data.\n\nconst mockPaginationV2List = (pages, initialArgs) => {\n    let i = 1;\n    const paramsLog = [];\n    const spec = {\n        method: 'GET',\n        fullPath: '/v2/item
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-15T16:38:51.084Z
Question Type: select-all
Function: makeRequest
Function Size: 432 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: makeRequest (TypeScript)\n// Defines the method to make an HTTP request to the Stripe API, which needs to be implemented by subclasses.\n\nmakeRequest(\n    host: string,\n    port: string,\n    path: string,\n    method: string,\n    headers: RequestHeaders,\n    requestData: string,\n    protoc
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-15T16:38:56.987Z
Question Type: true-false
Function: makeTimeoutError
Function Size: 361 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: makeTimeoutError (TypeScript)\n// Creates a standardized timeout error object for consistent error handling across implementations.\n\nstatic makeTimeoutError(): TimeoutError {\n    const timeoutErr: TimeoutError = new TypeError(\n      HttpClient.TIMEOUT_ERROR_CODE\n    );\n    timeoutErr.cod
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-15T16:39:05.585Z
Question Type: select-all
Function: forAwaitUntil
Function Size: 456 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: forAwaitUntil (JavaScript)\n// Collects items from an asynchronous iterator until a specified limit is reached.\n\nasync function forAwaitUntil(iterator, limit) {\n    const items = [];\n    for await (const item of iterator) {\n        items.push(item);\n        if (items.length === limit) {\n
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-15T16:39:06.421Z
Question Type: order-sequence
Function: mockPaginationV1Search
Function Size: 1452 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: mockPaginationV1Search (JavaScript)\n// Mocks pagination for V1 search, simulating API responses based on provided page data.\n\nconst mockPaginationV1Search = (pages, initialArgs) => {\n    let i = 1;\n    const paramsLog = [];\n    const spec = {\n        method: 'GET',\n        methodType: '
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-15T16:39:09.761Z
Question Type: select-all
Function: POST
Function Size: 556 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: POST (TypeScript)\n// Handles incoming POST requests for Stripe webhooks, constructs the event from the request body and signature.\n\nexport async function POST(req: Request) {\n  let event: Stripe.Event;\n\n  try {\n    const stripeSignature = (await headers()).get('stripe-signature');\n\n    
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-15T16:39:16.745Z
Question Type: function-variant
Function: mockPaginationV1Search
Function Size: 1452 characters
Questions Generated: 0
Repository: Unknown
Function Preview: // Function: mockPaginationV1Search (JavaScript)\n// Mocks pagination for V1 search, simulating API responses based on provided page data.\n\nconst mockPaginationV1Search = (pages, initialArgs) => {\n    let i = 1;\n    const paramsLog = [];\n    const spec = {\n        method: 'GET',\n        methodType: '
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-15T16:39:24.209Z
Question Type: function-variant
Function: makeTimeoutError
Function Size: 361 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: makeTimeoutError (TypeScript)\n// Creates a standardized timeout error object for consistent error handling across implementations.\n\nstatic makeTimeoutError(): TimeoutError {\n    const timeoutErr: TimeoutError = new TypeError(\n      HttpClient.TIMEOUT_ERROR_CODE\n    );\n    timeoutErr.cod
================================================================================


=== SESSION SUMMARY ===
Session ID: session-1760546051744
Repository: Unknown
Total Questions Generated: 11
Total Chunks Processed: 6
Ended: 2025-10-15T16:39:24.249Z
================================================================================


--- FUNCTION EXTRACTION ---
Timestamp: 2025-10-15T17:08:16.846Z
File: [2 files: HttpClient.ts, FetchHttpClient.ts]
Functions Extracted: 2


Function 1: makeRequest
Language: TypeScript
Lines: 8
Full Code:
--------------------------------------------------------------------------------
makeRequest(
    host: string,
    port: string,
    path: string,
    method: string,
    headers: RequestHeaders,
    requestData: string,
    protocol: string,
    timeout: number
  ): Promise<HttpClientResponseInterface> {
    throw new Error('makeRequest not implemented.');
  }
--------------------------------------------------------------------------------


Function 2: makeTimeoutError
Language: TypeScript
Lines: 6
Full Code:
--------------------------------------------------------------------------------
static makeTimeoutError(): TimeoutError {
    const timeoutErr: TimeoutError = new TypeError(
      HttpClient.TIMEOUT_ERROR_CODE
    );
    timeoutErr.code = HttpClient.TIMEOUT_ERROR_CODE;
    return timeoutErr;
  }
--------------------------------------------------------------------------------

================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-15T17:08:28.073Z
Question Type: select-all
Function: makeRequest
Function Size: 406 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: makeRequest (TypeScript)\n// Defines the structure for making HTTP requests, to be implemented by subclasses.\n\nmakeRequest(\n    host: string,\n    port: string,\n    path: string,\n    method: string,\n    headers: RequestHeaders,\n    requestData: string,\n    protocol: string,\n    timeout: n
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-15T17:08:36.561Z
Question Type: function-variant
Function: makeRequest
Function Size: 406 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: makeRequest (TypeScript)\n// Defines the structure for making HTTP requests, to be implemented by subclasses.\n\nmakeRequest(\n    host: string,\n    port: string,\n    path: string,\n    method: string,\n    headers: RequestHeaders,\n    requestData: string,\n    protocol: string,\n    timeout: n
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-15T17:08:36.947Z
Question Type: function-variant
Function: makeRequest
Function Size: 406 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: makeRequest (TypeScript)\n// Defines the structure for making HTTP requests, to be implemented by subclasses.\n\nmakeRequest(\n    host: string,\n    port: string,\n    path: string,\n    method: string,\n    headers: RequestHeaders,\n    requestData: string,\n    protocol: string,\n    timeout: n
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-15T17:08:37.768Z
Question Type: select-all
Function: makeTimeoutError
Function Size: 322 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: makeTimeoutError (TypeScript)\n// Creates a consistent timeout error across implementations.\n\nstatic makeTimeoutError(): TimeoutError {\n    const timeoutErr: TimeoutError = new TypeError(\n      HttpClient.TIMEOUT_ERROR_CODE\n    );\n    timeoutErr.code = HttpClient.TIMEOUT_ERROR_CODE;\n    
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-15T17:08:42.085Z
Question Type: function-variant
Function: makeRequest
Function Size: 406 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: makeRequest (TypeScript)\n// Defines the structure for making HTTP requests, to be implemented by subclasses.\n\nmakeRequest(\n    host: string,\n    port: string,\n    path: string,\n    method: string,\n    headers: RequestHeaders,\n    requestData: string,\n    protocol: string,\n    timeout: n
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-15T17:08:44.423Z
Question Type: true-false
Function: makeTimeoutError
Function Size: 322 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: makeTimeoutError (TypeScript)\n// Creates a consistent timeout error across implementations.\n\nstatic makeTimeoutError(): TimeoutError {\n    const timeoutErr: TimeoutError = new TypeError(\n      HttpClient.TIMEOUT_ERROR_CODE\n    );\n    timeoutErr.code = HttpClient.TIMEOUT_ERROR_CODE;\n    
================================================================================


=== SESSION SUMMARY ===
Session ID: session-1760546051744
Repository: Unknown
Total Questions Generated: 6
Total Chunks Processed: 2
Ended: 2025-10-15T17:08:44.450Z
================================================================================


--- FUNCTION EXTRACTION ---
Timestamp: 2025-10-15T17:09:05.270Z
File: eslint-disable-next-line no-await-in-loop
Functions Extracted: 3


Function 1: forAwaitUntil
Language: JavaScript
Lines: 10
Full Code:
--------------------------------------------------------------------------------
async function forAwaitUntil(iterator, limit) {
  const items = [];
  for await (const item of iterator) {
    items.push(item);
    if (items.length === limit) {
      break;
    }
    if (items.length > limit) {
      throw Error('Kept iterating after break.');
    }
  }
  return items;
}
--------------------------------------------------------------------------------


Function 2: mockPaginationV1Search
Language: JavaScript
Lines: 38
Full Code:
--------------------------------------------------------------------------------
const mockPaginationV1Search = (pages, initialArgs) => {
  let i = 1;
  const paramsLog = [];
  const spec = {
    method: 'GET',
    methodType: 'search',
  };

  const addNextPage = (props) => {
    const nextPageProperties = {
      next_page: props.has_more
        ? `${props.data[props.data.length - 1].id}-encoded`
        : null,
    };
    return {...props, ...nextPageProperties};
  };

  const mockStripe = getMockStripe(
    {},
    (_1, _2, path, _4, _5, _6, _7, callback) => {
      paramsLog.push(path.slice(path.indexOf('?')));

      callback(
        null,
        Promise.resolve(
          addNextPage({
            data: pages[i].map((id) => ({id})),
            has_more: i < pages.length - 1,
          })
        )
      );
      i += 1;
    }
  );
  const resource = new StripeResource(mockStripe);

  const paginator = makeAutoPaginationMethods(
    resource,
    initialArgs || {},
    spec,
    Promise.resolve(
      addNextPage({
        data: pages[0].map((id) => ({id})),
        has_more: pages.length > 1,
      })
    )
  );
  return {paginator, paramsLog};
};
--------------------------------------------------------------------------------


Function 3: mockPaginationV2List
Language: JavaScript
Lines: 38
Full Code:
--------------------------------------------------------------------------------
const mockPaginationV2List = (pages, initialArgs) => {
  let i = 1;
  const paramsLog = [];
  const spec = {
    method: 'GET',
    fullPath: '/v2/items',
    methodType: 'list',
  };

  const mockStripe = getMockStripe(
    {},
    (_1, _2, path, _4, _5, _6, _7, callback) => {
      paramsLog.push(path.slice(path.indexOf('?')));
      callback(
        null,
        Promise.resolve({
          data: pages[i].ids.map((id) => ({id})),
          next_page_url: pages[i].next_page_url,
        })
      );
      i += 1;
    }
  );
  const resource = new StripeResource(mockStripe);

  const paginator = makeAutoPaginationMethods(
    resource,
    initialArgs || {},
    spec,
    Promise.resolve({
      data: pages[0].ids.map((id) => ({id})),
      next_page_url: pages[0].next_page_url,
    })
  );
  return {paginator, paramsLog};
};
--------------------------------------------------------------------------------

================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-15T17:09:20.076Z
Question Type: true-false
Function: mockPaginationV1Search
Function Size: 1242 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: mockPaginationV1Search (JavaScript)\n// Mocks a pagination function for V1 search results, simulating the retrieval of pages of data.\n\nconst mockPaginationV1Search = (pages, initialArgs) => {\n  let i = 1;\n  const paramsLog = [];\n  const spec = {\n    method: 'GET',\n    methodType: 'search
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-15T17:09:23.213Z
Question Type: select-all
Function: mockPaginationV1Search
Function Size: 1242 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: mockPaginationV1Search (JavaScript)\n// Mocks a pagination function for V1 search results, simulating the retrieval of pages of data.\n\nconst mockPaginationV1Search = (pages, initialArgs) => {\n  let i = 1;\n  const paramsLog = [];\n  const spec = {\n    method: 'GET',\n    methodType: 'search
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-15T17:09:23.638Z
Question Type: function-variant
Function: forAwaitUntil
Function Size: 416 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: forAwaitUntil (JavaScript)\n// Collects items from an asynchronous iterator until a specified limit is reached.\n\nasync function forAwaitUntil(iterator, limit) {\n  const items = [];\n  for await (const item of iterator) {\n    items.push(item);\n    if (items.length === limit) {\n      break;
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-15T17:09:24.038Z
Question Type: select-all
Function: mockPaginationV1Search
Function Size: 1242 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: mockPaginationV1Search (JavaScript)\n// Mocks a pagination function for V1 search results, simulating the retrieval of pages of data.\n\nconst mockPaginationV1Search = (pages, initialArgs) => {\n  let i = 1;\n  const paramsLog = [];\n  const spec = {\n    method: 'GET',\n    methodType: 'search
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-15T17:09:35.750Z
Question Type: select-all
Function: mockPaginationV2List
Function Size: 981 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: mockPaginationV2List (JavaScript)\n// Mocks a pagination function for V2 list results, simulating the retrieval of pages of data.\n\nconst mockPaginationV2List = (pages, initialArgs) => {\n  let i = 1;\n  const paramsLog = [];\n  const spec = {\n    method: 'GET',\n    fullPath: '/v2/items',\n  
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-15T17:09:35.815Z
Question Type: select-all
Function: mockPaginationV2List
Function Size: 981 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: mockPaginationV2List (JavaScript)\n// Mocks a pagination function for V2 list results, simulating the retrieval of pages of data.\n\nconst mockPaginationV2List = (pages, initialArgs) => {\n  let i = 1;\n  const paramsLog = [];\n  const spec = {\n    method: 'GET',\n    fullPath: '/v2/items',\n  
================================================================================


=== SESSION SUMMARY ===
Session ID: session-1760546051744
Repository: Unknown
Total Questions Generated: 6
Total Chunks Processed: 3
Ended: 2025-10-15T17:09:35.833Z
================================================================================


--- FUNCTION EXTRACTION ---
Timestamp: 2025-10-15T17:10:22.823Z
File: We can't use .flat() since this isn't supported in Node 10.
Functions Extracted: 3


Function 1: onCustomer
Language: JavaScript
Lines: 7
Full Code:
--------------------------------------------------------------------------------
function onCustomer(customer, next) {
  customerIds.push(customer.id);
  if (customerIds.length === LIMIT) {
    next(false);
  } else {
    expect(customerIds.length).to.be.lessThan(LIMIT);
    next();
  }
}
--------------------------------------------------------------------------------


Function 2: onCustomer
Language: JavaScript
Lines: 6
Full Code:
--------------------------------------------------------------------------------
function onCustomer(customer) {
  customerIds.push(customer.id);
  if (customerIds.length === LIMIT) {
    return false;
  } else {
    expect(customerIds.length).to.be.lessThan(LIMIT);
  }
}
--------------------------------------------------------------------------------


Function 3: onCustomer
Language: JavaScript
Lines: 7
Full Code:
--------------------------------------------------------------------------------
function onCustomer(customer) {
  customerIds.push(customer.id);
  if (customerIds.length === LIMIT) {
    return Promise.resolve(false);
  } else {
    expect(customerIds.length).to.be.lessThan(LIMIT);
    return Promise.resolve();
  }
}
--------------------------------------------------------------------------------

================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-15T17:10:31.564Z
Question Type: select-all
Function: onCustomer
Function Size: 381 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: onCustomer (JavaScript)\n// Handles each customer and returns a promise, allowing for asynchronous control of the iteration flow.\n\nfunction onCustomer(customer) {\n  customerIds.push(customer.id);\n  if (customerIds.length === LIMIT) {\n    return Promise.resolve(false);\n  } else {\n    expe
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-15T17:10:32.466Z
Question Type: select-all
Function: onCustomer
Function Size: 336 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: onCustomer (JavaScript)\n// Processes each customer and allows breaking the iteration by returning false when the limit is reached.\n\nfunction onCustomer(customer) {\n  customerIds.push(customer.id);\n  if (customerIds.length === LIMIT) {\n    return false;\n  } else {\n    expect(customerIds.
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-15T17:10:36.609Z
Question Type: function-variant
Function: onCustomer
Function Size: 381 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: onCustomer (JavaScript)\n// Handles each customer and returns a promise, allowing for asynchronous control of the iteration flow.\n\nfunction onCustomer(customer) {\n  customerIds.push(customer.id);\n  if (customerIds.length === LIMIT) {\n    return Promise.resolve(false);\n  } else {\n    expe
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-15T17:10:36.865Z
Question Type: function-variant
Function: onCustomer
Function Size: 381 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: onCustomer (JavaScript)\n// Handles each customer and returns a promise, allowing for asynchronous control of the iteration flow.\n\nfunction onCustomer(customer) {\n  customerIds.push(customer.id);\n  if (customerIds.length === LIMIT) {\n    return Promise.resolve(false);\n  } else {\n    expe
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-15T17:10:39.947Z
Question Type: select-all
Function: onCustomer
Function Size: 355 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: onCustomer (JavaScript)\n// Handles each customer in the pagination, pushing their ID to an array and controlling the iteration flow.\n\nfunction onCustomer(customer, next) {\n  customerIds.push(customer.id);\n  if (customerIds.length === LIMIT) {\n    next(false);\n  } else {\n    expect(custo
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-15T17:10:43.305Z
Question Type: select-all
Function: onCustomer
Function Size: 355 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: onCustomer (JavaScript)\n// Handles each customer in the pagination, pushing their ID to an array and controlling the iteration flow.\n\nfunction onCustomer(customer, next) {\n  customerIds.push(customer.id);\n  if (customerIds.length === LIMIT) {\n    next(false);\n  } else {\n    expect(custo
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-15T17:10:46.599Z
Question Type: multiple-choice
Function: onCustomer
Function Size: 336 characters
Questions Generated: 3
Repository: Unknown
Function Preview: // Function: onCustomer (JavaScript)\n// Processes each customer and allows breaking the iteration by returning false when the limit is reached.\n\nfunction onCustomer(customer) {\n  customerIds.push(customer.id);\n  if (customerIds.length === LIMIT) {\n    return false;\n  } else {\n    expect(customerIds.
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-15T17:10:53.650Z
Question Type: function-variant
Function: onCustomer
Function Size: 336 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: onCustomer (JavaScript)\n// Processes each customer and allows breaking the iteration by returning false when the limit is reached.\n\nfunction onCustomer(customer) {\n  customerIds.push(customer.id);\n  if (customerIds.length === LIMIT) {\n    return false;\n  } else {\n    expect(customerIds.
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-15T17:10:54.719Z
Question Type: function-variant
Function: onCustomer
Function Size: 336 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: onCustomer (JavaScript)\n// Processes each customer and allows breaking the iteration by returning false when the limit is reached.\n\nfunction onCustomer(customer) {\n  customerIds.push(customer.id);\n  if (customerIds.length === LIMIT) {\n    return false;\n  } else {\n    expect(customerIds.
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-15T17:10:56.658Z
Question Type: order-sequence
Function: onCustomer
Function Size: 355 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: onCustomer (JavaScript)\n// Handles each customer in the pagination, pushing their ID to an array and controlling the iteration flow.\n\nfunction onCustomer(customer, next) {\n  customerIds.push(customer.id);\n  if (customerIds.length === LIMIT) {\n    next(false);\n  } else {\n    expect(custo
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-15T17:10:57.244Z
Question Type: select-all
Function: onCustomer
Function Size: 381 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: onCustomer (JavaScript)\n// Handles each customer and returns a promise, allowing for asynchronous control of the iteration flow.\n\nfunction onCustomer(customer) {\n  customerIds.push(customer.id);\n  if (customerIds.length === LIMIT) {\n    return Promise.resolve(false);\n  } else {\n    expe
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-15T17:10:57.804Z
Question Type: true-false
Function: onCustomer
Function Size: 381 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: onCustomer (JavaScript)\n// Handles each customer and returns a promise, allowing for asynchronous control of the iteration flow.\n\nfunction onCustomer(customer) {\n  customerIds.push(customer.id);\n  if (customerIds.length === LIMIT) {\n    return Promise.resolve(false);\n  } else {\n    expe
================================================================================


=== SESSION SUMMARY ===
Session ID: session-1760546051744
Repository: Unknown
Total Questions Generated: 14
Total Chunks Processed: 3
Ended: 2025-10-15T17:10:57.822Z
================================================================================


--- FUNCTION EXTRACTION ---
Timestamp: 2025-10-15T17:30:59.076Z
File: calcom-cal.com-94ae3a5/apps/api/v2/src/ee/event-types/event-types_2024_04_15/outputs/get-event-type-public.output.ts
Functions Extracted: 2


Function 1: GetEventTypePublicOutput
Language: TypeScript
Lines: 10
Full Code:
--------------------------------------------------------------------------------
export class GetEventTypePublicOutput {
  @ApiProperty({ example: SUCCESS_STATUS, enum: [SUCCESS_STATUS, ERROR_STATUS] })
  @IsEnum([SUCCESS_STATUS, ERROR_STATUS])
  status!: typeof SUCCESS_STATUS | typeof ERROR_STATUS;

  @ValidateNested({ each: true })
  @Type(() => PublicEventTypeOutput)
  @IsArray()
  data!: PublicEventTypeOutput | null;
}
--------------------------------------------------------------------------------


Function 2: PublicEventTypeOutput
Language: TypeScript
Lines: 66
Full Code:
--------------------------------------------------------------------------------
class PublicEventTypeOutput {
  @IsInt()
  @ApiProperty()
  id!: number;

  @IsString()
  @ApiProperty()
  title!: string;

  @IsString()
  @ApiProperty()
  description!: string;

  @IsString()
  @IsOptional()
  @ApiPropertyOptional({ type: String, nullable: true })
  eventName?: string | null;

  @IsString()
  @ApiProperty()
  slug!: string;

  @IsBoolean()
  @ApiProperty()
  isInstantEvent!: boolean;

  @IsOptional()
  @ApiPropertyOptional()
  aiPhoneCallConfig?: any;

  @IsOptional()
  @ApiPropertyOptional()
  schedulingType?: any;

  @IsInt()
  @ApiProperty()
  length!: number;

  @IsArray()
  @ValidateNested({ each: true })
  @Type(() => Location)
  @ApiProperty({ type: [Location] })
  locations!: Location[];

  @IsArray()
  @ApiProperty({ type: [Object] })
  customInputs!: any[];

  @IsBoolean()
  @ApiProperty()
  disableGuests!: boolean;

  @IsObject()
  @ApiProperty({ type: Object, nullable: true })
  metadata!: object | null;

  @IsBoolean()
  @ApiProperty()
  lockTimeZoneToggleOnBookingPage!: boolean;

  @IsBoolean()
  @ApiProperty()
  requiresConfirmation!: boolean;

  @IsBoolean()
  @ApiProperty()
  requiresBookerEmailVerification!: boolean;

  @IsOptional()
  @ApiPropertyOptional()
  recurringEvent?: any;

  @IsNumber()
  @ApiProperty()
  price!: number;

  @IsString()
  @ApiProperty()
  currency!: string;

  @IsOptional()
  @ApiPropertyOptional({ type: Number, nullable: true })
  seatsPerTimeSlot?: number | null;

  @IsBoolean()
  @ApiProperty({ type: Boolean, nullable: true })
  seatsShowAvailabilityCount!: boolean | null;

  @IsArray()
  @ValidateNested({ each: true })
  @Type(() => BookingField)
  @ApiProperty({ type: [BookingField] })
  bookingFields!: BookingField[];

  @IsOptional()
  @ApiPropertyOptional()
  team?: any;

  @IsOptional()
  @IsUrl()
  @ApiPropertyOptional({ type: String, nullable: true })
  successRedirectUrl?: string | null;

  @IsArray()
  @ApiProperty()
  workflows!: any[];

  @IsArray()
  @ApiPropertyOptional()
  hosts?: any[];

  @ValidateNested()
  @Type(() => Owner)
  @ApiProperty({ type: Owner, nullable: true })
  owner!: Owner | null;

  @ValidateNested()
  @Type(() => Schedule)
  @ApiProperty({ type: Schedule, nullable: true })
  schedule!: Schedule | null;

  @IsBoolean()
  @ApiProperty()
  hidden!: boolean;

  @IsBoolean()
  @ApiProperty()
  assignAllTeamMembers!: boolean;

  @IsOptional()
  @ApiPropertyOptional()
  bookerLayouts?: any;

  @IsArray()
  @ValidateNested({ each: true })
  @Type(() => User)
  @ApiPropertyOptional({ type: [User] })
  users?: User[];

  @IsObject()
  @ApiProperty({ type: Object })
  entity!: object;

  @IsBoolean()
  isDynamic!: boolean;
}
--------------------------------------------------------------------------------

================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-15T17:31:13.452Z
Question Type: order-sequence
Function: PublicEventTypeOutput
Function Size: 2826 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: PublicEventTypeOutput (TypeScript)\n// Defines the structure of a public event type with various properties including id, title, description, and more.\n\nclass PublicEventTypeOutput {\n  @IsInt()\n  @ApiProperty()\n  id!: number;\n\n  @IsString()\n  @ApiProperty()\n  title!: string;\n\n  @IsString
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-15T17:31:20.350Z
Question Type: function-variant
Function: GetEventTypePublicOutput
Function Size: 488 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: GetEventTypePublicOutput (TypeScript)\n// Defines the output structure for getting public event types, including status and data.\n\nexport class GetEventTypePublicOutput {\n  @ApiProperty({ example: SUCCESS_STATUS, enum: [SUCCESS_STATUS, ERROR_STATUS] })\n  @IsEnum([SUCCESS_STATUS, ERROR_ST
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-15T17:31:24.121Z
Question Type: true-false
Function: PublicEventTypeOutput
Function Size: 2826 characters
Questions Generated: 0
Repository: Unknown
Function Preview: // Function: PublicEventTypeOutput (TypeScript)\n// Defines the structure of a public event type with various properties including id, title, description, and more.\n\nclass PublicEventTypeOutput {\n  @IsInt()\n  @ApiProperty()\n  id!: number;\n\n  @IsString()\n  @ApiProperty()\n  title!: string;\n\n  @IsString
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-15T17:31:25.219Z
Question Type: select-all
Function: PublicEventTypeOutput
Function Size: 2826 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: PublicEventTypeOutput (TypeScript)\n// Defines the structure of a public event type with various properties including id, title, description, and more.\n\nclass PublicEventTypeOutput {\n  @IsInt()\n  @ApiProperty()\n  id!: number;\n\n  @IsString()\n  @ApiProperty()\n  title!: string;\n\n  @IsString
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-15T17:31:35.075Z
Question Type: multiple-choice
Function: PublicEventTypeOutput
Function Size: 2826 characters
Questions Generated: 0
Repository: Unknown
Function Preview: // Function: PublicEventTypeOutput (TypeScript)\n// Defines the structure of a public event type with various properties including id, title, description, and more.\n\nclass PublicEventTypeOutput {\n  @IsInt()\n  @ApiProperty()\n  id!: number;\n\n  @IsString()\n  @ApiProperty()\n  title!: string;\n\n  @IsString
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-15T17:31:43.469Z
Question Type: function-variant
Function: PublicEventTypeOutput
Function Size: 2826 characters
Questions Generated: 0
Repository: Unknown
Function Preview: // Function: PublicEventTypeOutput (TypeScript)\n// Defines the structure of a public event type with various properties including id, title, description, and more.\n\nclass PublicEventTypeOutput {\n  @IsInt()\n  @ApiProperty()\n  id!: number;\n\n  @IsString()\n  @ApiProperty()\n  title!: string;\n\n  @IsString
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-15T17:31:47.989Z
Question Type: function-variant
Function: GetEventTypePublicOutput
Function Size: 488 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: GetEventTypePublicOutput (TypeScript)\n// Defines the output structure for getting public event types, including status and data.\n\nexport class GetEventTypePublicOutput {\n  @ApiProperty({ example: SUCCESS_STATUS, enum: [SUCCESS_STATUS, ERROR_STATUS] })\n  @IsEnum([SUCCESS_STATUS, ERROR_ST
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-15T17:31:52.789Z
Question Type: select-all
Function: PublicEventTypeOutput
Function Size: 2826 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: PublicEventTypeOutput (TypeScript)\n// Defines the structure of a public event type with various properties including id, title, description, and more.\n\nclass PublicEventTypeOutput {\n  @IsInt()\n  @ApiProperty()\n  id!: number;\n\n  @IsString()\n  @ApiProperty()\n  title!: string;\n\n  @IsString
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-15T17:31:56.160Z
Question Type: true-false
Function: GetEventTypePublicOutput
Function Size: 488 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: GetEventTypePublicOutput (TypeScript)\n// Defines the output structure for getting public event types, including status and data.\n\nexport class GetEventTypePublicOutput {\n  @ApiProperty({ example: SUCCESS_STATUS, enum: [SUCCESS_STATUS, ERROR_STATUS] })\n  @IsEnum([SUCCESS_STATUS, ERROR_ST
================================================================================


=== SESSION SUMMARY ===
Session ID: session-1760546051744
Repository: Unknown
Total Questions Generated: 6
Total Chunks Processed: 2
Ended: 2025-10-15T17:31:56.174Z
================================================================================


--- FUNCTION EXTRACTION ---
Timestamp: 2025-10-15T17:32:03.601Z
File: [2 files: get-booking.output.ts, get-bookings.output.ts]
Functions Extracted: 2


Function 1: GetBookingOutput_2024_04_15
Language: TypeScript
Lines: 10
Full Code:
--------------------------------------------------------------------------------
export class GetBookingOutput_2024_04_15 {
  @ApiProperty({ example: SUCCESS_STATUS, enum: [SUCCESS_STATUS, ERROR_STATUS] })
  @IsEnum([SUCCESS_STATUS, ERROR_STATUS])
  status!: typeof SUCCESS_STATUS | typeof ERROR_STATUS;

  @ApiProperty({
    type: GetBookingData_2024_04_15,
  })
  @ValidateNested()
  @Type(() => GetBookingData_2024_04_15)
  data!: GetBookingData_2024_04_15;
}
--------------------------------------------------------------------------------


Function 2: GetBookingsOutput_2024_04_15
Language: TypeScript
Lines: 10
Full Code:
--------------------------------------------------------------------------------
export class GetBookingsOutput_2024_04_15 {
  @ApiProperty({ example: SUCCESS_STATUS, enum: [SUCCESS_STATUS, ERROR_STATUS], type: String })
  @IsEnum([SUCCESS_STATUS, ERROR_STATUS])
  status!: typeof SUCCESS_STATUS | typeof ERROR_STATUS;

  @ApiProperty({
    type: GetBookingsData_2024_04_15,
  })
  @ValidateNested()
  @Type(() => GetBookingsData_2024_04_15)
  data!: GetBookingsData_2024_04_15;
}
--------------------------------------------------------------------------------

================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-15T17:32:10.706Z
Question Type: true-false
Function: GetBookingsOutput_2024_04_15
Function Size: 521 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: GetBookingsOutput_2024_04_15 (TypeScript)\n// Defines the output structure for retrieving multiple bookings.\n\nexport class GetBookingsOutput_2024_04_15 {\n  @ApiProperty({ example: SUCCESS_STATUS, enum: [SUCCESS_STATUS, ERROR_STATUS], type: String })\n  @IsEnum([SUCCESS_STATUS, ERROR_STATU
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-15T17:32:14.548Z
Question Type: select-all
Function: GetBookingsOutput_2024_04_15
Function Size: 521 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: GetBookingsOutput_2024_04_15 (TypeScript)\n// Defines the output structure for retrieving multiple bookings.\n\nexport class GetBookingsOutput_2024_04_15 {\n  @ApiProperty({ example: SUCCESS_STATUS, enum: [SUCCESS_STATUS, ERROR_STATUS], type: String })\n  @IsEnum([SUCCESS_STATUS, ERROR_STATU
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-15T17:32:20.383Z
Question Type: select-all
Function: GetBookingOutput_2024_04_15
Function Size: 503 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: GetBookingOutput_2024_04_15 (TypeScript)\n// Defines the output structure for a booking retrieval operation.\n\nexport class GetBookingOutput_2024_04_15 {\n  @ApiProperty({ example: SUCCESS_STATUS, enum: [SUCCESS_STATUS, ERROR_STATUS] })\n  @IsEnum([SUCCESS_STATUS, ERROR_STATUS])\n  status!: 
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-15T17:32:25.553Z
Question Type: select-all
Function: GetBookingOutput_2024_04_15
Function Size: 503 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: GetBookingOutput_2024_04_15 (TypeScript)\n// Defines the output structure for a booking retrieval operation.\n\nexport class GetBookingOutput_2024_04_15 {\n  @ApiProperty({ example: SUCCESS_STATUS, enum: [SUCCESS_STATUS, ERROR_STATUS] })\n  @IsEnum([SUCCESS_STATUS, ERROR_STATUS])\n  status!: 
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-15T17:32:26.269Z
Question Type: order-sequence
Function: GetBookingOutput_2024_04_15
Function Size: 503 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: GetBookingOutput_2024_04_15 (TypeScript)\n// Defines the output structure for a booking retrieval operation.\n\nexport class GetBookingOutput_2024_04_15 {\n  @ApiProperty({ example: SUCCESS_STATUS, enum: [SUCCESS_STATUS, ERROR_STATUS] })\n  @IsEnum([SUCCESS_STATUS, ERROR_STATUS])\n  status!: 
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-15T17:32:26.815Z
Question Type: function-variant
Function: GetBookingsOutput_2024_04_15
Function Size: 521 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: GetBookingsOutput_2024_04_15 (TypeScript)\n// Defines the output structure for retrieving multiple bookings.\n\nexport class GetBookingsOutput_2024_04_15 {\n  @ApiProperty({ example: SUCCESS_STATUS, enum: [SUCCESS_STATUS, ERROR_STATUS], type: String })\n  @IsEnum([SUCCESS_STATUS, ERROR_STATU
================================================================================


=== SESSION SUMMARY ===
Session ID: session-1760546051744
Repository: Unknown
Total Questions Generated: 6
Total Chunks Processed: 2
Ended: 2025-10-15T17:32:26.841Z
================================================================================


--- QUESTION GENERATION ---
Timestamp: 2025-10-15T17:33:09.875Z
Question Type: select-all
Function: GetBookingOutput_2024_04_15
Function Size: 503 characters
Questions Generated: 0
Repository: Unknown
Function Preview: // Function: GetBookingOutput_2024_04_15 (TypeScript)\n// Defines the output structure for a booking retrieval operation.\n\nexport class GetBookingOutput_2024_04_15 {\n  @ApiProperty({ example: SUCCESS_STATUS, enum: [SUCCESS_STATUS, ERROR_STATUS] })\n  @IsEnum([SUCCESS_STATUS, ERROR_STATUS])\n  status!: 
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-15T17:33:10.726Z
Question Type: select-all
Function: GetEventTypePublicOutput
Function Size: 488 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: GetEventTypePublicOutput (TypeScript)\n// Defines the output structure for getting public event types, including status and data.\n\nexport class GetEventTypePublicOutput {\n  @ApiProperty({ example: SUCCESS_STATUS, enum: [SUCCESS_STATUS, ERROR_STATUS] })\n  @IsEnum([SUCCESS_STATUS, ERROR_ST
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-15T17:33:22.474Z
Question Type: true-false
Function: PublicEventTypeOutput
Function Size: 2826 characters
Questions Generated: 0
Repository: Unknown
Function Preview: // Function: PublicEventTypeOutput (TypeScript)\n// Defines the structure of a public event type with various properties including id, title, description, and more.\n\nclass PublicEventTypeOutput {\n  @IsInt()\n  @ApiProperty()\n  id!: number;\n\n  @IsString()\n  @ApiProperty()\n  title!: string;\n\n  @IsString
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-15T17:33:23.649Z
Question Type: function-variant
Function: GetEventTypePublicOutput
Function Size: 488 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: GetEventTypePublicOutput (TypeScript)\n// Defines the output structure for getting public event types, including status and data.\n\nexport class GetEventTypePublicOutput {\n  @ApiProperty({ example: SUCCESS_STATUS, enum: [SUCCESS_STATUS, ERROR_STATUS] })\n  @IsEnum([SUCCESS_STATUS, ERROR_ST
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-15T17:33:26.171Z
Question Type: order-sequence
Function: GetBookingOutput_2024_04_15
Function Size: 503 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: GetBookingOutput_2024_04_15 (TypeScript)\n// Defines the output structure for a booking retrieval operation.\n\nexport class GetBookingOutput_2024_04_15 {\n  @ApiProperty({ example: SUCCESS_STATUS, enum: [SUCCESS_STATUS, ERROR_STATUS] })\n  @IsEnum([SUCCESS_STATUS, ERROR_STATUS])\n  status!: 
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-15T17:33:30.678Z
Question Type: function-variant
Function: GetBookingOutput_2024_04_15
Function Size: 503 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: GetBookingOutput_2024_04_15 (TypeScript)\n// Defines the output structure for a booking retrieval operation.\n\nexport class GetBookingOutput_2024_04_15 {\n  @ApiProperty({ example: SUCCESS_STATUS, enum: [SUCCESS_STATUS, ERROR_STATUS] })\n  @IsEnum([SUCCESS_STATUS, ERROR_STATUS])\n  status!: 
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-15T17:33:32.252Z
Question Type: multiple-choice
Function: GetBookingsOutput_2024_04_15
Function Size: 521 characters
Questions Generated: 3
Repository: Unknown
Function Preview: // Function: GetBookingsOutput_2024_04_15 (TypeScript)\n// Defines the output structure for retrieving multiple bookings.\n\nexport class GetBookingsOutput_2024_04_15 {\n  @ApiProperty({ example: SUCCESS_STATUS, enum: [SUCCESS_STATUS, ERROR_STATUS], type: String })\n  @IsEnum([SUCCESS_STATUS, ERROR_STATU
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-15T17:33:41.635Z
Question Type: select-all
Function: GetBookingsOutput_2024_04_15
Function Size: 521 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: GetBookingsOutput_2024_04_15 (TypeScript)\n// Defines the output structure for retrieving multiple bookings.\n\nexport class GetBookingsOutput_2024_04_15 {\n  @ApiProperty({ example: SUCCESS_STATUS, enum: [SUCCESS_STATUS, ERROR_STATUS], type: String })\n  @IsEnum([SUCCESS_STATUS, ERROR_STATU
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-15T17:33:51.166Z
Question Type: function-variant
Function: GetEventTypePublicOutput
Function Size: 488 characters
Questions Generated: 0
Repository: Unknown
Function Preview: // Function: GetEventTypePublicOutput (TypeScript)\n// Defines the output structure for getting public event types, including status and data.\n\nexport class GetEventTypePublicOutput {\n  @ApiProperty({ example: SUCCESS_STATUS, enum: [SUCCESS_STATUS, ERROR_STATUS] })\n  @IsEnum([SUCCESS_STATUS, ERROR_ST
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-15T17:33:53.679Z
Question Type: function-variant
Function: PublicEventTypeOutput
Function Size: 2826 characters
Questions Generated: 0
Repository: Unknown
Function Preview: // Function: PublicEventTypeOutput (TypeScript)\n// Defines the structure of a public event type with various properties including id, title, description, and more.\n\nclass PublicEventTypeOutput {\n  @IsInt()\n  @ApiProperty()\n  id!: number;\n\n  @IsString()\n  @ApiProperty()\n  title!: string;\n\n  @IsString
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-15T17:33:57.973Z
Question Type: order-sequence
Function: GetBookingsOutput_2024_04_15
Function Size: 521 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: GetBookingsOutput_2024_04_15 (TypeScript)\n// Defines the output structure for retrieving multiple bookings.\n\nexport class GetBookingsOutput_2024_04_15 {\n  @ApiProperty({ example: SUCCESS_STATUS, enum: [SUCCESS_STATUS, ERROR_STATUS], type: String })\n  @IsEnum([SUCCESS_STATUS, ERROR_STATU
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-15T17:33:59.546Z
Question Type: select-all
Function: PublicEventTypeOutput
Function Size: 2826 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: PublicEventTypeOutput (TypeScript)\n// Defines the structure of a public event type with various properties including id, title, description, and more.\n\nclass PublicEventTypeOutput {\n  @IsInt()\n  @ApiProperty()\n  id!: number;\n\n  @IsString()\n  @ApiProperty()\n  title!: string;\n\n  @IsString
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-15T17:34:06.724Z
Question Type: true-false
Function: GetEventTypePublicOutput
Function Size: 488 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: GetEventTypePublicOutput (TypeScript)\n// Defines the output structure for getting public event types, including status and data.\n\nexport class GetEventTypePublicOutput {\n  @ApiProperty({ example: SUCCESS_STATUS, enum: [SUCCESS_STATUS, ERROR_STATUS] })\n  @IsEnum([SUCCESS_STATUS, ERROR_ST
================================================================================


=== SESSION SUMMARY ===
Session ID: session-1760546051744
Repository: Unknown
Total Questions Generated: 11
Total Chunks Processed: 4
Ended: 2025-10-15T17:34:18.621Z
================================================================================


--- QUESTION GENERATION ---
Timestamp: 2025-10-15T19:04:47.701Z
Question Type: true-false
Function: Unknown
Function Size: 2094 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // File: // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\nchallengeFiles:\n          completedChallenge?.challengeFiles?.map(\n            regenerateMissingProperties\n          ) ?? null\n      }\n    : null;\n\n  const id = challengeData?.id;\n  const startIndex = (pageNo - 1) * ITEMS_PER
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-15T19:04:49.807Z
Question Type: true-false
Function: Unknown
Function Size: 50 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // File: @ts-expect-error Graphql needs typing\nid,
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-15T19:04:55.057Z
Question Type: function-variant
Function: Unknown
Function Size: 58 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // File: @ts-expect-error Graphql needs typing\nsuperBlock,
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-15T19:04:55.352Z
Question Type: select-all
Function: Unknown
Function Size: 58 characters
Questions Generated: 0
Repository: Unknown
Function Preview: // File: @ts-expect-error Graphql needs typing\nsuperBlock,
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-15T19:04:56.450Z
Question Type: order-sequence
Function: Unknown
Function Size: 2056 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // File: Items per page in timeline.\nconst ITEMS_PER_PAGE = 15;\n\ninterface TimelineProps {\n  completedMap: CompletedChallenge[];\n  openModal: (arg: string) => void;\n  t: TFunction;\n  username: string;\n}\n\ninterface TimelineInnerProps extends TimelineProps {\n  idToNameMap: Map<string, NameMap>;\n  sort
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-15T19:05:02.440Z
Question Type: select-all
Function: Unknown
Function Size: 2094 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // File: // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\nchallengeFiles:\n          completedChallenge?.challengeFiles?.map(\n            regenerateMissingProperties\n          ) ?? null\n      }\n    : null;\n\n  const id = challengeData?.id;\n  const startIndex = (pageNo - 1) * ITEMS_PER
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-15T19:05:03.755Z
Question Type: select-all
Function: Unknown
Function Size: 1629 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // File: freeCodeCamp-freeCodeCamp-2f90571/client/src/components/profile/components/time-line.tsx\nimport Loadable from '@loadable/component';\nimport { graphql, useStaticQuery } from 'gatsby';\nimport { reverse, sortBy } from 'lodash-es';\nimport React, { useMemo, useState } from 'react';\nimport type {
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-15T19:05:07.237Z
Question Type: order-sequence
Function: Unknown
Function Size: 58 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // File: @ts-expect-error Graphql needs typing\nsuperBlock,
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-15T19:05:07.898Z
Question Type: function-variant
Function: Unknown
Function Size: 2056 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // File: Items per page in timeline.\nconst ITEMS_PER_PAGE = 15;\n\ninterface TimelineProps {\n  completedMap: CompletedChallenge[];\n  openModal: (arg: string) => void;\n  t: TFunction;\n  username: string;\n}\n\ninterface TimelineInnerProps extends TimelineProps {\n  idToNameMap: Map<string, NameMap>;\n  sort
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-15T19:05:10.380Z
Question Type: function-variant
Function: Unknown
Function Size: 50 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // File: @ts-expect-error Graphql needs typing\nid,
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-15T19:05:15.257Z
Question Type: multiple-choice
Function: Unknown
Function Size: 1629 characters
Questions Generated: 3
Repository: Unknown
Function Preview: // File: freeCodeCamp-freeCodeCamp-2f90571/client/src/components/profile/components/time-line.tsx\nimport Loadable from '@loadable/component';\nimport { graphql, useStaticQuery } from 'gatsby';\nimport { reverse, sortBy } from 'lodash-es';\nimport React, { useMemo, useState } from 'react';\nimport type {
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-15T19:05:15.963Z
Question Type: select-all
Function: Unknown
Function Size: 2056 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // File: Items per page in timeline.\nconst ITEMS_PER_PAGE = 15;\n\ninterface TimelineProps {\n  completedMap: CompletedChallenge[];\n  openModal: (arg: string) => void;\n  t: TFunction;\n  username: string;\n}\n\ninterface TimelineInnerProps extends TimelineProps {\n  idToNameMap: Map<string, NameMap>;\n  sort
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-15T19:05:17.566Z
Question Type: function-variant
Function: Unknown
Function Size: 2094 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // File: // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\nchallengeFiles:\n          completedChallenge?.challengeFiles?.map(\n            regenerateMissingProperties\n          ) ?? null\n      }\n    : null;\n\n  const id = challengeData?.id;\n  const startIndex = (pageNo - 1) * ITEMS_PER
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-15T19:05:19.390Z
Question Type: function-variant
Function: Unknown
Function Size: 1629 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // File: freeCodeCamp-freeCodeCamp-2f90571/client/src/components/profile/components/time-line.tsx\nimport Loadable from '@loadable/component';\nimport { graphql, useStaticQuery } from 'gatsby';\nimport { reverse, sortBy } from 'lodash-es';\nimport React, { useMemo, useState } from 'react';\nimport type {
================================================================================


=== SESSION SUMMARY ===
Session ID: session-1760546051744
Repository: Unknown
Total Questions Generated: 15
Total Chunks Processed: 5
Ended: 2025-10-15T19:05:22.939Z
================================================================================


--- FUNCTION EXTRACTION ---
Timestamp: 2025-10-15T19:55:34.355Z
File: [4 files: need to show to the user. Finally, we'll send out a proper response., Vue.php, ThrottleLoginsTest.php, RegistersUsersTest.php]
Functions Extracted: 6


Function 1: sendResetLinkResponse
Language: PHP
Lines: 5
Full Code:
--------------------------------------------------------------------------------
protected function sendResetLinkResponse(Request $request, $response) {
    return $request->wantsJson()
                ? new JsonResponse(['message' => trans($response)], 200)
                : back()->with('status', trans($response));
}
--------------------------------------------------------------------------------


Function 2: sendResetLinkFailedResponse
Language: PHP
Lines: 8
Full Code:
--------------------------------------------------------------------------------
protected function sendResetLinkFailedResponse(Request $request, $response) {
    if ($request->wantsJson()) {
        throw ValidationException::withMessages([
            'email' => [trans($response)],
        ]);
    }

    return back()
            ->withInput($request->only('email'))
            ->withErrors(['email' => trans($response)]);
}
--------------------------------------------------------------------------------


Function 3: install
Language: PHP
Lines: 6
Full Code:
--------------------------------------------------------------------------------
public static function install() {
    static::ensureComponentDirectoryExists();
    static::updatePackages();
    static::updateViteConfiguration();
    static::updateBootstrapping();
    static::updateComponent();
    static::removeNodeModules();
}
--------------------------------------------------------------------------------


Function 4: validator
Language: PHP
Lines: 7
Full Code:
--------------------------------------------------------------------------------
protected function validator(array $data) {
    return Validator::make($data, [
        'name' => ['required', 'string', 'max:255'],
        'email' => ['required', 'string', 'email', 'max:255', 'unique:users'],
        'password' => ['required', 'string', 'min:8', 'confirmed'],
    ]);
}
--------------------------------------------------------------------------------


Function 5: create
Language: PHP
Lines: 8
Full Code:
--------------------------------------------------------------------------------
protected function create(array $data) {
    $user = (new User())->forceFill([
        'name' => $data['name'],
        'email' => $data['email'],
        'password' => Hash::make($data['password']),
    ]);

    $user->save();

    return $user;
}
--------------------------------------------------------------------------------


Function 6: handleRequestUsing
Language: PHP
Lines: 8
Full Code:
--------------------------------------------------------------------------------
protected function handleRequestUsing(Request $request, callable $callback) {
    return new TestResponse(
        (new Pipeline($this->app))
            ->send($request)
            ->through([
                \Illuminate\Session\Middleware\StartSession::class,
            ])
            ->then($callback)
    );
}
--------------------------------------------------------------------------------

================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-15T19:55:44.401Z
Question Type: select-all
Function: validator
Function Size: 372 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: validator (PHP)\n// Validates the incoming registration request data.\n\nprotected function validator(array $data) {\n    return Validator::make($data, [\n        'name' => ['required', 'string', 'max:255'],\n        'email' => ['required', 'string', 'email', 'max:255', 'unique:users'],\n     
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-15T19:55:46.020Z
Question Type: multiple-choice
Function: install
Function Size: 368 characters
Questions Generated: 3
Repository: Unknown
Function Preview: // Function: install (PHP)\n// Installs the Vue preset by ensuring necessary directories and updating configurations.\n\npublic static function install() {\n    static::ensureComponentDirectoryExists();\n    static::updatePackages();\n    static::updateViteConfiguration();\n    static::updateBootstrapping(
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-15T19:55:50.580Z
Question Type: function-variant
Function: handleRequestUsing
Function Size: 421 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: handleRequestUsing (PHP)\n// Handles a request using a pipeline and returns a TestResponse.\n\nprotected function handleRequestUsing(Request $request, callable $callback) {\n    return new TestResponse(\n        (new Pipeline($this->app))\n            ->send($request)\n            ->through([\n
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-15T19:55:51.508Z
Question Type: function-variant
Function: install
Function Size: 368 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: install (PHP)\n// Installs the Vue preset by ensuring necessary directories and updating configurations.\n\npublic static function install() {\n    static::ensureComponentDirectoryExists();\n    static::updatePackages();\n    static::updateViteConfiguration();\n    static::updateBootstrapping(
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-15T19:55:52.644Z
Question Type: select-all
Function: sendResetLinkFailedResponse
Function Size: 505 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: sendResetLinkFailedResponse (PHP)\n// Handles the response for a failed password reset link, throwing a validation exception for JSON requests.\n\nprotected function sendResetLinkFailedResponse(Request $request, $response) {\n    if ($request->wantsJson()) {\n        throw ValidationExceptio
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-15T19:55:57.546Z
Question Type: true-false
Function: handleRequestUsing
Function Size: 421 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: handleRequestUsing (PHP)\n// Handles a request using a pipeline and returns a TestResponse.\n\nprotected function handleRequestUsing(Request $request, callable $callback) {\n    return new TestResponse(\n        (new Pipeline($this->app))\n            ->send($request)\n            ->through([\n
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-15T19:56:00.084Z
Question Type: function-variant
Function: sendResetLinkResponse
Function Size: 371 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: sendResetLinkResponse (PHP)\n// Returns a response for a successful password reset link, either as JSON or a redirect.\n\nprotected function sendResetLinkResponse(Request $request, $response) {\n    return $request->wantsJson()\n                ? new JsonResponse(['message' => trans($respons
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-15T19:56:02.385Z
Question Type: select-all
Function: handleRequestUsing
Function Size: 421 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: handleRequestUsing (PHP)\n// Handles a request using a pipeline and returns a TestResponse.\n\nprotected function handleRequestUsing(Request $request, callable $callback) {\n    return new TestResponse(\n        (new Pipeline($this->app))\n            ->send($request)\n            ->through([\n
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-15T19:56:08.053Z
Question Type: select-all
Function: sendResetLinkResponse
Function Size: 371 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: sendResetLinkResponse (PHP)\n// Returns a response for a successful password reset link, either as JSON or a redirect.\n\nprotected function sendResetLinkResponse(Request $request, $response) {\n    return $request->wantsJson()\n                ? new JsonResponse(['message' => trans($respons
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-15T19:56:09.691Z
Question Type: order-sequence
Function: sendResetLinkFailedResponse
Function Size: 505 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: sendResetLinkFailedResponse (PHP)\n// Handles the response for a failed password reset link, throwing a validation exception for JSON requests.\n\nprotected function sendResetLinkFailedResponse(Request $request, $response) {\n    if ($request->wantsJson()) {\n        throw ValidationExceptio
================================================================================


=== SESSION SUMMARY ===
Session ID: session-1760546051744
Repository: Unknown
Total Questions Generated: 12
Total Chunks Processed: 6
Ended: 2025-10-15T19:56:09.765Z
================================================================================


--- FUNCTION EXTRACTION ---
Timestamp: 2025-10-15T19:56:25.080Z
File: [3 files: AuthCommand.php, RegistersUsers.php, React.php]
Functions Extracted: 5


Function 1: handle
Language: PHP
Lines: 15
Full Code:
--------------------------------------------------------------------------------
public function handle() {
        if (static::hasMacro($this->argument('type'))) {
            return call_user_func(static::$macros[$this->argument('type')], $this);
        }

        if (! in_array($this->argument('type'), ['bootstrap'])) {
            throw new InvalidArgumentException('Invalid preset.');
        }

        $this->ensureDirectoriesExist();
        $this->exportViews();

        if (! $this->option('views')) {
            $this->exportBackend();
        }

        $this->components->info('Authentication scaffolding generated successfully.');
    }
--------------------------------------------------------------------------------


Function 2: register
Language: PHP
Lines: 15
Full Code:
--------------------------------------------------------------------------------
public function register(Request $request) {
        $this->validator($request->all())->validate();

        event(new Registered($user = $this->create($request->all())));

        $this->guard()->login($user);

        if ($response = $this->registered($request, $user)) {
            return $response;
        }

        return $request->wantsJson()
                    ? new JsonResponse([], 201)
                    : redirect($this->redirectPath());
    }
--------------------------------------------------------------------------------


Function 3: install
Language: PHP
Lines: 10
Full Code:
--------------------------------------------------------------------------------
public static function install() {
        static::ensureComponentDirectoryExists();
        static::updatePackages();
        static::updateViteConfiguration();
        static::updateBootstrapping();
        static::updateComponent();
        static::addViteReactRefreshDirective();
        static::removeNodeModules();
    }
--------------------------------------------------------------------------------


Function 4: updatePackageArray
Language: PHP
Lines: 10
Full Code:
--------------------------------------------------------------------------------
protected static function updatePackageArray(array $packages) {
        return [
            '@vitejs/plugin-react' => '^4.2.0',
            'react' => '^18.2.0',
            'react-dom' => '^18.2.0',
        ] + Arr::except($packages, [
            '@vitejs/plugin-vue',
            'vue'
        ]);
    }
--------------------------------------------------------------------------------


Function 5: updateComponent
Language: PHP
Lines: 10
Full Code:
--------------------------------------------------------------------------------
protected static function updateComponent() {
        (new Filesystem)->delete(
            resource_path('js/components/ExampleComponent.vue')
        );

        copy(
            __DIR__.'/react-stubs/Example.jsx',
            resource_path('js/components/Example.jsx')
        );
    }
--------------------------------------------------------------------------------

================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-15T19:56:27.804Z
Question Type: true-false
Function: register
Function Size: 595 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: register (PHP)\n// Handles a registration request for the application, validates input, creates a user, and logs them in.\n\npublic function register(Request $request) {\n        $this->validator($request->all())->validate();\n\n        event(new Registered($user = $this->create($request->all
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-15T19:56:34.372Z
Question Type: select-all
Function: updateComponent
Function Size: 421 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: updateComponent (PHP)\n// Updates the example component by deleting the Vue component and copying the React component.\n\nprotected static function updateComponent() {\n        (new Filesystem)->delete(\n            resource_path('js/components/ExampleComponent.vue')\n        );\n\n        copy
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-15T19:56:35.006Z
Question Type: select-all
Function: install
Function Size: 464 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: install (PHP)\n// Installs the React preset by ensuring directories exist, updating packages, configuration, and components.\n\npublic static function install() {\n        static::ensureComponentDirectoryExists();\n        static::updatePackages();\n        static::updateViteConfiguration();\n
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-15T19:56:36.532Z
Question Type: multiple-choice
Function: handle
Function Size: 729 characters
Questions Generated: 3
Repository: Unknown
Function Preview: // Function: handle (PHP)\n// Handles the execution of the console command, ensuring directories exist, exporting views, and optionally exporting backend.\n\npublic function handle() {\n        if (static::hasMacro($this->argument('type'))) {\n            return call_user_func(static::$macros[$this->argu
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-15T19:56:37.680Z
Question Type: order-sequence
Function: install
Function Size: 464 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: install (PHP)\n// Installs the React preset by ensuring directories exist, updating packages, configuration, and components.\n\npublic static function install() {\n        static::ensureComponentDirectoryExists();\n        static::updatePackages();\n        static::updateViteConfiguration();\n
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-15T19:56:47.861Z
Question Type: select-all
Function: handle
Function Size: 729 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: handle (PHP)\n// Handles the execution of the console command, ensuring directories exist, exporting views, and optionally exporting backend.\n\npublic function handle() {\n        if (static::hasMacro($this->argument('type'))) {\n            return call_user_func(static::$macros[$this->argu
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-15T19:56:49.401Z
Question Type: true-false
Function: updateComponent
Function Size: 421 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: updateComponent (PHP)\n// Updates the example component by deleting the Vue component and copying the React component.\n\nprotected static function updateComponent() {\n        (new Filesystem)->delete(\n            resource_path('js/components/ExampleComponent.vue')\n        );\n\n        copy
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-15T19:56:52.499Z
Question Type: function-variant
Function: updateComponent
Function Size: 421 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: updateComponent (PHP)\n// Updates the example component by deleting the Vue component and copying the React component.\n\nprotected static function updateComponent() {\n        (new Filesystem)->delete(\n            resource_path('js/components/ExampleComponent.vue')\n        );\n\n        copy
================================================================================


=== SESSION SUMMARY ===
Session ID: session-1760546051744
Repository: Unknown
Total Questions Generated: 10
Total Chunks Processed: 5
Ended: 2025-10-15T19:56:52.570Z
================================================================================


--- FUNCTION EXTRACTION ---
Timestamp: 2025-10-15T23:27:18.012Z
File: [8 files: UpdateEmployeeComponent.jsx, CreateEmployeeComponent.jsx, EmployeeService.js, SpringbootBackendApplication.java, ViewEmployeeComponent.jsx, index.js, serviceWorker.js, HeaderComponent.js]
Functions Extracted: 3


Function 1: componentDidMount
Language: JavaScript
Lines: 7
Full Code:
--------------------------------------------------------------------------------
componentDidMount(){
    EmployeeService.getEmployeeById(this.state.id).then( (res) =>{
        let employee = res.data;
        this.setState({firstName: employee.firstName,
            lastName: employee.lastName,
            emailId : employee.emailId
        });
    });
}
--------------------------------------------------------------------------------


Function 2: updateEmployee
Language: JavaScript
Lines: 8
Full Code:
--------------------------------------------------------------------------------
updateEmployee = (e) => {
        e.preventDefault();
        let employee = {firstName: this.state.firstName, lastName: this.state.lastName, emailId: this.state.emailId};
        console.log('employee => ' + JSON.stringify(employee));
        console.log('id => ' + JSON.stringify(this.state.id));
        EmployeeService.updateEmployee(employee, this.state.id).then( res => {
            this.props.history.push('/employees');
        });
    }
--------------------------------------------------------------------------------


Function 3: componentDidMount
Language: JavaScript
Lines: 5
Full Code:
--------------------------------------------------------------------------------
componentDidMount(){
        EmployeeService.getEmployeeById(this.state.id).then( res => {
            this.setState({employee: res.data});
        })
    }
--------------------------------------------------------------------------------

================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-15T23:27:22.562Z
Question Type: true-false
Function: componentDidMount
Function Size: 309 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: componentDidMount (JavaScript)\n// Fetches employee details by ID when the component mounts and updates the state with the employee's data.\n\ncomponentDidMount(){\n        EmployeeService.getEmployeeById(this.state.id).then( res => {\n            this.setState({employee: res.data});\n       
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-15T23:27:22.610Z
Question Type: true-false
Function: componentDidMount
Function Size: 429 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: componentDidMount (JavaScript)\n// Fetches employee data by ID when the component mounts and updates the state with the employee's details.\n\ncomponentDidMount(){\n    EmployeeService.getEmployeeById(this.state.id).then( (res) =>{\n        let employee = res.data;\n        this.setState({fir
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-15T23:27:23.758Z
Question Type: select-all
Function: componentDidMount
Function Size: 309 characters
Questions Generated: 0
Repository: Unknown
Function Preview: // Function: componentDidMount (JavaScript)\n// Fetches employee details by ID when the component mounts and updates the state with the employee's data.\n\ncomponentDidMount(){\n        EmployeeService.getEmployeeById(this.state.id).then( res => {\n            this.setState({employee: res.data});\n       
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-15T23:27:30.804Z
Question Type: multiple-choice
Function: updateEmployee
Function Size: 614 characters
Questions Generated: 3
Repository: Unknown
Function Preview: // Function: updateEmployee (JavaScript)\n// Handles the employee update process by sending the updated employee data to the server and redirects to the employee list.\n\nupdateEmployee = (e) => {\n        e.preventDefault();\n        let employee = {firstName: this.state.firstName, lastName: this.state.
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-15T23:27:35.914Z
Question Type: function-variant
Function: componentDidMount
Function Size: 429 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: componentDidMount (JavaScript)\n// Fetches employee data by ID when the component mounts and updates the state with the employee's details.\n\ncomponentDidMount(){\n    EmployeeService.getEmployeeById(this.state.id).then( (res) =>{\n        let employee = res.data;\n        this.setState({fir
================================================================================


=== SESSION SUMMARY ===
Session ID: session-1760546051744
Repository: Unknown
Total Questions Generated: 6
Total Chunks Processed: 3
Ended: 2025-10-15T23:27:35.985Z
================================================================================


--- QUESTION GENERATION ---
Timestamp: 2025-10-15T23:27:40.823Z
Question Type: select-all
Function: componentDidMount
Function Size: 309 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: componentDidMount (JavaScript)\n// Fetches employee details by ID when the component mounts and updates the state with the employee's data.\n\ncomponentDidMount(){\n        EmployeeService.getEmployeeById(this.state.id).then( res => {\n            this.setState({employee: res.data});\n       
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-15T23:27:42.813Z
Question Type: select-all
Function: componentDidMount
Function Size: 429 characters
Questions Generated: 0
Repository: Unknown
Function Preview: // Function: componentDidMount (JavaScript)\n// Fetches employee data by ID when the component mounts and updates the state with the employee's details.\n\ncomponentDidMount(){\n    EmployeeService.getEmployeeById(this.state.id).then( (res) =>{\n        let employee = res.data;\n        this.setState({fir
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-15T23:27:44.466Z
Question Type: select-all
Function: componentDidMount
Function Size: 429 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: componentDidMount (JavaScript)\n// Fetches employee data by ID when the component mounts and updates the state with the employee's details.\n\ncomponentDidMount(){\n    EmployeeService.getEmployeeById(this.state.id).then( (res) =>{\n        let employee = res.data;\n        this.setState({fir
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-15T23:27:46.495Z
Question Type: order-sequence
Function: componentDidMount
Function Size: 309 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: componentDidMount (JavaScript)\n// Fetches employee details by ID when the component mounts and updates the state with the employee's data.\n\ncomponentDidMount(){\n        EmployeeService.getEmployeeById(this.state.id).then( res => {\n            this.setState({employee: res.data});\n       
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-15T23:27:55.913Z
Question Type: select-all
Function: updateEmployee
Function Size: 614 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: updateEmployee (JavaScript)\n// Handles the employee update process by sending the updated employee data to the server and redirects to the employee list.\n\nupdateEmployee = (e) => {\n        e.preventDefault();\n        let employee = {firstName: this.state.firstName, lastName: this.state.
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-15T23:27:56.435Z
Question Type: function-variant
Function: componentDidMount
Function Size: 429 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: componentDidMount (JavaScript)\n// Fetches employee data by ID when the component mounts and updates the state with the employee's details.\n\ncomponentDidMount(){\n    EmployeeService.getEmployeeById(this.state.id).then( (res) =>{\n        let employee = res.data;\n        this.setState({fir
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-15T23:27:57.126Z
Question Type: function-variant
Function: updateEmployee
Function Size: 614 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: updateEmployee (JavaScript)\n// Handles the employee update process by sending the updated employee data to the server and redirects to the employee list.\n\nupdateEmployee = (e) => {\n        e.preventDefault();\n        let employee = {firstName: this.state.firstName, lastName: this.state.
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-15T23:28:01.667Z
Question Type: function-variant
Function: componentDidMount
Function Size: 429 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: componentDidMount (JavaScript)\n// Fetches employee data by ID when the component mounts and updates the state with the employee's details.\n\ncomponentDidMount(){\n    EmployeeService.getEmployeeById(this.state.id).then( (res) =>{\n        let employee = res.data;\n        this.setState({fir
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-15T23:28:03.203Z
Question Type: true-false
Function: componentDidMount
Function Size: 429 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: componentDidMount (JavaScript)\n// Fetches employee data by ID when the component mounts and updates the state with the employee's details.\n\ncomponentDidMount(){\n    EmployeeService.getEmployeeById(this.state.id).then( (res) =>{\n        let employee = res.data;\n        this.setState({fir
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-15T23:28:04.165Z
Question Type: order-sequence
Function: updateEmployee
Function Size: 614 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: updateEmployee (JavaScript)\n// Handles the employee update process by sending the updated employee data to the server and redirects to the employee list.\n\nupdateEmployee = (e) => {\n        e.preventDefault();\n        let employee = {firstName: this.state.firstName, lastName: this.state.
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-15T23:28:04.640Z
Question Type: multiple-choice
Function: componentDidMount
Function Size: 309 characters
Questions Generated: 3
Repository: Unknown
Function Preview: // Function: componentDidMount (JavaScript)\n// Fetches employee details by ID when the component mounts and updates the state with the employee's data.\n\ncomponentDidMount(){\n        EmployeeService.getEmployeeById(this.state.id).then( res => {\n            this.setState({employee: res.data});\n       
================================================================================


=== SESSION SUMMARY ===
Session ID: session-1760546051744
Repository: Unknown
Total Questions Generated: 10
Total Chunks Processed: 3
Ended: 2025-10-15T23:28:04.672Z
================================================================================


--- FUNCTION EXTRACTION ---
Timestamp: 2025-10-16T00:00:53.698Z
File: [2 files: rfc6455#section-1.3, Passing more parameters than expected.]
Functions Extracted: 5


Function 1: unpackError
Language: JavaScript
Lines: 5
Full Code:
--------------------------------------------------------------------------------
function unpackError({ code, message }) {
  const err = new ERR_DEBUGGER_ERROR(`${message}`);
  err.code = code;
  ErrorCaptureStackTrace(err, unpackError);
  return err;
}
--------------------------------------------------------------------------------


Function 2: validateHandshake
Language: JavaScript
Lines: 9
Full Code:
--------------------------------------------------------------------------------
function validateHandshake(requestKey, responseKey) {
  const expectedResponseKeyBase = requestKey + WEBSOCKET_HANDSHAKE_GUID;
  const shasum = crypto.createHash('sha1');
  shasum.update(expectedResponseKeyBase);
  const shabuf = shasum.digest();

  if (shabuf.toString('base64') !== responseKey) {
    throw new ERR_DEBUGGER_ERROR(
      `WebSocket secret mismatch: ${requestKey} did not match ${responseKey}`,
    );
  }
}
--------------------------------------------------------------------------------


Function 3: encodeFrameHybi17
Language: JavaScript
Lines: 30
Full Code:
--------------------------------------------------------------------------------
function encodeFrameHybi17(payload) {
  const dataLength = payload.length;

  let singleByteLength;
  let additionalLength;
  if (dataLength > kMaxTwoBytePayloadLength) {
    singleByteLength = kEightBytePayloadLengthField;
    additionalLength = Buffer.alloc(8);
    let remaining = dataLength;
    for (let i = 0; i < 8; ++i) {
      additionalLength[7 - i] = remaining & 0xFF;
      remaining >>= 8;
    }
  } else if (dataLength > kMaxSingleBytePayloadLength) {
    singleByteLength = kTwoBytePayloadLengthField;
    additionalLength = Buffer.alloc(2);
    additionalLength[0] = (dataLength & 0xFF00) >> 8;
    additionalLength[1] = dataLength & 0xFF;
  } else {
    additionalLength = Buffer.alloc(0);
    singleByteLength = dataLength;
  }

  const header = Buffer.from([
    kFinalBit | kOpCodeText,
    kMaskBit | singleByteLength,
  ]);

  const mask = Buffer.alloc(4);
  const masked = Buffer.alloc(dataLength);
  for (let i = 0; i < dataLength; ++i) {
    masked[i] = payload[i] ^ mask[i % kMaskingKeyWidthInBytes];
  }

  return Buffer.concat([header, additionalLength, mask, masked]);
}
--------------------------------------------------------------------------------


Function 4: decodeFrameHybi17
Language: JavaScript
Lines: 47
Full Code:
--------------------------------------------------------------------------------
function decodeFrameHybi17(data) {
  const dataAvailable = data.length;
  const notComplete = { closed: false, payload: null, rest: data };
  let payloadOffset = 2;
  if ((dataAvailable - payloadOffset) < 0) return notComplete;

  const firstByte = data[0];
  const secondByte = data[1];

  const final = (firstByte & kFinalBit) !== 0;
  const reserved1 = (firstByte & kReserved1Bit) !== 0;
  const reserved2 = (firstByte & kReserved2Bit) !== 0;
  const reserved3 = (firstByte & kReserved3Bit) !== 0;
  const opCode = firstByte & kOpCodeMask;
  const masked = (secondByte & kMaskBit) !== 0;
  const compressed = reserved1;
  if (compressed) {
    throw new ERR_DEBUGGER_ERROR('Compressed frames not supported');
  }
  if (!final || reserved2 || reserved3) {
    throw new ERR_DEBUGGER_ERROR('Only compression extension is supported');
  }

  if (masked) {
    throw new ERR_DEBUGGER_ERROR('Masked server frame - not supported');
  }

  let closed = false;
  switch (opCode) {
    case kOpCodeClose:
      closed = true;
      break;
    case kOpCodeText:
      break;
    default:
      throw new ERR_DEBUGGER_ERROR(`Unsupported op code ${opCode}`);
  }

  let payloadLength = secondByte & kPayloadLengthMask;
  switch (payloadLength) {
    case kTwoBytePayloadLengthField:
      payloadOffset += 2;
      payloadLength = (data[2] << 8) + data[3];
      break;

    case kEightBytePayloadLengthField:
      payloadOffset += 8;
      payloadLength = 0;
      for (let i = 0; i < 8; ++i) {
        payloadLength <<= 8;
        payloadLength |= data[2 + i];
      }
      break;

    default:
      // Handle default case
  }
}
--------------------------------------------------------------------------------


Function 5: import_func
Language: JavaScript
Lines: 6
Full Code:
--------------------------------------------------------------------------------
function import_func(param1, param2, param3, param4) {
    gc();
    x += 2n * param1 + BigInt(3 * param2) + 4n * param3 + BigInt(5 * param4);
    return Number(x);
}
--------------------------------------------------------------------------------

================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T00:01:00.530Z
Question Type: multiple-choice
Function: validateHandshake
Function Size: 577 characters
Questions Generated: 3
Repository: Unknown
Function Preview: // Function: validateHandshake (JavaScript)\n// Validates the WebSocket handshake by comparing the computed response key with the expected response key.\n\nfunction validateHandshake(requestKey, responseKey) {\n  const expectedResponseKeyBase = requestKey + WEBSOCKET_HANDSHAKE_GUID;\n  const shasum = cry
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T00:01:04.650Z
Question Type: select-all
Function: unpackError
Function Size: 291 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: unpackError (JavaScript)\n// Creates and returns a custom error object with a specified code and message.\n\nfunction unpackError({ code, message }) {\n  const err = new ERR_DEBUGGER_ERROR(`${message}`);\n  err.code = code;\n  ErrorCaptureStackTrace(err, unpackError);\n  return err;\n}
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T00:01:08.308Z
Question Type: select-all
Function: encodeFrameHybi17
Function Size: 1228 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: encodeFrameHybi17 (JavaScript)\n// Encodes a payload into a WebSocket frame according to the HyBi 17 specification.\n\nfunction encodeFrameHybi17(payload) {\n  const dataLength = payload.length;\n\n  let singleByteLength;\n  let additionalLength;\n  if (dataLength > kMaxTwoBytePayloadLength) {\n
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T00:01:09.039Z
Question Type: select-all
Function: import_func
Function Size: 302 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: import_func (JavaScript)\n// A function that performs calculations based on four parameters and updates a global variable.\n\nfunction import_func(param1, param2, param3, param4) {\n    gc();\n    x += 2n * param1 + BigInt(3 * param2) + 4n * param3 + BigInt(5 * param4);\n    return Number(x);
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T00:01:09.589Z
Question Type: select-all
Function: decodeFrameHybi17
Function Size: 1773 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: decodeFrameHybi17 (JavaScript)\n// Decodes a WebSocket frame according to the HyBi 17 specification and returns the payload and status.\n\nfunction decodeFrameHybi17(data) {\n  const dataAvailable = data.length;\n  const notComplete = { closed: false, payload: null, rest: data };\n  let paylo
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T00:01:12.772Z
Question Type: true-false
Function: unpackError
Function Size: 291 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: unpackError (JavaScript)\n// Creates and returns a custom error object with a specified code and message.\n\nfunction unpackError({ code, message }) {\n  const err = new ERR_DEBUGGER_ERROR(`${message}`);\n  err.code = code;\n  ErrorCaptureStackTrace(err, unpackError);\n  return err;\n}
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T00:01:17.870Z
Question Type: function-variant
Function: import_func
Function Size: 302 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: import_func (JavaScript)\n// A function that performs calculations based on four parameters and updates a global variable.\n\nfunction import_func(param1, param2, param3, param4) {\n    gc();\n    x += 2n * param1 + BigInt(3 * param2) + 4n * param3 + BigInt(5 * param4);\n    return Number(x);
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T00:01:26.705Z
Question Type: order-sequence
Function: decodeFrameHybi17
Function Size: 1773 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: decodeFrameHybi17 (JavaScript)\n// Decodes a WebSocket frame according to the HyBi 17 specification and returns the payload and status.\n\nfunction decodeFrameHybi17(data) {\n  const dataAvailable = data.length;\n  const notComplete = { closed: false, payload: null, rest: data };\n  let paylo
================================================================================


=== SESSION SUMMARY ===
Session ID: session-1760546051744
Repository: Unknown
Total Questions Generated: 10
Total Chunks Processed: 5
Ended: 2025-10-16T00:01:26.850Z
================================================================================


--- FUNCTION EXTRACTION ---
Timestamp: 2025-10-16T00:02:47.541Z
File: The function expects BigInt, but gets Number.
Functions Extracted: 4


Function 1: testGenericWrapperTypeError
Language: JavaScript
Lines: 15
Full Code:
--------------------------------------------------------------------------------
(function testGenericWrapperTypeError() {
  print(arguments.callee.name);
  let builder = new WasmModuleBuilder();
  let sig_index = builder.addType(kSig_v_l);
  let func_index = builder.addImport("mod", "func", sig_index);
  builder.addFunction("main", sig_index)
    .addBody([
      kExprLocalGet, 0, kExprCallFunction, func_index
    ])
    .exportFunc();

  let x = 12n;
  function import_func(param1) {
    x += param1;
  }

  let instance = builder.instantiate({ mod: { func: import_func } });
  assertThrows(() => { instance.exports.main(17) }, TypeError);
})();
--------------------------------------------------------------------------------


Function 2: testGenericWrapper1I64Return
Language: JavaScript
Lines: 15
Full Code:
--------------------------------------------------------------------------------
(function testGenericWrapper1I64Return() {
  print(arguments.callee.name);
  let builder = new WasmModuleBuilder();
  let sig_index = builder.addType(kSig_l_v);
  let func_index = builder.addImport("mod", "func", sig_index);
  builder.addFunction("main", sig_index)
    .addBody([
      kExprCallFunction, func_index
    ])
    .exportFunc();

  function import_func() {
    gc();
    return 10000000000n;
  }

  let instance = builder.instantiate({ mod: { func: import_func } });
  assertEquals(10000000000n, instance.exports.main());
})();
--------------------------------------------------------------------------------


Function 3: testGenericWrapper1Float32
Language: JavaScript
Lines: 15
Full Code:
--------------------------------------------------------------------------------
(function testGenericWrapper1Float32() {
  print(arguments.callee.name);
  let builder = new WasmModuleBuilder();
  let sig_index = builder.addType(kSig_v_f);
  let func_index = builder.addImport("mod", "func", sig_index);
  builder.addFunction("main", sig_index)
    .addBody([
      kExprLocalGet, 0, kExprCallFunction, func_index
    ])
    .exportFunc();

  let x = 12.5;
  function import_func(param) {
    gc();
    x += param;
  }

  let instance = builder.instantiate({ mod: { func: import_func } });
  assertEquals(undefined, instance.exports.main(12.5));
  assertEquals(25, x);
})();
--------------------------------------------------------------------------------


Function 4: testGenericWrapper8Floats
Language: JavaScript
Lines: 28
Full Code:
--------------------------------------------------------------------------------
(function testGenericWrapper8Floats() {
  print(arguments.callee.name);
  let builder = new WasmModuleBuilder();
  let sig_index = builder.addType(kSig_v_ffddddff);
  let func_index = builder.addImport("mod", "func", sig_index);
  builder.addFunction("main", sig_index)
    .addBody([
      kExprLocalGet, 0,
      kExprLocalGet, 1,
      kExprLocalGet, 2,
      kExprLocalGet, 3,
      kExprLocalGet, 4,
      kExprLocalGet, 5,
      kExprLocalGet, 6,
      kExprLocalGet, 7,
      kExprCallFunction, func_index
    ])
    .exportFunc();

  let x = 12;
  function import_func(param1, param2, param3, param4, param5, param6,
    param7, param8) {
    gc();
    x += param1 + 2 * param2 + 3 * param3 + 4 * param4 + 5 * param5
      + 6 * param6 + 7 * param7 + 8 * param8;
  }

  let param1 = { valueOf: () => { gc(); return 1.5; } };
  let param4 = { valueOf: () => { gc(); return 4.5; } };
  let param6 = { valueOf: () => { gc(); return 6.5; } };
  let param8 = { valueOf: () => { gc(); return 8.5; } };
  let instance = builder.instantiate({ mod: { func: import_func } });
  assertEquals(undefined, instance.exports.main(param1, 2.5, 3.5, param4,
    5.5, param6, 7.5, param8));
  assertEquals(234, x);
})();
--------------------------------------------------------------------------------

================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T00:02:52.103Z
Question Type: true-false
Function: testGenericWrapper1Float32
Function Size: 724 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: testGenericWrapper1Float32 (JavaScript)\n// Tests that a function can accept a float parameter and modify a variable.\n\n(function testGenericWrapper1Float32() {\n  print(arguments.callee.name);\n  let builder = new WasmModuleBuilder();\n  let sig_index = builder.addType(kSig_v_f);\n  let func
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T00:03:00.412Z
Question Type: select-all
Function: testGenericWrapper1Float32
Function Size: 724 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: testGenericWrapper1Float32 (JavaScript)\n// Tests that a function can accept a float parameter and modify a variable.\n\n(function testGenericWrapper1Float32() {\n  print(arguments.callee.name);\n  let builder = new WasmModuleBuilder();\n  let sig_index = builder.addType(kSig_v_f);\n  let func
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T00:03:01.342Z
Question Type: function-variant
Function: testGenericWrapper8Floats
Function Size: 1350 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: testGenericWrapper8Floats (JavaScript)\n// Tests that a function can accept multiple float parameters and perform calculations.\n\n(function testGenericWrapper8Floats() {\n  print(arguments.callee.name);\n  let builder = new WasmModuleBuilder();\n  let sig_index = builder.addType(kSig_v_ffddd
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T00:03:01.857Z
Question Type: select-all
Function: testGenericWrapper8Floats
Function Size: 1350 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: testGenericWrapper8Floats (JavaScript)\n// Tests that a function can accept multiple float parameters and perform calculations.\n\n(function testGenericWrapper8Floats() {\n  print(arguments.callee.name);\n  let builder = new WasmModuleBuilder();\n  let sig_index = builder.addType(kSig_v_ffddd
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T00:03:02.897Z
Question Type: select-all
Function: testGenericWrapperTypeError
Function Size: 710 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: testGenericWrapperTypeError (JavaScript)\n// Tests that calling a function with a Number instead of BigInt throws a TypeError.\n\n(function testGenericWrapperTypeError() {\n  print(arguments.callee.name);\n  let builder = new WasmModuleBuilder();\n  let sig_index = builder.addType(kSig_v_l);\n
================================================================================


=== SESSION SUMMARY ===
Session ID: session-1760546051744
Repository: Unknown
Total Questions Generated: 5
Total Chunks Processed: 4
Ended: 2025-10-16T00:03:03.032Z
================================================================================


--- FUNCTION EXTRACTION ---
Timestamp: 2025-10-16T00:37:27.192Z
File: Items per page in timeline.
Functions Extracted: 4


Function 1: viewProject
Language: TypeScript
Lines: 5
Full Code:
--------------------------------------------------------------------------------
function viewProject(completedChallenge: CompletedChallenge): void {
    setCompletedChallenge(completedChallenge);
    setProjectTitle(
      idToNameMap.get(completedChallenge.id)?.challengeTitle ?? ''
    );
    openModal('projectPreview');
}
--------------------------------------------------------------------------------


Function 2: viewExamResults
Language: TypeScript
Lines: 5
Full Code:
--------------------------------------------------------------------------------
function viewExamResults(completedChallenge: CompletedChallenge): void {
    setCompletedChallenge(completedChallenge);
    setProjectTitle(
      idToNameMap.get(completedChallenge.id)?.challengeTitle ?? ''
    );
    openModal('examResults');
}
--------------------------------------------------------------------------------


Function 3: renderViewButton
Language: TypeScript
Lines: 12
Full Code:
--------------------------------------------------------------------------------
function renderViewButton(
    completedChallenge: CompletedChallenge
  ): React.ReactNode {
    const { id } = completedChallenge;
    const projectTitle = idToNameMap.get(id)?.challengeTitle || '';
    return (
      <SolutionDisplayWidget
        completedChallenge={completedChallenge}
        projectTitle={projectTitle}
        showUserCode={() => viewSolution(completedChallenge)}
        showProjectPreview={() => viewProject(completedChallenge)}
        showExamResults={() => viewExamResults(completedChallenge)}
        displayContext='timeline'
      ></SolutionDisplayWidget>
    );
  }
--------------------------------------------------------------------------------


Function 4: renderCompletion
Language: TypeScript
Lines: 20
Full Code:
--------------------------------------------------------------------------------
function renderCompletion(completed: CompletedChallenge) {
    const { id } = completed;
    const challenge = idToNameMap.get(id);
    if (!challenge) return;
    const { challengeTitle, challengePath, certPath } = challenge;
    const completedDate = new Date(completed.completedDate);
    return (
      <tr className='timeline-row' key={id}>
        <td>
          {certPath ? (
            <Link
              className='timeline-cert-link'
              to={`/certification/${username}/${certPath}`}
            >
              {challengeTitle}
              <CertificationIcon />
            </Link>
          ) : (
            <Link to={challengePath}>{challengeTitle}</Link>
          )}
        </td>
        <td>{renderViewButton(completed)}</td>
        <td className='text-center'>
          <time dateTime={completedDate.toISOString()}>
            {completedDate.toLocaleString([localeCode, 'en-US'], {
              year: 'numeric',
              month: 'short',
              day: 'numeric'
            })}
          </time>
        </td>
      </tr>
    );
  }
--------------------------------------------------------------------------------

================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T00:37:32.328Z
Question Type: true-false
Function: viewProject
Function Size: 373 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: viewProject (TypeScript)\n// Sets the completed challenge and project title, then opens the project preview modal.\n\nfunction viewProject(completedChallenge: CompletedChallenge): void {\n    setCompletedChallenge(completedChallenge);\n    setProjectTitle(\n      idToNameMap.get(completedChal
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T00:37:40.336Z
Question Type: select-all
Function: viewProject
Function Size: 373 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: viewProject (TypeScript)\n// Sets the completed challenge and project title, then opens the project preview modal.\n\nfunction viewProject(completedChallenge: CompletedChallenge): void {\n    setCompletedChallenge(completedChallenge);\n    setProjectTitle(\n      idToNameMap.get(completedChal
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T00:37:40.627Z
Question Type: function-variant
Function: viewProject
Function Size: 373 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: viewProject (TypeScript)\n// Sets the completed challenge and project title, then opens the project preview modal.\n\nfunction viewProject(completedChallenge: CompletedChallenge): void {\n    setCompletedChallenge(completedChallenge);\n    setProjectTitle(\n      idToNameMap.get(completedChal
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T00:37:46.393Z
Question Type: function-variant
Function: renderViewButton
Function Size: 750 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: renderViewButton (TypeScript)\n// Renders a button for viewing the solution, project preview, and exam results for a completed challenge.\n\nfunction renderViewButton(\n    completedChallenge: CompletedChallenge\n  ): React.ReactNode {\n    const { id } = completedChallenge;\n    const project
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T00:37:47.367Z
Question Type: select-all
Function: viewExamResults
Function Size: 375 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: viewExamResults (TypeScript)\n// Sets the completed challenge and project title, then opens the exam results modal.\n\nfunction viewExamResults(completedChallenge: CompletedChallenge): void {\n    setCompletedChallenge(completedChallenge);\n    setProjectTitle(\n      idToNameMap.get(complete
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T00:37:48.923Z
Question Type: select-all
Function: renderViewButton
Function Size: 750 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: renderViewButton (TypeScript)\n// Renders a button for viewing the solution, project preview, and exam results for a completed challenge.\n\nfunction renderViewButton(\n    completedChallenge: CompletedChallenge\n  ): React.ReactNode {\n    const { id } = completedChallenge;\n    const project
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T00:37:49.107Z
Question Type: function-variant
Function: renderCompletion
Function Size: 1216 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: renderCompletion (TypeScript)\n// Renders the completion details of a completed challenge, including links and view buttons.\n\nfunction renderCompletion(completed: CompletedChallenge) {\n    const { id } = completed;\n    const challenge = idToNameMap.get(id);\n    if (!challenge) return;\n  
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T00:37:56.512Z
Question Type: order-sequence
Function: renderCompletion
Function Size: 1216 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: renderCompletion (TypeScript)\n// Renders the completion details of a completed challenge, including links and view buttons.\n\nfunction renderCompletion(completed: CompletedChallenge) {\n    const { id } = completed;\n    const challenge = idToNameMap.get(id);\n    if (!challenge) return;\n  
================================================================================


=== SESSION SUMMARY ===
Session ID: session-1760546051744
Repository: Unknown
Total Questions Generated: 8
Total Chunks Processed: 4
Ended: 2025-10-16T00:37:56.626Z
================================================================================


--- FUNCTION EXTRACTION ---
Timestamp: 2025-10-16T00:38:51.340Z
File: [2 files: TODO: Convert to DELETE, profile.tsx]
Functions Extracted: 7


Function 1: putUpdateMyAbout
Language: TypeScript
Lines: 7
Full Code:
--------------------------------------------------------------------------------
export function putUpdateMyAbout(
  values: MyAbout
): Promise<ResponseWithData<void>> {
  return put('/update-my-about', { ...values });
}
--------------------------------------------------------------------------------


Function 2: putUpdateMyUsername
Language: TypeScript
Lines: 7
Full Code:
--------------------------------------------------------------------------------
export function putUpdateMyUsername(
  username: string
): Promise<ResponseWithData<void>> {
  return put('/update-my-username', { username });
}
--------------------------------------------------------------------------------


Function 3: putUpdateMyProfileUI
Language: TypeScript
Lines: 7
Full Code:
--------------------------------------------------------------------------------
export function putUpdateMyProfileUI(
  profileUI: User['profileUI']
): Promise<ResponseWithData<void>> {
  return put('/update-my-profileui', { profileUI });
}
--------------------------------------------------------------------------------


Function 4: putUpdateMySocials
Language: TypeScript
Lines: 7
Full Code:
--------------------------------------------------------------------------------
export function putUpdateMySocials(
  update: Record<string, string>
): Promise<ResponseWithData<void>> {
  return put('/update-my-socials', update);
}
--------------------------------------------------------------------------------


Function 5: putUserUpdateEmail
Language: TypeScript
Lines: 7
Full Code:
--------------------------------------------------------------------------------
export function putUserUpdateEmail(
  email: string
): Promise<ResponseWithData<void>> {
  return put('/update-my-email', { email });
}
--------------------------------------------------------------------------------


Function 6: UserProfile
Language: TypeScript
Lines: 34
Full Code:
--------------------------------------------------------------------------------
function UserProfile({ user, isSessionUser }: ProfileProps): JSX.Element {
  const [isEditing, setIsEditing] = useState(false);

  const {
    profileUI: {
      showCerts,
      showHeatMap,
      showPoints,
      showPortfolio,
      showTimeLine
    },
    calendar,
    completedChallenges,
    username,
    points,
    portfolio
  } = user;

  return (
    <>
      {isSessionUser && (
        <EditModal
          user={user}
          isEditing={isEditing}
          isSessionUser={isSessionUser}
          setIsEditing={setIsEditing}
        />
      )}
      <Camper
        user={user}
        isSessionUser={isSessionUser}
        setIsEditing={setIsEditing}
      />
      {showPoints ? <Stats points={points} calendar={calendar} /> : null}
      {showHeatMap ? <HeatMap calendar={calendar} /> : null}
      {showPortfolio ? (
        <PortfolioProjects portfolioProjects={portfolio} />
      ) : null}
      {showCerts ? <Certifications user={user} /> : null}
      {showTimeLine ? (
        <Timeline completedMap={completedChallenges} username={username} />
      ) : null}
      <Spacer size='m' />
    </>
  );
}
--------------------------------------------------------------------------------


Function 7: Profile
Language: TypeScript
Lines: 31
Full Code:
--------------------------------------------------------------------------------
function Profile({ user, isSessionUser }: ProfileProps): JSX.Element {
  const { t } = useTranslation();
  const {
    profileUI: { isLocked },
    username
  } = user;

  const showUserProfile = !isLocked || isSessionUser;

  return (
    <>
      <Helmet>
        <title>{t('buttons.profile')} | freeCodeCamp.org</title>
      </Helmet>
      <Spacer size='m' />
      <Container>
        <Spacer size='m' />
        {isLocked && (
          <Message username={username} isSessionUser={isSessionUser} t={t} />
        )}
        {showUserProfile && (
          <UserProfile user={user} isSessionUser={isSessionUser} />
        )}
        {!isSessionUser && (
          <Row className='text-center'>
            <Link to={`/user/${username}/report-user`}>
              {t('buttons.flag-user')}
            </Link>
          </Row>
        )}
        <Spacer size='m' />
      </Container>
    </>
  );
}
--------------------------------------------------------------------------------

================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T00:38:56.884Z
Question Type: true-false
Function: putUserUpdateEmail
Function Size: 240 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: putUserUpdateEmail (TypeScript)\n// Sends a PUT request to update the user's email address.\n\nexport function putUserUpdateEmail(\n  email: string\n): Promise<ResponseWithData<void>> {\n  return put('/update-my-email', { email });\n}
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T00:38:57.414Z
Question Type: multiple-choice
Function: putUpdateMyProfileUI
Function Size: 273 characters
Questions Generated: 3
Repository: Unknown
Function Preview: // Function: putUpdateMyProfileUI (TypeScript)\n// Sends a PUT request to update the user's profile UI settings.\n\nexport function putUpdateMyProfileUI(\n  profileUI: User['profileUI']\n): Promise<ResponseWithData<void>> {\n  return put('/update-my-profileui', { profileUI });\n}
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T00:39:05.060Z
Question Type: order-sequence
Function: putUpdateMyUsername
Function Size: 246 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: putUpdateMyUsername (TypeScript)\n// Sends a PUT request to update the user's username.\n\nexport function putUpdateMyUsername(\n  username: string\n): Promise<ResponseWithData<void>> {\n  return put('/update-my-username', { username });\n}
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T00:39:07.006Z
Question Type: function-variant
Function: putUserUpdateEmail
Function Size: 240 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: putUserUpdateEmail (TypeScript)\n// Sends a PUT request to update the user's email address.\n\nexport function putUserUpdateEmail(\n  email: string\n): Promise<ResponseWithData<void>> {\n  return put('/update-my-email', { email });\n}
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T00:39:07.444Z
Question Type: function-variant
Function: putUpdateMySocials
Function Size: 261 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: putUpdateMySocials (TypeScript)\n// Sends a PUT request to update the user's social media links.\n\nexport function putUpdateMySocials(\n  update: Record<string, string>\n): Promise<ResponseWithData<void>> {\n  return put('/update-my-socials', update);\n}
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T00:39:09.862Z
Question Type: true-false
Function: putUpdateMySocials
Function Size: 261 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: putUpdateMySocials (TypeScript)\n// Sends a PUT request to update the user's social media links.\n\nexport function putUpdateMySocials(\n  update: Record<string, string>\n): Promise<ResponseWithData<void>> {\n  return put('/update-my-socials', update);\n}
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T00:39:17.359Z
Question Type: function-variant
Function: putUpdateMyAbout
Function Size: 246 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: putUpdateMyAbout (TypeScript)\n// Sends a PUT request to update the user's about information.\n\nexport function putUpdateMyAbout(\n  values: MyAbout\n): Promise<ResponseWithData<void>> {\n  return put('/update-my-about', { ...values });\n}
================================================================================


=== SESSION SUMMARY ===
Session ID: session-1760546051744
Repository: Unknown
Total Questions Generated: 9
Total Chunks Processed: 7
Ended: 2025-10-16T00:39:17.490Z
================================================================================


--- FUNCTION EXTRACTION ---
Timestamp: 2025-10-16T00:39:43.405Z
File: [2 files: email.tsx, block.tsx]
Functions Extracted: 2


Function 1: EmailSettings
Language: TypeScript
Lines: 98
Full Code:
--------------------------------------------------------------------------------
function EmailSettings({ email, isEmailVerified, sendQuincyEmail, t, updateMyEmail, updateQuincyEmail }: EmailProps): JSX.Element {
  const [emailForm, setEmailForm] = useState<EmailForm>({
    currentEmail: email,
    newEmail: '',
    confirmNewEmail: '',
    isPristine: true
  });

  function handleSubmit(e: React.FormEvent): void {
    e.preventDefault();
    updateMyEmail(emailForm.newEmail);
  }

  function createHandleEmailFormChange(key: 'newEmail' | 'confirmNewEmail'): (e: React.ChangeEvent<HTMLInputElement>) => void {
    return e => {
      e.preventDefault();
      const userInput = e.target.value.slice();
      setEmailForm(prev => ({
        ...prev,
        [key]: userInput,
        isPristine: userInput === prev.currentEmail
      }));
    };
  }

  function getValidationForNewEmail(): EmailValidation {
    const { newEmail, currentEmail } = emailForm;
    if (!maybeEmailRE.test(newEmail)) {
      return {
        state: null,
        message: ''
      };
    }
    if (newEmail === currentEmail) {
      return {
        state: 'error',
        message: t('validation.same-email')
      };
    }
    if (isEmail(newEmail)) {
      return { state: 'success', message: '' };
    } else {
      return {
        state: 'error',
        message: t('validation.invalid-email')
      };
    }
  }

  function getValidationForConfirmEmail(): EmailValidation {
    const { confirmNewEmail, newEmail } = emailForm;
    if (!maybeEmailRE.test(newEmail)) {
      return {
        state: null,
        message: ''
      };
    }
    const isMatch = newEmail === confirmNewEmail;
    if (maybeEmailRE.test(confirmNewEmail)) {
      return {
        state: isMatch ? 'success' : 'error',
        message: isMatch ? '' : t('validation.email-mismatch')
      };
    } else {
      return {
        state: null,
        message: ''
      };
    }
  }

  const { newEmail, confirmNewEmail, currentEmail, isPristine } = emailForm;

  const { state: newEmailValidation, message: newEmailValidationMessage } = getValidationForNewEmail();

  const { state: confirmEmailValidation, message: confirmEmailValidationMessage } = getValidationForConfirmEmail();
  const isDisabled = newEmailValidation !== 'success' || confirmEmailValidation !== 'success' || isPristine;
  if (!currentEmail) {
    return (
      <div>
        <FullWidthRow>
          <p className='large-p text-center'>{t('settings.email.missing')}</p>
        </FullWidthRow>
        <FullWidthRow>
          <Button
            block={true}
            size='large'
            variant='primary'
            href='/update-email'
          >
            {t('buttons.edit')}
          </Button>
        </FullWidthRow>
      </div>
    );
  }
  return (
    <div className='email-settings'>
      <SectionHeader>{t('settings.email.heading')}</SectionHeader>
      {isEmailVerified ? null : (
        <FullWidthRow>
          <HelpBlock>
            <Callout
              variant='info'
              className='text-center'
              data-playwright-test-label='email-verification-alert'
            >
              {t('settings.email.not-verified')}
              <br />
              <Trans i18nKey='settings.email.check'>
                <Link
                  data-playwright-test-label='email-verification-link'
                  to='/update-email'
                />
              </Trans>
            </Callout>
          </HelpBlock>
        </FullWidthRow>
      )}
      <FullWidthRow>
        <form
          id='form-update-email'
          {...(!isDisabled
            ? { onSubmit: handleSubmit }
            : { onSubmit: e => e.preventDefault() })}
        >
          <FormGroup controlId='current-email'>
            <ControlLabel>{t('settings.email.current')}</ControlLabel>
            <FormControl.Static>{currentEmail}</FormControl.Static>
          </FormGroup>
          <div role='group' aria-label={t('settings.email.heading')}>
            <FormGroup
              controlId='new-email'
              validationState={newEmailValidation}
            >
              <ControlLabel htmlFor='new-email-input'>
                {t('settings.email.new')}
              </ControlLabel>
              <FormControl
                onChange={createHandleEmailFormChange('newEmail')}
                type='email'
                value={newEmail}
                id='new-email-input'
              />
              {newEmailValidationMessage ? (
                <HelpBlock data-playwright-test-label='new-email-validation'>
                  {newEmailValidationMessage}
                </HelpBlock>
              ) : null}
            </FormGroup>
            <FormGroup
              controlId='confirm-email'
              validationState={confirmEmailValidation}
            >
              <ControlLabel htmlFor='confirm-email-input'>
                {t('settings.email.confirm')}
              </ControlLabel>
              <FormControl
                onChange={createHandleEmailFormChange('confirmNewEmail')}
                type='email'
                value={confirmNewEmail}
                id='confirm-email-input'
              />
              {confirmEmailValidationMessage ? (
                <HelpBlock data-playwright-test-label='confirm-email-validation'>
                  {confirmEmailValidationMessage}
                </HelpBlock>
              ) : null}
            </FormGroup>
          </div>
          <BlockSaveButton
            disabled={isDisabled}
            bgSize='large'
            {...(isDisabled && { tabIndex: -1 })}
          >
            {t('buttons.save')}{' '}
            <span className='sr-only'>{t('settings.email.heading')}</span>
          </BlockSaveButton>
        </form>
      </FullWidthRow>
      <Spacer size='m' />
      <FullWidthRow>
        <ToggleButtonSetting
          action={t('settings.email.weekly')}
          flag={!!sendQuincyEmail}
          flagName='sendQuincyEmail'
          offLabel={t('buttons.no-thanks')}
          onLabel={t('buttons.yes-please')}
          toggleFlag={() => updateQuincyEmail(!sendQuincyEmail)}
        />
      </FullWidthRow>
    </div>
  );
}
--------------------------------------------------------------------------------


Function 2: handleBlockClick
Language: TypeScript
Lines: 6
Full Code:
--------------------------------------------------------------------------------
handleBlockClick = (): void => {
    const { block, toggleBlock } = this.props;
    void playTone('block-toggle');
    toggleBlock(block);
  };
--------------------------------------------------------------------------------

================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T00:39:48.610Z
Question Type: true-false
Function: handleBlockClick
Function Size: 255 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: handleBlockClick (TypeScript)\n// Handles the click event on a block, toggling its expanded state.\n\nhandleBlockClick = (): void => {\n    const { block, toggleBlock } = this.props;\n    void playTone('block-toggle');\n    toggleBlock(block);\n  };
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T00:39:49.710Z
Question Type: select-all
Function: handleBlockClick
Function Size: 255 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: handleBlockClick (TypeScript)\n// Handles the click event on a block, toggling its expanded state.\n\nhandleBlockClick = (): void => {\n    const { block, toggleBlock } = this.props;\n    void playTone('block-toggle');\n    toggleBlock(block);\n  };
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T00:39:50.616Z
Question Type: select-all
Function: handleBlockClick
Function Size: 255 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: handleBlockClick (TypeScript)\n// Handles the click event on a block, toggling its expanded state.\n\nhandleBlockClick = (): void => {\n    const { block, toggleBlock } = this.props;\n    void playTone('block-toggle');\n    toggleBlock(block);\n  };
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T00:40:14.778Z
Question Type: true-false
Function: EmailSettings
Function Size: 6273 characters
Questions Generated: 0
Repository: Unknown
Function Preview: // Function: EmailSettings (TypeScript)\n// Handles the email settings for the user, including email validation and updating the email.\n\nfunction EmailSettings({ email, isEmailVerified, sendQuincyEmail, t, updateMyEmail, updateQuincyEmail }: EmailProps): JSX.Element {\n  const [emailForm, setEmailForm
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T00:40:19.734Z
Question Type: select-all
Function: EmailSettings
Function Size: 6273 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: EmailSettings (TypeScript)\n// Handles the email settings for the user, including email validation and updating the email.\n\nfunction EmailSettings({ email, isEmailVerified, sendQuincyEmail, t, updateMyEmail, updateQuincyEmail }: EmailProps): JSX.Element {\n  const [emailForm, setEmailForm
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T00:40:20.658Z
Question Type: function-variant
Function: EmailSettings
Function Size: 6273 characters
Questions Generated: 0
Repository: Unknown
Function Preview: // Function: EmailSettings (TypeScript)\n// Handles the email settings for the user, including email validation and updating the email.\n\nfunction EmailSettings({ email, isEmailVerified, sendQuincyEmail, t, updateMyEmail, updateQuincyEmail }: EmailProps): JSX.Element {\n  const [emailForm, setEmailForm
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T00:40:24.448Z
Question Type: select-all
Function: EmailSettings
Function Size: 6273 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: EmailSettings (TypeScript)\n// Handles the email settings for the user, including email validation and updating the email.\n\nfunction EmailSettings({ email, isEmailVerified, sendQuincyEmail, t, updateMyEmail, updateQuincyEmail }: EmailProps): JSX.Element {\n  const [emailForm, setEmailForm
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T00:40:26.806Z
Question Type: order-sequence
Function: handleBlockClick
Function Size: 255 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: handleBlockClick (TypeScript)\n// Handles the click event on a block, toggling its expanded state.\n\nhandleBlockClick = (): void => {\n    const { block, toggleBlock } = this.props;\n    void playTone('block-toggle');\n    toggleBlock(block);\n  };
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T00:40:28.258Z
Question Type: order-sequence
Function: EmailSettings
Function Size: 6273 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: EmailSettings (TypeScript)\n// Handles the email settings for the user, including email validation and updating the email.\n\nfunction EmailSettings({ email, isEmailVerified, sendQuincyEmail, t, updateMyEmail, updateQuincyEmail }: EmailProps): JSX.Element {\n  const [emailForm, setEmailForm
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T00:40:34.246Z
Question Type: function-variant
Function: handleBlockClick
Function Size: 255 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: handleBlockClick (TypeScript)\n// Handles the click event on a block, toggling its expanded state.\n\nhandleBlockClick = (): void => {\n    const { block, toggleBlock } = this.props;\n    void playTone('block-toggle');\n    toggleBlock(block);\n  };
================================================================================


=== SESSION SUMMARY ===
Session ID: session-1760546051744
Repository: Unknown
Total Questions Generated: 8
Total Chunks Processed: 2
Ended: 2025-10-16T00:40:34.845Z
================================================================================


--- FUNCTION EXTRACTION ---
Timestamp: 2025-10-16T00:56:28.975Z
File: [2 files: index.ts, profile.tsx]
Functions Extracted: 5


Function 1: base64URLEncode
Language: TypeScript
Lines: 6
Full Code:
--------------------------------------------------------------------------------
export function base64URLEncode(buf: Buffer): string {
  return buf
    .toString('base64')
    .replace(/\+/g, '-')
    .replace(/\//g, '_')
    .replace(/=/g, '');
}
--------------------------------------------------------------------------------


Function 2: mapErr
Language: TypeScript
Lines: 7
Full Code:
--------------------------------------------------------------------------------
export async function mapErr<T>(promise: Promise<T>): Promise<Result<T>> {
  try {
    return { hasError: false, data: await promise };
  } catch (error) {
    return { hasError: true, error };
  }
}
--------------------------------------------------------------------------------


Function 3: syncMapErr
Language: TypeScript
Lines: 7
Full Code:
--------------------------------------------------------------------------------
export function syncMapErr<T>(fn: () => T): Result<T> {
  try {
    return { hasError: false, data: fn() };
  } catch (error) {
    return { hasError: true, error };
  }
}
--------------------------------------------------------------------------------


Function 4: UserProfile
Language: TypeScript
Lines: 24
Full Code:
--------------------------------------------------------------------------------
function UserProfile({ user, isSessionUser }: ProfileProps): JSX.Element {
  const [isEditing, setIsEditing] = useState(false);

  const {
    profileUI: {
      showCerts,
      showHeatMap,
      showPoints,
      showPortfolio,
      showTimeLine
    },
    calendar,
    completedChallenges,
    username,
    points,
    portfolio
  } = user;

  return (
    <>
      {isSessionUser && (
        <EditModal
          user={user}
          isEditing={isEditing}
          isSessionUser={isSessionUser}
          setIsEditing={setIsEditing}
        />
      )}
      <Camper
        user={user}
        isSessionUser={isSessionUser}
        setIsEditing={setIsEditing}
      />
      {showPoints ? <Stats points={points} calendar={calendar} /> : null}
      {showHeatMap ? <HeatMap calendar={calendar} /> : null}
      {showPortfolio ? (
        <PortfolioProjects portfolioProjects={portfolio} />
      ) : null}
      {showCerts ? <Certifications user={user} /> : null}
      {showTimeLine ? (
        <Timeline completedMap={completedChallenges} username={username} />
      ) : null}
      <Spacer size='m' />
    </>
  );
}
--------------------------------------------------------------------------------


Function 5: Profile
Language: TypeScript
Lines: 22
Full Code:
--------------------------------------------------------------------------------
function Profile({ user, isSessionUser }: ProfileProps): JSX.Element {
  const { t } = useTranslation();
  const {
    profileUI: { isLocked },
    username
  } = user;

  const showUserProfile = !isLocked || isSessionUser;

  return (
    <>
      <Helmet>
        <title>{t('buttons.profile')} | freeCodeCamp.org</title>
      </Helmet>
      <Spacer size='m' />
      <Container>
        <Spacer size='m' />
        {isLocked && (
          <Message username={username} isSessionUser={isSessionUser} t={t} />
        )}
        {showUserProfile && (
          <UserProfile user={user} isSessionUser={isSessionUser} />
        )}
        {!isSessionUser && (
          <Row className='text-center'>
            <Link to={`/user/${username}/report-user`}>
              {t('buttons.flag-user')}
            </Link>
          </Row>
        )}
        <Spacer size='m' />
      </Container>
    </>
  );
}
--------------------------------------------------------------------------------

================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T00:56:36.517Z
Question Type: select-all
Function: syncMapErr
Function Size: 304 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: syncMapErr (TypeScript)\n// Wrapper around a synchronise function to catch throws and return them as part of the value.\n\nexport function syncMapErr<T>(fn: () => T): Result<T> {\n  try {\n    return { hasError: false, data: fn() };\n  } catch (error) {\n    return { hasError: true, error };\n 
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T00:56:39.800Z
Question Type: order-sequence
Function: mapErr
Function Size: 317 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: mapErr (TypeScript)\n// Wrapper around a promise to catch errors and return them as part of the promise.\n\nexport async function mapErr<T>(promise: Promise<T>): Promise<Result<T>> {\n  try {\n    return { hasError: false, data: await promise };\n  } catch (error) {\n    return { hasError: tru
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T00:56:41.706Z
Question Type: function-variant
Function: syncMapErr
Function Size: 304 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: syncMapErr (TypeScript)\n// Wrapper around a synchronise function to catch throws and return them as part of the value.\n\nexport function syncMapErr<T>(fn: () => T): Result<T> {\n  try {\n    return { hasError: false, data: fn() };\n  } catch (error) {\n    return { hasError: true, error };\n 
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T00:56:48.480Z
Question Type: select-all
Function: Profile
Function Size: 1026 characters
Questions Generated: 0
Repository: Unknown
Function Preview: // Function: Profile (TypeScript)\n// Main profile component that displays user information and handles locked profiles.\n\nfunction Profile({ user, isSessionUser }: ProfileProps): JSX.Element {\n  const { t } = useTranslation();\n  const {\n    profileUI: { isLocked },\n    username\n  } = user;\n\n  const s
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T00:56:51.025Z
Question Type: multiple-choice
Function: UserProfile
Function Size: 1264 characters
Questions Generated: 0
Repository: Unknown
Function Preview: // Function: UserProfile (TypeScript)\n// Component that renders the user profile, including editing options and various statistics.\n\nfunction UserProfile({ user, isSessionUser }: ProfileProps): JSX.Element {\n  const [isEditing, setIsEditing] = useState(false);\n\n  const {\n    profileUI: {\n      showC
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T00:56:51.060Z
Question Type: select-all
Function: UserProfile
Function Size: 1264 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: UserProfile (TypeScript)\n// Component that renders the user profile, including editing options and various statistics.\n\nfunction UserProfile({ user, isSessionUser }: ProfileProps): JSX.Element {\n  const [isEditing, setIsEditing] = useState(false);\n\n  const {\n    profileUI: {\n      showC
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T00:56:54.756Z
Question Type: true-false
Function: syncMapErr
Function Size: 304 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: syncMapErr (TypeScript)\n// Wrapper around a synchronise function to catch throws and return them as part of the value.\n\nexport function syncMapErr<T>(fn: () => T): Result<T> {\n  try {\n    return { hasError: false, data: fn() };\n  } catch (error) {\n    return { hasError: true, error };\n 
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T00:56:58.818Z
Question Type: order-sequence
Function: base64URLEncode
Function Size: 257 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: base64URLEncode (TypeScript)\n// Utility to encode a buffer to a base64 URI.\n\nexport function base64URLEncode(buf: Buffer): string {\n  return buf\n    .toString('base64')\n    .replace(/\+/g, '-')\n    .replace(/\//g, '_')\n    .replace(/=/g, '');\n}
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T00:56:58.991Z
Question Type: function-variant
Function: UserProfile
Function Size: 1264 characters
Questions Generated: 0
Repository: Unknown
Function Preview: // Function: UserProfile (TypeScript)\n// Component that renders the user profile, including editing options and various statistics.\n\nfunction UserProfile({ user, isSessionUser }: ProfileProps): JSX.Element {\n  const [isEditing, setIsEditing] = useState(false);\n\n  const {\n    profileUI: {\n      showC
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T00:56:59.823Z
Question Type: select-all
Function: mapErr
Function Size: 317 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: mapErr (TypeScript)\n// Wrapper around a promise to catch errors and return them as part of the promise.\n\nexport async function mapErr<T>(promise: Promise<T>): Promise<Result<T>> {\n  try {\n    return { hasError: false, data: await promise };\n  } catch (error) {\n    return { hasError: tru
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T00:57:04.275Z
Question Type: function-variant
Function: base64URLEncode
Function Size: 257 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: base64URLEncode (TypeScript)\n// Utility to encode a buffer to a base64 URI.\n\nexport function base64URLEncode(buf: Buffer): string {\n  return buf\n    .toString('base64')\n    .replace(/\+/g, '-')\n    .replace(/\//g, '_')\n    .replace(/=/g, '');\n}
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T00:57:06.921Z
Question Type: true-false
Function: Profile
Function Size: 1026 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: Profile (TypeScript)\n// Main profile component that displays user information and handles locked profiles.\n\nfunction Profile({ user, isSessionUser }: ProfileProps): JSX.Element {\n  const { t } = useTranslation();\n  const {\n    profileUI: { isLocked },\n    username\n  } = user;\n\n  const s
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T00:57:12.011Z
Question Type: select-all
Function: base64URLEncode
Function Size: 257 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: base64URLEncode (TypeScript)\n// Utility to encode a buffer to a base64 URI.\n\nexport function base64URLEncode(buf: Buffer): string {\n  return buf\n    .toString('base64')\n    .replace(/\+/g, '-')\n    .replace(/\//g, '_')\n    .replace(/=/g, '');\n}
================================================================================


=== SESSION SUMMARY ===
Session ID: session-1760546051744
Repository: Unknown
Total Questions Generated: 10
Total Chunks Processed: 5
Ended: 2025-10-16T00:57:27.735Z
================================================================================


--- FUNCTION EXTRACTION ---
Timestamp: 2025-10-16T00:57:28.236Z
File: [4 files: just need the body to exist, but doesn't seem to use the properties., to make use of the Response object (message, status, etc), help-modal.tsx, completion-epic.js]
Functions Extracted: 6


Function 1: postChargeStripe
Language: TypeScript
Lines: 6
Full Code:
--------------------------------------------------------------------------------
export function postChargeStripe(
  body: Donation
): Promise<ResponseWithData<void>> {
  return post('/donate/charge-stripe', body);
}
--------------------------------------------------------------------------------


Function 2: postChargeStripeCard
Language: TypeScript
Lines: 6
Full Code:
--------------------------------------------------------------------------------
export function postChargeStripeCard(
  body: Donation
): Promise<ResponseWithData<void>> {
  return post('/donate/charge-stripe-card', body);
}
--------------------------------------------------------------------------------


Function 3: createStripePaymentIntent
Language: TypeScript
Lines: 8
Full Code:
--------------------------------------------------------------------------------
export function createStripePaymentIntent(body: {
  email: string | undefined;
  name: string | undefined;
  amount: number;
  duration: DonationDuration;
}): PaymentIntentResponse {
  return post('/donate/create-stripe-payment-intent', body);
}
--------------------------------------------------------------------------------


Function 4: combineDataWithResponse
Language: TypeScript
Lines: 5
Full Code:
--------------------------------------------------------------------------------
async function combineDataWithResponse<T>(response: Response) {
  const data = (await response.json()) as T;
  return { response, data };
}
--------------------------------------------------------------------------------


Function 5: request
Language: TypeScript
Lines: 15
Full Code:
--------------------------------------------------------------------------------
async function request<T>(
  method: 'POST' | 'PUT' | 'DELETE',
  path: string,
  body: unknown
): Promise<ResponseWithData<T>> {
  const options: RequestInit = {
    ...defaultOptions,
    method,
    headers: {
      'CSRF-Token': getCSRFToken(),
      'Content-Type': 'application/json'
    },
    body: JSON.stringify(body)
  };

  const response = await fetch(`${base}${path}`, options);
  return combineDataWithResponse(response);
}
--------------------------------------------------------------------------------


Function 6: postChallenge
Language: JavaScript
Lines: 31
Full Code:
--------------------------------------------------------------------------------
function postChallenge(update) {
  const {
    payload: { challengeType }
  } = update;
  const saveChallenge = postUpdate$(update).pipe(
    retry(3),
    switchMap(({ data }) => {
      const {
        type,
        completedDailyCodingChallenges,
        savedChallenges,
        message,
        examResults
      } = data;
      const payloadWithClientProperties = {
        ...omit(update.payload, ['files'])
      };
      if (update.payload.files) {
        payloadWithClientProperties.challengeFiles = update.payload.files.map(
          ({ key, ...rest }) => ({
            ...rest,
            fileKey: key
          })
        );
      }

      let actions = [
        submitComplete({
          submittedChallenge: payloadWithClientProperties,
          completedDailyCodingChallenges,
          savedChallenges: mapFilesToChallengeFiles(savedChallenges),
          examResults
        }),
        updateComplete(),
        submitChallengeComplete()
      ];

      if (
        type === 'error' ||
        (message && challengeType === challengeTypes.msTrophy)
      ) {
        actions = [];
        if (message) {
          actions.push(createFlashMessage(data));
        }
        actions.push(submitChallengeError());
      } else if (challengeType === challengeTypes.msTrophy) {
        actions.push(createFlashMessage(msTrophyVerified));
      }

      return of(...actions);
    }),
    catchError(() => of(updateFailed(update), submitChallengeError()))
  );
  return saveChallenge;
}
--------------------------------------------------------------------------------

================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T00:57:31.594Z
Question Type: true-false
Function: syncMapErr
Function Size: 304 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: syncMapErr (TypeScript)\n// Wrapper around a synchronise function to catch throws and return them as part of the value.\n\nexport function syncMapErr<T>(fn: () => T): Result<T> {\n  try {\n    return { hasError: false, data: fn() };\n  } catch (error) {\n    return { hasError: true, error };\n 
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T00:57:36.061Z
Question Type: select-all
Function: postChargeStripeCard
Function Size: 243 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: postChargeStripeCard (TypeScript)\n// Charges the user's Stripe card with a donation.\n\nexport function postChargeStripeCard(\n  body: Donation\n): Promise<ResponseWithData<void>> {\n  return post('/donate/charge-stripe-card', body);\n}
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T00:57:38.423Z
Question Type: select-all
Function: base64URLEncode
Function Size: 257 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: base64URLEncode (TypeScript)\n// Utility to encode a buffer to a base64 URI.\n\nexport function base64URLEncode(buf: Buffer): string {\n  return buf\n    .toString('base64')\n    .replace(/\+/g, '-')\n    .replace(/\//g, '_')\n    .replace(/=/g, '');\n}
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T00:57:39.420Z
Question Type: function-variant
Function: combineDataWithResponse
Function Size: 249 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: combineDataWithResponse (TypeScript)\n// Combines the response object with the parsed JSON data.\n\nasync function combineDataWithResponse<T>(response: Response) {\n  const data = (await response.json()) as T;\n  return { response, data };\n}
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T00:57:39.878Z
Question Type: select-all
Function: UserProfile
Function Size: 1264 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: UserProfile (TypeScript)\n// Component that renders the user profile, including editing options and various statistics.\n\nfunction UserProfile({ user, isSessionUser }: ProfileProps): JSX.Element {\n  const [isEditing, setIsEditing] = useState(false);\n\n  const {\n    profileUI: {\n      showC
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T00:57:40.923Z
Question Type: select-all
Function: postChallenge
Function Size: 1627 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: postChallenge (JavaScript)\n// Handles the posting of a challenge update and dispatches appropriate actions.\n\nfunction postChallenge(update) {\n  const {\n    payload: { challengeType }\n  } = update;\n  const saveChallenge = postUpdate$(update).pipe(\n    retry(3),\n    switchMap(({ data }) =
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T00:57:41.764Z
Question Type: select-all
Function: combineDataWithResponse
Function Size: 249 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: combineDataWithResponse (TypeScript)\n// Combines the response object with the parsed JSON data.\n\nasync function combineDataWithResponse<T>(response: Response) {\n  const data = (await response.json()) as T;\n  return { response, data };\n}
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T00:57:43.254Z
Question Type: true-false
Function: combineDataWithResponse
Function Size: 249 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: combineDataWithResponse (TypeScript)\n// Combines the response object with the parsed JSON data.\n\nasync function combineDataWithResponse<T>(response: Response) {\n  const data = (await response.json()) as T;\n  return { response, data };\n}
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T00:57:47.704Z
Question Type: function-variant
Function: mapErr
Function Size: 317 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: mapErr (TypeScript)\n// Wrapper around a promise to catch errors and return them as part of the promise.\n\nexport async function mapErr<T>(promise: Promise<T>): Promise<Result<T>> {\n  try {\n    return { hasError: false, data: await promise };\n  } catch (error) {\n    return { hasError: tru
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T00:57:49.337Z
Question Type: select-all
Function: createStripePaymentIntent
Function Size: 349 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: createStripePaymentIntent (TypeScript)\n// Creates a Stripe payment intent for a donation.\n\nexport function createStripePaymentIntent(body: {\n  email: string | undefined;\n  name: string | undefined;\n  amount: number;\n  duration: DonationDuration;\n}): PaymentIntentResponse {\n  return post
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T00:57:50.111Z
Question Type: select-all
Function: Profile
Function Size: 1026 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: Profile (TypeScript)\n// Main profile component that displays user information and handles locked profiles.\n\nfunction Profile({ user, isSessionUser }: ProfileProps): JSX.Element {\n  const { t } = useTranslation();\n  const {\n    profileUI: { isLocked },\n    username\n  } = user;\n\n  const s
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T00:57:50.998Z
Question Type: function-variant
Function: base64URLEncode
Function Size: 257 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: base64URLEncode (TypeScript)\n// Utility to encode a buffer to a base64 URI.\n\nexport function base64URLEncode(buf: Buffer): string {\n  return buf\n    .toString('base64')\n    .replace(/\+/g, '-')\n    .replace(/\//g, '_')\n    .replace(/=/g, '');\n}
================================================================================


=== SESSION SUMMARY ===
Session ID: session-1760546051744
Repository: Unknown
Total Questions Generated: 6
Total Chunks Processed: 5
Ended: 2025-10-16T00:57:51.200Z
================================================================================


--- QUESTION GENERATION ---
Timestamp: 2025-10-16T00:57:51.555Z
Question Type: function-variant
Function: postChargeStripeCard
Function Size: 243 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: postChargeStripeCard (TypeScript)\n// Charges the user's Stripe card with a donation.\n\nexport function postChargeStripeCard(\n  body: Donation\n): Promise<ResponseWithData<void>> {\n  return post('/donate/charge-stripe-card', body);\n}
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T00:57:55.420Z
Question Type: order-sequence
Function: request
Function Size: 534 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: request (TypeScript)\n// Makes an HTTP request with the specified method and path.\n\nasync function request<T>(\n  method: 'POST' | 'PUT' | 'DELETE',\n  path: string,\n  body: unknown\n): Promise<ResponseWithData<T>> {\n  const options: RequestInit = {\n    ...defaultOptions,\n    method,\n    he
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T00:57:58.274Z
Question Type: function-variant
Function: postChallenge
Function Size: 1627 characters
Questions Generated: 0
Repository: Unknown
Function Preview: // Function: postChallenge (JavaScript)\n// Handles the posting of a challenge update and dispatches appropriate actions.\n\nfunction postChallenge(update) {\n  const {\n    payload: { challengeType }\n  } = update;\n  const saveChallenge = postUpdate$(update).pipe(\n    retry(3),\n    switchMap(({ data }) =
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T00:58:00.402Z
Question Type: true-false
Function: createStripePaymentIntent
Function Size: 349 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: createStripePaymentIntent (TypeScript)\n// Creates a Stripe payment intent for a donation.\n\nexport function createStripePaymentIntent(body: {\n  email: string | undefined;\n  name: string | undefined;\n  amount: number;\n  duration: DonationDuration;\n}): PaymentIntentResponse {\n  return post
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T00:58:00.874Z
Question Type: function-variant
Function: postChargeStripe
Function Size: 233 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: postChargeStripe (TypeScript)\n// Charges the user's Stripe account with a donation.\n\nexport function postChargeStripe(\n  body: Donation\n): Promise<ResponseWithData<void>> {\n  return post('/donate/charge-stripe', body);\n}
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T00:58:01.876Z
Question Type: multiple-choice
Function: postChallenge
Function Size: 1627 characters
Questions Generated: 3
Repository: Unknown
Function Preview: // Function: postChallenge (JavaScript)\n// Handles the posting of a challenge update and dispatches appropriate actions.\n\nfunction postChallenge(update) {\n  const {\n    payload: { challengeType }\n  } = update;\n  const saveChallenge = postUpdate$(update).pipe(\n    retry(3),\n    switchMap(({ data }) =
================================================================================


=== SESSION SUMMARY ===
Session ID: session-1760546051744
Repository: Unknown
Total Questions Generated: 12
Total Chunks Processed: 6
Ended: 2025-10-16T00:58:01.942Z
================================================================================


--- FUNCTION EXTRACTION ---
Timestamp: 2025-10-16T00:58:09.764Z
File: [2 files: index.ts, help-modal.tsx]
Functions Extracted: 4


Function 1: base64URLEncode
Language: TypeScript
Lines: 6
Full Code:
--------------------------------------------------------------------------------
export function base64URLEncode(buf: Buffer): string {
  return buf
    .toString('base64')
    .replace(/\+/g, '-')
    .replace(/\//g, '_')
    .replace(/=/g, '');
}
--------------------------------------------------------------------------------


Function 2: mapErr
Language: TypeScript
Lines: 8
Full Code:
--------------------------------------------------------------------------------
export async function mapErr<T>(promise: Promise<T>): Promise<Result<T>> {
  try {
    return { hasError: false, data: await promise };
  } catch (error) {
    return { hasError: true, error };
  }
}
--------------------------------------------------------------------------------


Function 3: syncMapErr
Language: TypeScript
Lines: 8
Full Code:
--------------------------------------------------------------------------------
export function syncMapErr<T>(fn: () => T): Result<T> {
  try {
    return { hasError: false, data: fn() };
  } catch (error) {
    return { hasError: true, error };
  }
}
--------------------------------------------------------------------------------


Function 4: generateSearchLink
Language: TypeScript
Lines: 9
Full Code:
--------------------------------------------------------------------------------
export const generateSearchLink = (
  title: string,
  block: string,
  superBlock: string
) => {
  const titleText = t(`intro:${superBlock}.blocks.${block}.title`);
  const selector = 'in:title';
  const query = encodeURIComponent(`${titleText} - ${title} ${selector}`);

  const search = `${forumLocation}/search?q=${query}`;
  return search;
};
--------------------------------------------------------------------------------

================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T00:58:14.139Z
Question Type: true-false
Function: mapErr
Function Size: 317 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: mapErr (TypeScript)\n// Wrapper around a promise to catch errors and return them as part of the promise.\n\nexport async function mapErr<T>(promise: Promise<T>): Promise<Result<T>> {\n  try {\n    return { hasError: false, data: await promise };\n  } catch (error) {\n    return { hasError: tru
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T00:58:16.863Z
Question Type: select-all
Function: base64URLEncode
Function Size: 257 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: base64URLEncode (TypeScript)\n// Utility to encode a buffer to a base64 URI.\n\nexport function base64URLEncode(buf: Buffer): string {\n  return buf\n    .toString('base64')\n    .replace(/\+/g, '-')\n    .replace(/\//g, '_')\n    .replace(/=/g, '');\n}
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T00:58:19.294Z
Question Type: multiple-choice
Function: syncMapErr
Function Size: 304 characters
Questions Generated: 3
Repository: Unknown
Function Preview: // Function: syncMapErr (TypeScript)\n// Wrapper around a synchronise function to catch throws and return them as part of the value.\n\nexport function syncMapErr<T>(fn: () => T): Result<T> {\n  try {\n    return { hasError: false, data: fn() };\n  } catch (error) {\n    return { hasError: true, error };\n 
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T00:58:23.207Z
Question Type: select-all
Function: generateSearchLink
Function Size: 477 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: generateSearchLink (TypeScript)\n// Generates a search link for the forum based on the title, block, and superBlock.\n\nexport const generateSearchLink = (\n  title: string,\n  block: string,\n  superBlock: string\n) => {\n  const titleText = t(`intro:${superBlock}.blocks.${block}.title`);\n  co
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T00:58:24.161Z
Question Type: true-false
Function: base64URLEncode
Function Size: 257 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: base64URLEncode (TypeScript)\n// Utility to encode a buffer to a base64 URI.\n\nexport function base64URLEncode(buf: Buffer): string {\n  return buf\n    .toString('base64')\n    .replace(/\+/g, '-')\n    .replace(/\//g, '_')\n    .replace(/=/g, '');\n}
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T00:58:24.919Z
Question Type: function-variant
Function: generateSearchLink
Function Size: 477 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: generateSearchLink (TypeScript)\n// Generates a search link for the forum based on the title, block, and superBlock.\n\nexport const generateSearchLink = (\n  title: string,\n  block: string,\n  superBlock: string\n) => {\n  const titleText = t(`intro:${superBlock}.blocks.${block}.title`);\n  co
================================================================================


=== SESSION SUMMARY ===
Session ID: session-1760546051744
Repository: Unknown
Total Questions Generated: 8
Total Chunks Processed: 4
Ended: 2025-10-16T00:58:24.966Z
================================================================================


--- QUESTION GENERATION ---
Timestamp: 2025-10-16T00:58:35.568Z
Question Type: true-false
Function: combineDataWithResponse
Function Size: 249 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: combineDataWithResponse (TypeScript)\n// Combines the response object with the parsed JSON data.\n\nasync function combineDataWithResponse<T>(response: Response) {\n  const data = (await response.json()) as T;\n  return { response, data };\n}
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T00:58:36.425Z
Question Type: true-false
Function: createStripePaymentIntent
Function Size: 349 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: createStripePaymentIntent (TypeScript)\n// Creates a Stripe payment intent for a donation.\n\nexport function createStripePaymentIntent(body: {\n  email: string | undefined;\n  name: string | undefined;\n  amount: number;\n  duration: DonationDuration;\n}): PaymentIntentResponse {\n  return post
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T00:58:45.007Z
Question Type: function-variant
Function: createStripePaymentIntent
Function Size: 349 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: createStripePaymentIntent (TypeScript)\n// Creates a Stripe payment intent for a donation.\n\nexport function createStripePaymentIntent(body: {\n  email: string | undefined;\n  name: string | undefined;\n  amount: number;\n  duration: DonationDuration;\n}): PaymentIntentResponse {\n  return post
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T00:58:45.050Z
Question Type: select-all
Function: createStripePaymentIntent
Function Size: 349 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: createStripePaymentIntent (TypeScript)\n// Creates a Stripe payment intent for a donation.\n\nexport function createStripePaymentIntent(body: {\n  email: string | undefined;\n  name: string | undefined;\n  amount: number;\n  duration: DonationDuration;\n}): PaymentIntentResponse {\n  return post
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T00:58:45.242Z
Question Type: order-sequence
Function: postChargeStripe
Function Size: 233 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: postChargeStripe (TypeScript)\n// Charges the user's Stripe account with a donation.\n\nexport function postChargeStripe(\n  body: Donation\n): Promise<ResponseWithData<void>> {\n  return post('/donate/charge-stripe', body);\n}
================================================================================


=== SESSION SUMMARY ===
Session ID: session-1760546051744
Repository: Unknown
Total Questions Generated: 5
Total Chunks Processed: 6
Ended: 2025-10-16T00:58:45.262Z
================================================================================


--- QUESTION GENERATION ---
Timestamp: 2025-10-16T00:58:58.954Z
Question Type: true-false
Function: mapErr
Function Size: 317 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: mapErr (TypeScript)\n// Wrapper around a promise to catch errors and return them as part of the promise.\n\nexport async function mapErr<T>(promise: Promise<T>): Promise<Result<T>> {\n  try {\n    return { hasError: false, data: await promise };\n  } catch (error) {\n    return { hasError: tru
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T00:58:59.334Z
Question Type: true-false
Function: base64URLEncode
Function Size: 257 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: base64URLEncode (TypeScript)\n// Utility to encode a buffer to a base64 URI.\n\nexport function base64URLEncode(buf: Buffer): string {\n  return buf\n    .toString('base64')\n    .replace(/\+/g, '-')\n    .replace(/\//g, '_')\n    .replace(/=/g, '');\n}
================================================================================

--- FUNCTION EXTRACTION ---
Timestamp: 2025-10-16T00:59:00.160Z
File: [3 files: social-icons.tsx, just need the body to exist, but doesn't seem to use the properties., index.ts]
Functions Extracted: 8


Function 1: LinkedInIcon
Language: TypeScript
Lines: 9
Full Code:
--------------------------------------------------------------------------------
function LinkedInIcon({ href, username }: IconProps): JSX.Element {
  const { t } = useTranslation();
  return (
    <a
      aria-label={t('aria.linkedin', { username })}
      href={href}
      rel='noopener noreferrer'
      target='_blank'
    >
      <FontAwesomeIcon icon={faLinkedin} size='2x' />
    </a>
  );
}
--------------------------------------------------------------------------------


Function 2: GitHubIcon
Language: TypeScript
Lines: 9
Full Code:
--------------------------------------------------------------------------------
function GitHubIcon({ href, username }: IconProps): JSX.Element {
  const { t } = useTranslation();
  return (
    <a
      aria-label={t('aria.github', { username })}
      href={href}
      rel='noopener noreferrer'
      target='_blank'
    >
      <FontAwesomeIcon icon={faGithub} size='2x' />
    </a>
  );
}
--------------------------------------------------------------------------------


Function 3: WebsiteIcon
Language: TypeScript
Lines: 9
Full Code:
--------------------------------------------------------------------------------
function WebsiteIcon({ href, username }: IconProps): JSX.Element {
  const { t } = useTranslation();
  return (
    <a
      aria-label={t('aria.website', { username })}
      href={href}
      rel='noopener noreferrer'
      target='_blank'
    >
      <FontAwesomeIcon icon={faLink} size='2x' />
    </a>
  );
}
--------------------------------------------------------------------------------


Function 4: TwitterIcon
Language: TypeScript
Lines: 9
Full Code:
--------------------------------------------------------------------------------
function TwitterIcon({ href, username }: IconProps): JSX.Element {
  const { t } = useTranslation();
  return (
    <a
      aria-label={t('aria.twitter', { username })}
      href={href}
      rel='noopener noreferrer'
      target='_blank'
    >
      <FontAwesomeIcon icon={faXTwitter} size='2x' />
    </a>
  );
}
--------------------------------------------------------------------------------


Function 5: BlueskyIcon
Language: TypeScript
Lines: 9
Full Code:
--------------------------------------------------------------------------------
function BlueskyIcon({ href, username }: IconProps): JSX.Element {
  const { t } = useTranslation();
  return (
    <a
      aria-label={t('aria.bluesky', { username })}
      href={href}
      rel='noopener noreferrer'
      target='_blank'
    >
      <FontAwesomeIcon icon={faBluesky} size='2x' />
    </a>
  );
}
--------------------------------------------------------------------------------


Function 6: SocialIcons
Language: TypeScript
Lines: 17
Full Code:
--------------------------------------------------------------------------------
function SocialIcons(props: SocialIconsProps): JSX.Element | null {
  const { githubProfile, linkedin, twitter, bluesky, username, website } = props;
  const show = linkedin || githubProfile || website || twitter || bluesky;
  if (!show) {
    return null;
  }

  return (
    <Row>
      <Col className='social-icons-row'>
        {linkedin ? <LinkedInIcon href={linkedin} username={username} /> : null}
        {githubProfile ? <GitHubIcon href={githubProfile} username={username} /> : null}
        {website ? <WebsiteIcon href={website} username={username} /> : null}
        {twitter ? <TwitterIcon href={twitter} username={username} /> : null}
        {bluesky ? <BlueskyIcon href={bluesky} username={username} /> : null}
      </Col>
    </Row>
  );
}
--------------------------------------------------------------------------------


Function 7: mapErr
Language: TypeScript
Lines: 7
Full Code:
--------------------------------------------------------------------------------
export async function mapErr<T>(promise: Promise<T>): Promise<Result<T>> {
  try {
    return { hasError: false, data: await promise };
  } catch (error) {
    return { hasError: true, error };
  }
}
--------------------------------------------------------------------------------


Function 8: syncMapErr
Language: TypeScript
Lines: 7
Full Code:
--------------------------------------------------------------------------------
export function syncMapErr<T>(fn: () => T): Result<T> {
  try {
    return { hasError: false, data: fn() };
  } catch (error) {
    return { hasError: true, error };
  }
}
--------------------------------------------------------------------------------

================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T00:59:05.908Z
Question Type: order-sequence
Function: syncMapErr
Function Size: 304 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: syncMapErr (TypeScript)\n// Wrapper around a synchronise function to catch throws and return them as part of the value.\n\nexport function syncMapErr<T>(fn: () => T): Result<T> {\n  try {\n    return { hasError: false, data: fn() };\n  } catch (error) {\n    return { hasError: true, error };\n 
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T00:59:06.064Z
Question Type: multiple-choice
Function: TwitterIcon
Function Size: 422 characters
Questions Generated: 3
Repository: Unknown
Function Preview: // Function: TwitterIcon (TypeScript)\n// Renders a Twitter icon link with aria-label for accessibility.\n\nfunction TwitterIcon({ href, username }: IconProps): JSX.Element {\n  const { t } = useTranslation();\n  return (\n    <a\n      aria-label={t('aria.twitter', { username })}\n      href={href}\n      r
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T00:59:07.149Z
Question Type: true-false
Function: BlueskyIcon
Function Size: 421 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: BlueskyIcon (TypeScript)\n// Renders a Bluesky icon link with aria-label for accessibility.\n\nfunction BlueskyIcon({ href, username }: IconProps): JSX.Element {\n  const { t } = useTranslation();\n  return (\n    <a\n      aria-label={t('aria.bluesky', { username })}\n      href={href}\n      r
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T00:59:07.294Z
Question Type: select-all
Function: syncMapErr
Function Size: 304 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: syncMapErr (TypeScript)\n// Wrapper around a synchronise function to catch throws and return them as part of the value.\n\nexport function syncMapErr<T>(fn: () => T): Result<T> {\n  try {\n    return { hasError: false, data: fn() };\n  } catch (error) {\n    return { hasError: true, error };\n 
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T00:59:09.861Z
Question Type: function-variant
Function: syncMapErr
Function Size: 304 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: syncMapErr (TypeScript)\n// Wrapper around a synchronise function to catch throws and return them as part of the value.\n\nexport function syncMapErr<T>(fn: () => T): Result<T> {\n  try {\n    return { hasError: false, data: fn() };\n  } catch (error) {\n    return { hasError: true, error };\n 
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T00:59:10.209Z
Question Type: function-variant
Function: mapErr
Function Size: 317 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: mapErr (TypeScript)\n// Wrapper around a promise to catch errors and return them as part of the promise.\n\nexport async function mapErr<T>(promise: Promise<T>): Promise<Result<T>> {\n  try {\n    return { hasError: false, data: await promise };\n  } catch (error) {\n    return { hasError: tru
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T00:59:11.431Z
Question Type: order-sequence
Function: syncMapErr
Function Size: 295 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: syncMapErr (TypeScript)\n// Wraps a synchronous function to catch throws and return them as part of the value.\n\nexport function syncMapErr<T>(fn: () => T): Result<T> {\n  try {\n    return { hasError: false, data: fn() };\n  } catch (error) {\n    return { hasError: true, error };\n  }\n}
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T00:59:14.864Z
Question Type: select-all
Function: syncMapErr
Function Size: 295 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: syncMapErr (TypeScript)\n// Wraps a synchronous function to catch throws and return them as part of the value.\n\nexport function syncMapErr<T>(fn: () => T): Result<T> {\n  try {\n    return { hasError: false, data: fn() };\n  } catch (error) {\n    return { hasError: true, error };\n  }\n}
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T00:59:15.728Z
Question Type: order-sequence
Function: mapErr
Function Size: 315 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: mapErr (TypeScript)\n// Wraps a promise to catch errors and return them as part of the promise result.\n\nexport async function mapErr<T>(promise: Promise<T>): Promise<Result<T>> {\n  try {\n    return { hasError: false, data: await promise };\n  } catch (error) {\n    return { hasError: true,
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T00:59:17.398Z
Question Type: multiple-choice
Function: syncMapErr
Function Size: 304 characters
Questions Generated: 0
Repository: Unknown
Function Preview: // Function: syncMapErr (TypeScript)\n// Wrapper around a synchronise function to catch throws and return them as part of the value.\n\nexport function syncMapErr<T>(fn: () => T): Result<T> {\n  try {\n    return { hasError: false, data: fn() };\n  } catch (error) {\n    return { hasError: true, error };\n 
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T00:59:18.798Z
Question Type: function-variant
Function: generateSearchLink
Function Size: 477 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: generateSearchLink (TypeScript)\n// Generates a search link for the forum based on the title, block, and superBlock.\n\nexport const generateSearchLink = (\n  title: string,\n  block: string,\n  superBlock: string\n) => {\n  const titleText = t(`intro:${superBlock}.blocks.${block}.title`);\n  co
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T00:59:19.182Z
Question Type: select-all
Function: mapErr
Function Size: 317 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: mapErr (TypeScript)\n// Wrapper around a promise to catch errors and return them as part of the promise.\n\nexport async function mapErr<T>(promise: Promise<T>): Promise<Result<T>> {\n  try {\n    return { hasError: false, data: await promise };\n  } catch (error) {\n    return { hasError: tru
================================================================================


=== SESSION SUMMARY ===
Session ID: session-1760546051744
Repository: Unknown
Total Questions Generated: 8
Total Chunks Processed: 4
Ended: 2025-10-16T00:59:19.226Z
================================================================================


--- QUESTION GENERATION ---
Timestamp: 2025-10-16T00:59:19.297Z
Question Type: select-all
Function: SocialIcons
Function Size: 867 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: SocialIcons (TypeScript)\n// Renders a collection of social media icons based on provided URLs.\n\nfunction SocialIcons(props: SocialIconsProps): JSX.Element | null {\n  const { githubProfile, linkedin, twitter, bluesky, username, website } = props;\n  const show = linkedin || githubProfile 
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T00:59:23.553Z
Question Type: function-variant
Function: SocialIcons
Function Size: 867 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: SocialIcons (TypeScript)\n// Renders a collection of social media icons based on provided URLs.\n\nfunction SocialIcons(props: SocialIconsProps): JSX.Element | null {\n  const { githubProfile, linkedin, twitter, bluesky, username, website } = props;\n  const show = linkedin || githubProfile 
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T00:59:24.220Z
Question Type: select-all
Function: WebsiteIcon
Function Size: 418 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: WebsiteIcon (TypeScript)\n// Renders a website link icon with aria-label for accessibility.\n\nfunction WebsiteIcon({ href, username }: IconProps): JSX.Element {\n  const { t } = useTranslation();\n  return (\n    <a\n      aria-label={t('aria.website', { username })}\n      href={href}\n      r
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T00:59:30.179Z
Question Type: true-false
Function: GitHubIcon
Function Size: 416 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: GitHubIcon (TypeScript)\n// Renders a GitHub icon link with aria-label for accessibility.\n\nfunction GitHubIcon({ href, username }: IconProps): JSX.Element {\n  const { t } = useTranslation();\n  return (\n    <a\n      aria-label={t('aria.github', { username })}\n      href={href}\n      rel='
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T00:59:30.458Z
Question Type: function-variant
Function: BlueskyIcon
Function Size: 421 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: BlueskyIcon (TypeScript)\n// Renders a Bluesky icon link with aria-label for accessibility.\n\nfunction BlueskyIcon({ href, username }: IconProps): JSX.Element {\n  const { t } = useTranslation();\n  return (\n    <a\n      aria-label={t('aria.bluesky', { username })}\n      href={href}\n      r
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T00:59:34.940Z
Question Type: function-variant
Function: LinkedInIcon
Function Size: 426 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: LinkedInIcon (TypeScript)\n// Renders a LinkedIn icon link with aria-label for accessibility.\n\nfunction LinkedInIcon({ href, username }: IconProps): JSX.Element {\n  const { t } = useTranslation();\n  return (\n    <a\n      aria-label={t('aria.linkedin', { username })}\n      href={href}\n   
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T00:59:36.076Z
Question Type: function-variant
Function: WebsiteIcon
Function Size: 418 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: WebsiteIcon (TypeScript)\n// Renders a website link icon with aria-label for accessibility.\n\nfunction WebsiteIcon({ href, username }: IconProps): JSX.Element {\n  const { t } = useTranslation();\n  return (\n    <a\n      aria-label={t('aria.website', { username })}\n      href={href}\n      r
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T00:59:38.762Z
Question Type: select-all
Function: mapErr
Function Size: 315 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: mapErr (TypeScript)\n// Wraps a promise to catch errors and return them as part of the promise result.\n\nexport async function mapErr<T>(promise: Promise<T>): Promise<Result<T>> {\n  try {\n    return { hasError: false, data: await promise };\n  } catch (error) {\n    return { hasError: true,
================================================================================


=== SESSION SUMMARY ===
Session ID: session-1760546051744
Repository: Unknown
Total Questions Generated: 15
Total Chunks Processed: 8
Ended: 2025-10-16T00:59:47.282Z
================================================================================


--- FUNCTION EXTRACTION ---
Timestamp: 2025-10-16T01:00:05.880Z
File: [2 files: codespaces-instructions.tsx, help-modal.tsx]
Functions Extracted: 2


Function 1: CodespacesInstructions
Language: TypeScript
Lines: 66
Full Code:
--------------------------------------------------------------------------------
export function CodespacesInstructions({ challengeType, copyUrl, copyUserToken, generateUserToken, isSignedIn, title, userToken }: CodespacesInstructionsProps) {
  const { t } = useTranslation();

  function openCodespaces() {
    const codespacesUrl = `https://codespaces.new/freeCodeCamp/rdb-alpha`;

    window.open(codespacesUrl, '_blank');
  }

  return (
    <div className='ca-description'>
      <p>{t('learn.codespaces.intro')}</p>
      <ol>
        <li>
          <Trans i18nKey='learn.codespaces.step-1'>
            <a
              href='https://github.com/signup'
              rel='noopener noreferrer'
              target='_blank'
            >
              placeholder
            </a>
          </Trans>
        </li>
        {isSignedIn && (
          <>
            <Spacer size='s' />
            <p>{t('learn.local.sub-step-heading')}</p>
            <ol>
              <li>{t('learn.local.sub-step-1')}</li>
              <Spacer size='xxs' />
              <Button
                disabled={!!userToken}
                block={true}
                onClick={() => void generateUserToken()}
              >
                {t('learn.local.generate-token-btn')}
              </Button>
              <Spacer size='xs' />
              <li>{t('learn.local.sub-step-2')}</li>
              <Spacer size='xxs' />
              <Button
                disabled={!userToken}
                block={true}
                onClick={copyUserToken}
              >
                {t('learn.local.copy-token-btn')}
              </Button>
              <Spacer size='xs' />
              <li>
                <Trans i18nKey='learn.codespaces.sub-step-3'>
                  <a
                    href='https://github.com/settings/codespaces/secrets/new'
                    rel='noopener noreferrer'
                    target='_blank'
                  >
                    Codespaces secrets page
                  </a>
                </Trans>
              </li>
              <li>
                <Trans i18nKey='learn.codespaces.sub-step-4'>
                  <code>placeholder</code>
                </Trans>
              </li>
              <li>
                <Trans i18nKey='learn.codespaces.sub-step-5'>
                  <code>placeholder</code>
                </Trans>
              </li>
              <li>
                <Trans i18nKey='learn.codespaces.sub-step-6'>
                  <code>placeholder</code>
                  <code>placeholder</code>
                </Trans>
              </li>
            </ol>
            <Spacer size='s' />
          </>
        )}
        <li>{t('learn.codespaces.step-2')}</li>
        <li>{t('learn.codespaces.step-3')}</li>
        <li>
          {t('learn.codespaces.step-4')}
          <ul>
            <li>{t('learn.codespaces.step-5')}</li>
            <li>
              <Trans i18nKey='learn.codespaces.step-6'>
                <code>placeholder</code>
              </Trans>
            </li>
            <li>
              <Trans i18nKey='learn.codespaces.step-7'>
                <code>placeholder</code>
              </Trans>
            </li>
            <li>
              <Trans i18nKey='learn.codespaces.step-8'>
                <code>placeholder</code>
              </Trans>
            </li>
            <li>{t('learn.local.step-6')}</li>
            <li>{t('learn.local.step-7')}</li>
            <Spacer size='xxs' />
            <Button block={true} onClick={copyUrl}>
              {t('learn.local.copy-url')}
            </Button>
            <Spacer size='xs' />
            <li>{t('learn.local.step-8')}</li>
          </ul>
        </li>
        <li>{t('learn.codespaces.step-9')}</li>
      </ol>
      <Spacer size='m' />
      <CodespacesContinueAlert title={title} />
      {isSignedIn && <CodespacesLogoutAlert course={title} />}
      <CodeAllyButton challengeType={challengeType} onClick={openCodespaces} />
    </div>
}
--------------------------------------------------------------------------------


Function 2: generateSearchLink
Language: TypeScript
Lines: 8
Full Code:
--------------------------------------------------------------------------------
export const generateSearchLink = (title: string, block: string, superBlock: string) => {
  const titleText = t(`intro:${superBlock}.blocks.${block}.title`);
  const selector = 'in:title';
  const query = encodeURIComponent(`${titleText} - ${title} ${selector}`);

  const search = `${forumLocation}/search?q=${query}`;
  return search;
};
--------------------------------------------------------------------------------

================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T01:00:11.908Z
Question Type: multiple-choice
Function: CodespacesInstructions
Function Size: 4079 characters
Questions Generated: 3
Repository: Unknown
Function Preview: // Function: CodespacesInstructions (TypeScript)\n// Renders the instructions for using Codespaces, including generating and copying user tokens.\n\nexport function CodespacesInstructions({ challengeType, copyUrl, copyUserToken, generateUserToken, isSignedIn, title, userToken }: CodespacesInstructionsP
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T01:00:20.514Z
Question Type: order-sequence
Function: CodespacesInstructions
Function Size: 4079 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: CodespacesInstructions (TypeScript)\n// Renders the instructions for using Codespaces, including generating and copying user tokens.\n\nexport function CodespacesInstructions({ challengeType, copyUrl, copyUserToken, generateUserToken, isSignedIn, title, userToken }: CodespacesInstructionsP
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T01:00:29.530Z
Question Type: function-variant
Function: generateSearchLink
Function Size: 451 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: generateSearchLink (TypeScript)\n// Generates a search link for a specific challenge in the forum.\n\nexport const generateSearchLink = (title: string, block: string, superBlock: string) => {\n  const titleText = t(`intro:${superBlock}.blocks.${block}.title`);\n  const selector = 'in:title';
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T01:00:30.949Z
Question Type: true-false
Function: CodespacesInstructions
Function Size: 4079 characters
Questions Generated: 0
Repository: Unknown
Function Preview: // Function: CodespacesInstructions (TypeScript)\n// Renders the instructions for using Codespaces, including generating and copying user tokens.\n\nexport function CodespacesInstructions({ challengeType, copyUrl, copyUserToken, generateUserToken, isSignedIn, title, userToken }: CodespacesInstructionsP
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T01:00:35.855Z
Question Type: select-all
Function: generateSearchLink
Function Size: 451 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: generateSearchLink (TypeScript)\n// Generates a search link for a specific challenge in the forum.\n\nexport const generateSearchLink = (title: string, block: string, superBlock: string) => {\n  const titleText = t(`intro:${superBlock}.blocks.${block}.title`);\n  const selector = 'in:title';
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T01:00:36.061Z
Question Type: function-variant
Function: CodespacesInstructions
Function Size: 4079 characters
Questions Generated: 0
Repository: Unknown
Function Preview: // Function: CodespacesInstructions (TypeScript)\n// Renders the instructions for using Codespaces, including generating and copying user tokens.\n\nexport function CodespacesInstructions({ challengeType, copyUrl, copyUserToken, generateUserToken, isSignedIn, title, userToken }: CodespacesInstructionsP
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T01:00:37.217Z
Question Type: select-all
Function: generateSearchLink
Function Size: 451 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: generateSearchLink (TypeScript)\n// Generates a search link for a specific challenge in the forum.\n\nexport const generateSearchLink = (title: string, block: string, superBlock: string) => {\n  const titleText = t(`intro:${superBlock}.blocks.${block}.title`);\n  const selector = 'in:title';
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T01:00:39.024Z
Question Type: function-variant
Function: generateSearchLink
Function Size: 451 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: generateSearchLink (TypeScript)\n// Generates a search link for a specific challenge in the forum.\n\nexport const generateSearchLink = (title: string, block: string, superBlock: string) => {\n  const titleText = t(`intro:${superBlock}.blocks.${block}.title`);\n  const selector = 'in:title';
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T01:00:41.938Z
Question Type: true-false
Function: generateSearchLink
Function Size: 451 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: generateSearchLink (TypeScript)\n// Generates a search link for a specific challenge in the forum.\n\nexport const generateSearchLink = (title: string, block: string, superBlock: string) => {\n  const titleText = t(`intro:${superBlock}.blocks.${block}.title`);\n  const selector = 'in:title';
================================================================================


=== SESSION SUMMARY ===
Session ID: session-1760546051744
Repository: Unknown
Total Questions Generated: 9
Total Chunks Processed: 2
Ended: 2025-10-16T01:00:42.044Z
================================================================================


--- FUNCTION EXTRACTION ---
Timestamp: 2025-10-16T01:02:30.403Z
File: freeCodeCamp-freeCodeCamp-0c8fc66/client/src/templates/Challenges/ms-trophy/link-ms-user.tsx
Functions Extracted: 1


Function 1: LinkMsUser
Language: TypeScript
Lines: 69
Full Code:
--------------------------------------------------------------------------------
function LinkMsUser({
  isSignedIn,
  msUsername,
  linkMsUsername,
  unlinkMsUsername,
  isProcessing,
  setIsProcessing
}: Props): JSX.Element {
  const { t } = useTranslation();
  const [msTranscriptUrl, setMsTranscriptUrl] = useState('');

  function handleLinkUsername(e: React.FormEvent) {
    e.preventDefault();
    setIsProcessing(true);
    linkMsUsername({ msTranscriptUrl });
  }

  function handleInputChange(e: React.ChangeEvent<HTMLInputElement>) {
    e.preventDefault();
    setMsTranscriptUrl(e.target.value);
  }

  const isValid = isMicrosoftTranscriptLink(msTranscriptUrl);
  const isPristine = msTranscriptUrl === '';
  const isDisabled = isProcessing || !isValid;
  const showWarning = !isPristine && !isValid;

  return !isSignedIn ? (
    <>
      <ChallengeHeading heading={t('learn.ms.link-header')} />
      <Spacer size='xs' />

      <p>{t('learn.ms.link-signin')}</p>
      <Login />
    </>
  ) : msUsername ? (
    <>
      <p>{t('learn.ms.linked', { msUsername })}</p>
      <Button
        block={true}
        variant='primary'
        disabled={isProcessing}
        onClick={unlinkMsUsername}
      >
        {t('buttons.unlink-account')}
      </Button>
    </>
  ) : (
    <div>
      <ChallengeHeading heading={'learn.ms.link-header'} />
      <Spacer size='xs' />

      <p>{t('learn.ms.unlinked')}</p>
      <ol className='link-ms-user-ol'>
        <li>
          <Trans i18nKey='learn.ms.link-li-1'>
            <a
              href='https://learn.microsoft.com/users/me/transcript'
              rel='noreferrer'
              target='_blank'
            >
              placeholder
            </a>
          </Trans>
        </li>
        <li>{t('learn.ms.link-li-2')}</li>
        <li>{t('learn.ms.link-li-3')}</li>
        <li>{t('learn.ms.link-li-4')}</li>
        <li>
          <Trans i18nKey='learn.ms.link-li-5'>
            <pre className='language-html'>placeholder</pre>
          </Trans>
        </li>
        <li>{t('learn.ms.link-li-6')}</li>
      </ol>

      <Spacer size='m' />
      <form onSubmit={handleLinkUsername}>
        <FormGroup validationState={isValid ? 'success' : 'error'}>
          <ControlLabel htmlFor='transcript-link'>
            <strong>{t('learn.ms.transcript-label')}</strong>
          </ControlLabel>
          <FormControl
            id='transcript-link'
            type='url'
            onChange={handleInputChange}
            placeholder='https://learn.microsoft.com/en-us/users/username/transcript/transcriptId'
          />
        </FormGroup>
        <Button
          disabled={isDisabled}
          block={true}
          variant='primary'
          onClick={handleLinkUsername}
        >
          {t('buttons.link-account')}
        </Button>
        {showWarning && (
          <HelpBlock>
            <Trans i18nKey='learn.ms.invalid-transcript'>
              placeholder <code>placeholder</code> placeholder
            </Trans>
          </HelpBlock>
        )}
      </form>
    </div>
  );
}
--------------------------------------------------------------------------------

================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T01:02:38.570Z
Question Type: order-sequence
Function: LinkMsUser
Function Size: 3140 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: LinkMsUser (TypeScript)\n// Renders the UI for linking a Microsoft user account, handling input changes, and submission.\n\nfunction LinkMsUser({\n  isSignedIn,\n  msUsername,\n  linkMsUsername,\n  unlinkMsUsername,\n  isProcessing,\n  setIsProcessing\n}: Props): JSX.Element {\n  const { t } = use
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T01:02:52.708Z
Question Type: select-all
Function: LinkMsUser
Function Size: 3140 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: LinkMsUser (TypeScript)\n// Renders the UI for linking a Microsoft user account, handling input changes, and submission.\n\nfunction LinkMsUser({\n  isSignedIn,\n  msUsername,\n  linkMsUsername,\n  unlinkMsUsername,\n  isProcessing,\n  setIsProcessing\n}: Props): JSX.Element {\n  const { t } = use
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T01:02:53.132Z
Question Type: select-all
Function: LinkMsUser
Function Size: 3140 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: LinkMsUser (TypeScript)\n// Renders the UI for linking a Microsoft user account, handling input changes, and submission.\n\nfunction LinkMsUser({\n  isSignedIn,\n  msUsername,\n  linkMsUsername,\n  unlinkMsUsername,\n  isProcessing,\n  setIsProcessing\n}: Props): JSX.Element {\n  const { t } = use
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T01:03:00.517Z
Question Type: function-variant
Function: LinkMsUser
Function Size: 3140 characters
Questions Generated: 0
Repository: Unknown
Function Preview: // Function: LinkMsUser (TypeScript)\n// Renders the UI for linking a Microsoft user account, handling input changes, and submission.\n\nfunction LinkMsUser({\n  isSignedIn,\n  msUsername,\n  linkMsUsername,\n  unlinkMsUsername,\n  isProcessing,\n  setIsProcessing\n}: Props): JSX.Element {\n  const { t } = use
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T01:03:01.890Z
Question Type: multiple-choice
Function: LinkMsUser
Function Size: 3140 characters
Questions Generated: 3
Repository: Unknown
Function Preview: // Function: LinkMsUser (TypeScript)\n// Renders the UI for linking a Microsoft user account, handling input changes, and submission.\n\nfunction LinkMsUser({\n  isSignedIn,\n  msUsername,\n  linkMsUsername,\n  unlinkMsUsername,\n  isProcessing,\n  setIsProcessing\n}: Props): JSX.Element {\n  const { t } = use
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T01:03:01.938Z
Question Type: select-all
Function: LinkMsUser
Function Size: 3140 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: LinkMsUser (TypeScript)\n// Renders the UI for linking a Microsoft user account, handling input changes, and submission.\n\nfunction LinkMsUser({\n  isSignedIn,\n  msUsername,\n  linkMsUsername,\n  unlinkMsUsername,\n  isProcessing,\n  setIsProcessing\n}: Props): JSX.Element {\n  const { t } = use
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T01:03:11.164Z
Question Type: order-sequence
Function: LinkMsUser
Function Size: 3140 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: LinkMsUser (TypeScript)\n// Renders the UI for linking a Microsoft user account, handling input changes, and submission.\n\nfunction LinkMsUser({\n  isSignedIn,\n  msUsername,\n  linkMsUsername,\n  unlinkMsUsername,\n  isProcessing,\n  setIsProcessing\n}: Props): JSX.Element {\n  const { t } = use
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T01:03:16.219Z
Question Type: select-all
Function: LinkMsUser
Function Size: 3140 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: LinkMsUser (TypeScript)\n// Renders the UI for linking a Microsoft user account, handling input changes, and submission.\n\nfunction LinkMsUser({\n  isSignedIn,\n  msUsername,\n  linkMsUsername,\n  unlinkMsUsername,\n  isProcessing,\n  setIsProcessing\n}: Props): JSX.Element {\n  const { t } = use
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T01:03:19.130Z
Question Type: true-false
Function: LinkMsUser
Function Size: 3140 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: LinkMsUser (TypeScript)\n// Renders the UI for linking a Microsoft user account, handling input changes, and submission.\n\nfunction LinkMsUser({\n  isSignedIn,\n  msUsername,\n  linkMsUsername,\n  unlinkMsUsername,\n  isProcessing,\n  setIsProcessing\n}: Props): JSX.Element {\n  const { t } = use
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T01:03:30.640Z
Question Type: function-variant
Function: LinkMsUser
Function Size: 3140 characters
Questions Generated: 0
Repository: Unknown
Function Preview: // Function: LinkMsUser (TypeScript)\n// Renders the UI for linking a Microsoft user account, handling input changes, and submission.\n\nfunction LinkMsUser({\n  isSignedIn,\n  msUsername,\n  linkMsUsername,\n  unlinkMsUsername,\n  isProcessing,\n  setIsProcessing\n}: Props): JSX.Element {\n  const { t } = use
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T01:03:33.164Z
Question Type: true-false
Function: LinkMsUser
Function Size: 3140 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: LinkMsUser (TypeScript)\n// Renders the UI for linking a Microsoft user account, handling input changes, and submission.\n\nfunction LinkMsUser({\n  isSignedIn,\n  msUsername,\n  linkMsUsername,\n  unlinkMsUsername,\n  isProcessing,\n  setIsProcessing\n}: Props): JSX.Element {\n  const { t } = use
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T01:03:39.304Z
Question Type: function-variant
Function: LinkMsUser
Function Size: 3140 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: LinkMsUser (TypeScript)\n// Renders the UI for linking a Microsoft user account, handling input changes, and submission.\n\nfunction LinkMsUser({\n  isSignedIn,\n  msUsername,\n  linkMsUsername,\n  unlinkMsUsername,\n  isProcessing,\n  setIsProcessing\n}: Props): JSX.Element {\n  const { t } = use
================================================================================


=== SESSION SUMMARY ===
Session ID: session-1760546051744
Repository: Unknown
Total Questions Generated: 12
Total Chunks Processed: 1
Ended: 2025-10-16T01:03:39.522Z
================================================================================


--- FUNCTION EXTRACTION ---
Timestamp: 2025-10-16T01:04:55.364Z
File: freeCodeCamp-freeCodeCamp-0c8fc66/client/src/templates/Challenges/exam-download/show.tsx
Functions Extracted: 2


Function 1: ShowExamDownload
Language: TypeScript
Lines: 34
Full Code:
--------------------------------------------------------------------------------
function ShowExamDownload({
  data: {
    challengeNode: {
      challenge: { id, title, translationPending }
    }
  },
  isChallengeCompleted,
  isSignedIn
}: ShowExamDownloadProps): JSX.Element {
  const [latestVersion, setLatestVersion] = useState<string | null>(null);

  const [downloadLink, setDownloadLink] = useState<string | undefined>('');
  const [downloadLinks, setDownloadLinks] = useState<string[]>([]);

  const os = useDetectOS();

  const { t } = useTranslation();

  useEffect(() => {
    async function checkLatestVersion() {
      try {
        const response = await fetch(
          'https://api.github.com/repos/freeCodeCamp/exam-env/releases/latest'
        );
        if (response.ok) {
          const data = (await response.json()) as GitProps;
          const { tag_name, assets } = data;
          setLatestVersion(tag_name);
          const urls = assets.map(link => link.browser_download_url);
          setDownloadLink(handleDownloadLink(urls));
          setDownloadLinks(urls);
        }
      } catch {
        setLatestVersion('...');
      }
    }

    void checkLatestVersion();
  }, []);
}
--------------------------------------------------------------------------------


Function 2: handleDownloadLink
Language: TypeScript
Lines: 34
Full Code:
--------------------------------------------------------------------------------
function handleDownloadLink(downloadLinks: string[]) {
    const win = downloadLinks.find(link => link.match(/\.exe/));
    const macARM = downloadLinks.find(
      link => link.match(/aarch64/) && link.match(/\.dmg/)
    );
    const macX64 = downloadLinks.find(
      link => link.match(/x64/) && link.match(/\.dmg/)
    );

    const linuxARM = downloadLinks.find(
      link => link.match(/aarch64/) && link.match(/tar\.gz/)
    );

    const linuxX64 = downloadLinks.find(
      link => link.match(/amd64/) && link.match(/AppImage/)
    );

    if (os.os === 'WIN') {
      if (isEmpty(win)) return '';  
      return win;
    }

    if (os.os === 'MAC') {
      if (os.architecture.toLowerCase() === 'arm') {
        if (isEmpty(macARM)) return '';  
        return macARM;
      } else {
        if (isEmpty(macX64)) return '';  
        return macX64;
      }
    }

    if (os.os === 'LINUX') {
      if (os.architecture.toLowerCase() === 'arm') {
        if (isEmpty(linuxARM)) return '';  
        return linuxARM;
      } else {
        if (isEmpty(linuxX64)) return '';  
        return linuxX64;
      }
    }

    return '';
  }
--------------------------------------------------------------------------------

================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T01:05:05.815Z
Question Type: select-all
Function: handleDownloadLink
Function Size: 1288 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: handleDownloadLink (TypeScript)\n// Determines the appropriate download link based on the user's operating system and architecture.\n\nfunction handleDownloadLink(downloadLinks: string[]) {\n    const win = downloadLinks.find(link => link.match(/\.exe/));\n    const macARM = downloadLinks.fi
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T01:05:08.112Z
Question Type: select-all
Function: ShowExamDownload
Function Size: 1289 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: ShowExamDownload (TypeScript)\n// Main component that handles the display and download of exam resources, fetching the latest version from GitHub.\n\nfunction ShowExamDownload({\n  data: {\n    challengeNode: {\n      challenge: { id, title, translationPending }\n    }\n  },\n  isChallengeComple
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T01:05:09.017Z
Question Type: order-sequence
Function: ShowExamDownload
Function Size: 1289 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: ShowExamDownload (TypeScript)\n// Main component that handles the display and download of exam resources, fetching the latest version from GitHub.\n\nfunction ShowExamDownload({\n  data: {\n    challengeNode: {\n      challenge: { id, title, translationPending }\n    }\n  },\n  isChallengeComple
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T01:05:18.181Z
Question Type: select-all
Function: ShowExamDownload
Function Size: 1289 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: ShowExamDownload (TypeScript)\n// Main component that handles the display and download of exam resources, fetching the latest version from GitHub.\n\nfunction ShowExamDownload({\n  data: {\n    challengeNode: {\n      challenge: { id, title, translationPending }\n    }\n  },\n  isChallengeComple
================================================================================

--- FUNCTION EXTRACTION ---
Timestamp: 2025-10-16T01:05:18.416Z
File: [2 files: index.ts, TODO: Convert to DELETE]
Functions Extracted: 12


Function 1: mapErr
Language: TypeScript
Lines: 7
Full Code:
--------------------------------------------------------------------------------
export async function mapErr<T>(promise: Promise<T>): Promise<Result<T>> {
  try {
    return { hasError: false, data: await promise };
  } catch (error) {
    return { hasError: true, error };
  }
}
--------------------------------------------------------------------------------


Function 2: syncMapErr
Language: TypeScript
Lines: 7
Full Code:
--------------------------------------------------------------------------------
export function syncMapErr<T>(fn: () => T): Result<T> {
  try {
    return { hasError: false, data: fn() };
  } catch (error) {
    return { hasError: true, error };
  }
}
--------------------------------------------------------------------------------


Function 3: putUpdateMyAbout
Language: TypeScript
Lines: 6
Full Code:
--------------------------------------------------------------------------------
export function putUpdateMyAbout(
  values: MyAbout
): Promise<ResponseWithData<void>> {
  return put('/update-my-about', { ...values });
}
--------------------------------------------------------------------------------


Function 4: putUpdateMyUsername
Language: TypeScript
Lines: 5
Full Code:
--------------------------------------------------------------------------------
export function putUpdateMyUsername(
  username: string
): Promise<ResponseWithData<void>> {
  return put('/update-my-username', { username });
}
--------------------------------------------------------------------------------


Function 5: putUpdateMyProfileUI
Language: TypeScript
Lines: 6
Full Code:
--------------------------------------------------------------------------------
export function putUpdateMyProfileUI(
  profileUI: User['profileUI']
): Promise<ResponseWithData<void>> {
  return put('/update-my-profileui', { profileUI });
}
--------------------------------------------------------------------------------


Function 6: putUpdateMySocials
Language: TypeScript
Lines: 5
Full Code:
--------------------------------------------------------------------------------
export function putUpdateMySocials(
  update: Record<string, string>
): Promise<ResponseWithData<void>> {
  return put('/update-my-socials', update);
}
--------------------------------------------------------------------------------


Function 7: putUpdateMyKeyboardShortcuts
Language: TypeScript
Lines: 5
Full Code:
--------------------------------------------------------------------------------
export function putUpdateMyKeyboardShortcuts(
  update: Record<string, string>
): Promise<ResponseWithData<void>> {
  return put('/update-my-keyboard-shortcuts', update);
}
--------------------------------------------------------------------------------


Function 8: putUpdateMyHonesty
Language: TypeScript
Lines: 5
Full Code:
--------------------------------------------------------------------------------
export function putUpdateMyHonesty(
  update: Record<string, string>
): Promise<ResponseWithData<void>> {
  return put('/update-my-honesty', update);
}
--------------------------------------------------------------------------------


Function 9: putUpdateMyQuincyEmail
Language: TypeScript
Lines: 6
Full Code:
--------------------------------------------------------------------------------
export function putUpdateMyQuincyEmail(update: {
  sendQuincyEmail: boolean;
}): Promise<ResponseWithData<void>> {
  return put('/update-my-quincy-email', update);
}
--------------------------------------------------------------------------------


Function 10: putUpdateMyPortfolio
Language: TypeScript
Lines: 5
Full Code:
--------------------------------------------------------------------------------
export function putUpdateMyPortfolio(
  update: Record<string, string>
): Promise<ResponseWithData<void>> {
  return put('/update-my-portfolio', update);
}
--------------------------------------------------------------------------------


Function 11: putUserUpdateEmail
Language: TypeScript
Lines: 5
Full Code:
--------------------------------------------------------------------------------
export function putUserUpdateEmail(
  email: string
): Promise<ResponseWithData<void>> {
  return put('/update-my-email', { email });
}
--------------------------------------------------------------------------------


Function 12: putVerifyCert
Language: TypeScript
Lines: 5
Full Code:
--------------------------------------------------------------------------------
export function putVerifyCert(
  certSlug: string
): Promise<ResponseWithData<void>> {
  return put('/certificate/verify', { certSlug });
}
--------------------------------------------------------------------------------

================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T01:05:21.192Z
Question Type: order-sequence
Function: handleDownloadLink
Function Size: 1288 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: handleDownloadLink (TypeScript)\n// Determines the appropriate download link based on the user's operating system and architecture.\n\nfunction handleDownloadLink(downloadLinks: string[]) {\n    const win = downloadLinks.find(link => link.match(/\.exe/));\n    const macARM = downloadLinks.fi
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T01:05:25.440Z
Question Type: function-variant
Function: handleDownloadLink
Function Size: 1288 characters
Questions Generated: 0
Repository: Unknown
Function Preview: // Function: handleDownloadLink (TypeScript)\n// Determines the appropriate download link based on the user's operating system and architecture.\n\nfunction handleDownloadLink(downloadLinks: string[]) {\n    const win = downloadLinks.find(link => link.match(/\.exe/));\n    const macARM = downloadLinks.fi
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T01:05:25.769Z
Question Type: select-all
Function: putUpdateMyHonesty
Function Size: 237 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: putUpdateMyHonesty (TypeScript)\n// Updates the user's honesty settings.\n\nexport function putUpdateMyHonesty(\n  update: Record<string, string>\n): Promise<ResponseWithData<void>> {\n  return put('/update-my-honesty', update);\n}
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T01:05:28.119Z
Question Type: function-variant
Function: putUserUpdateEmail
Function Size: 218 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: putUserUpdateEmail (TypeScript)\n// Updates the user's email address.\n\nexport function putUserUpdateEmail(\n  email: string\n): Promise<ResponseWithData<void>> {\n  return put('/update-my-email', { email });\n}
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T01:05:30.091Z
Question Type: order-sequence
Function: putUpdateMyAbout
Function Size: 224 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: putUpdateMyAbout (TypeScript)\n// Updates the user's about information.\n\nexport function putUpdateMyAbout(\n  values: MyAbout\n): Promise<ResponseWithData<void>> {\n  return put('/update-my-about', { ...values });\n}
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T01:05:31.525Z
Question Type: function-variant
Function: putUpdateMySocials
Function Size: 239 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: putUpdateMySocials (TypeScript)\n// Updates the user's social media links.\n\nexport function putUpdateMySocials(\n  update: Record<string, string>\n): Promise<ResponseWithData<void>> {\n  return put('/update-my-socials', update);\n}
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T01:05:31.760Z
Question Type: multiple-choice
Function: mapErr
Function Size: 317 characters
Questions Generated: 0
Repository: Unknown
Function Preview: // Function: mapErr (TypeScript)\n// Wrapper around a promise to catch errors and return them as part of the promise.\n\nexport async function mapErr<T>(promise: Promise<T>): Promise<Result<T>> {\n  try {\n    return { hasError: false, data: await promise };\n  } catch (error) {\n    return { hasError: tru
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T01:05:31.787Z
Question Type: select-all
Function: handleDownloadLink
Function Size: 1288 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: handleDownloadLink (TypeScript)\n// Determines the appropriate download link based on the user's operating system and architecture.\n\nfunction handleDownloadLink(downloadLinks: string[]) {\n    const win = downloadLinks.find(link => link.match(/\.exe/));\n    const macARM = downloadLinks.fi
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T01:05:35.550Z
Question Type: true-false
Function: putUpdateMyQuincyEmail
Function Size: 262 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: putUpdateMyQuincyEmail (TypeScript)\n// Updates the user's Quincy email preference.\n\nexport function putUpdateMyQuincyEmail(update: {\n  sendQuincyEmail: boolean;\n}): Promise<ResponseWithData<void>> {\n  return put('/update-my-quincy-email', update);\n}
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T01:05:38.057Z
Question Type: select-all
Function: putUpdateMyQuincyEmail
Function Size: 262 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: putUpdateMyQuincyEmail (TypeScript)\n// Updates the user's Quincy email preference.\n\nexport function putUpdateMyQuincyEmail(update: {\n  sendQuincyEmail: boolean;\n}): Promise<ResponseWithData<void>> {\n  return put('/update-my-quincy-email', update);\n}
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T01:05:38.154Z
Question Type: function-variant
Function: ShowExamDownload
Function Size: 1289 characters
Questions Generated: 0
Repository: Unknown
Function Preview: // Function: ShowExamDownload (TypeScript)\n// Main component that handles the display and download of exam resources, fetching the latest version from GitHub.\n\nfunction ShowExamDownload({\n  data: {\n    challengeNode: {\n      challenge: { id, title, translationPending }\n    }\n  },\n  isChallengeComple
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T01:05:38.440Z
Question Type: select-all
Function: ShowExamDownload
Function Size: 1289 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: ShowExamDownload (TypeScript)\n// Main component that handles the display and download of exam resources, fetching the latest version from GitHub.\n\nfunction ShowExamDownload({\n  data: {\n    challengeNode: {\n      challenge: { id, title, translationPending }\n    }\n  },\n  isChallengeComple
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T01:05:39.688Z
Question Type: select-all
Function: putVerifyCert
Function Size: 214 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: putVerifyCert (TypeScript)\n// Verifies a user's certificate.\n\nexport function putVerifyCert(\n  certSlug: string\n): Promise<ResponseWithData<void>> {\n  return put('/certificate/verify', { certSlug });\n}
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T01:05:39.764Z
Question Type: true-false
Function: putUpdateMyKeyboardShortcuts
Function Size: 270 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: putUpdateMyKeyboardShortcuts (TypeScript)\n// Updates the user's keyboard shortcuts.\n\nexport function putUpdateMyKeyboardShortcuts(\n  update: Record<string, string>\n): Promise<ResponseWithData<void>> {\n  return put('/update-my-keyboard-shortcuts', update);\n}
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T01:05:43.388Z
Question Type: order-sequence
Function: putUpdateMyProfileUI
Function Size: 251 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: putUpdateMyProfileUI (TypeScript)\n// Updates the user's profile UI settings.\n\nexport function putUpdateMyProfileUI(\n  profileUI: User['profileUI']\n): Promise<ResponseWithData<void>> {\n  return put('/update-my-profileui', { profileUI });\n}
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T01:05:43.397Z
Question Type: true-false
Function: ShowExamDownload
Function Size: 1289 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: ShowExamDownload (TypeScript)\n// Main component that handles the display and download of exam resources, fetching the latest version from GitHub.\n\nfunction ShowExamDownload({\n  data: {\n    challengeNode: {\n      challenge: { id, title, translationPending }\n    }\n  },\n  isChallengeComple
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T01:05:45.939Z
Question Type: multiple-choice
Function: ShowExamDownload
Function Size: 1289 characters
Questions Generated: 3
Repository: Unknown
Function Preview: // Function: ShowExamDownload (TypeScript)\n// Main component that handles the display and download of exam resources, fetching the latest version from GitHub.\n\nfunction ShowExamDownload({\n  data: {\n    challengeNode: {\n      challenge: { id, title, translationPending }\n    }\n  },\n  isChallengeComple
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T01:05:47.579Z
Question Type: function-variant
Function: putUpdateMyPortfolio
Function Size: 236 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: putUpdateMyPortfolio (TypeScript)\n// Updates the user's portfolio.\n\nexport function putUpdateMyPortfolio(\n  update: Record<string, string>\n): Promise<ResponseWithData<void>> {\n  return put('/update-my-portfolio', update);\n}
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T01:05:48.198Z
Question Type: function-variant
Function: handleDownloadLink
Function Size: 1288 characters
Questions Generated: 0
Repository: Unknown
Function Preview: // Function: handleDownloadLink (TypeScript)\n// Determines the appropriate download link based on the user's operating system and architecture.\n\nfunction handleDownloadLink(downloadLinks: string[]) {\n    const win = downloadLinks.find(link => link.match(/\.exe/));\n    const macARM = downloadLinks.fi
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T01:05:48.378Z
Question Type: true-false
Function: handleDownloadLink
Function Size: 1288 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: handleDownloadLink (TypeScript)\n// Determines the appropriate download link based on the user's operating system and architecture.\n\nfunction handleDownloadLink(downloadLinks: string[]) {\n    const win = downloadLinks.find(link => link.match(/\.exe/));\n    const macARM = downloadLinks.fi
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T01:05:51.587Z
Question Type: function-variant
Function: putUpdateMyUsername
Function Size: 224 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: putUpdateMyUsername (TypeScript)\n// Updates the user's username.\n\nexport function putUpdateMyUsername(\n  username: string\n): Promise<ResponseWithData<void>> {\n  return put('/update-my-username', { username });\n}
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T01:05:54.770Z
Question Type: function-variant
Function: syncMapErr
Function Size: 304 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: syncMapErr (TypeScript)\n// Wrapper around a synchronous function to catch throws and return them as part of the value.\n\nexport function syncMapErr<T>(fn: () => T): Result<T> {\n  try {\n    return { hasError: false, data: fn() };\n  } catch (error) {\n    return { hasError: true, error };\n 
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T01:05:57.600Z
Question Type: select-all
Function: mapErr
Function Size: 317 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: mapErr (TypeScript)\n// Wrapper around a promise to catch errors and return them as part of the promise.\n\nexport async function mapErr<T>(promise: Promise<T>): Promise<Result<T>> {\n  try {\n    return { hasError: false, data: await promise };\n  } catch (error) {\n    return { hasError: tru
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T01:05:58.801Z
Question Type: select-all
Function: putUpdateMyKeyboardShortcuts
Function Size: 270 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: putUpdateMyKeyboardShortcuts (TypeScript)\n// Updates the user's keyboard shortcuts.\n\nexport function putUpdateMyKeyboardShortcuts(\n  update: Record<string, string>\n): Promise<ResponseWithData<void>> {\n  return put('/update-my-keyboard-shortcuts', update);\n}
================================================================================


=== SESSION SUMMARY ===
Session ID: session-1760546051744
Repository: Unknown
Total Questions Generated: 14
Total Chunks Processed: 12
Ended: 2025-10-16T01:05:58.802Z
================================================================================


--- QUESTION GENERATION ---
Timestamp: 2025-10-16T01:06:13.422Z
Question Type: function-variant
Function: handleDownloadLink
Function Size: 1288 characters
Questions Generated: 0
Repository: Unknown
Function Preview: // Function: handleDownloadLink (TypeScript)\n// Determines the appropriate download link based on the user's operating system and architecture.\n\nfunction handleDownloadLink(downloadLinks: string[]) {\n    const win = downloadLinks.find(link => link.match(/\.exe/));\n    const macARM = downloadLinks.fi
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T01:06:15.247Z
Question Type: function-variant
Function: ShowExamDownload
Function Size: 1289 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: ShowExamDownload (TypeScript)\n// Main component that handles the display and download of exam resources, fetching the latest version from GitHub.\n\nfunction ShowExamDownload({\n  data: {\n    challengeNode: {\n      challenge: { id, title, translationPending }\n    }\n  },\n  isChallengeComple
================================================================================


=== SESSION SUMMARY ===
Session ID: session-1760546051744
Repository: Unknown
Total Questions Generated: 13
Total Chunks Processed: 2
Ended: 2025-10-16T01:06:15.308Z
================================================================================


--- FUNCTION EXTRACTION ---
Timestamp: 2025-10-16T01:06:50.667Z
File: [2 files: Items per page in timeline., codespaces-instructions.tsx]
Functions Extracted: 5


Function 1: viewProject
Language: TypeScript
Lines: 5
Full Code:
--------------------------------------------------------------------------------
function viewProject(completedChallenge: CompletedChallenge): void {
    setCompletedChallenge(completedChallenge);
    setProjectTitle(
      idToNameMap.get(completedChallenge.id)?.challengeTitle ?? ''
    );
    openModal('projectPreview');
}
--------------------------------------------------------------------------------


Function 2: viewExamResults
Language: TypeScript
Lines: 5
Full Code:
--------------------------------------------------------------------------------
function viewExamResults(completedChallenge: CompletedChallenge): void {
    setCompletedChallenge(completedChallenge);
    setProjectTitle(
      idToNameMap.get(completedChallenge.id)?.challengeTitle ?? ''
    );
    openModal('examResults');
}
--------------------------------------------------------------------------------


Function 3: renderViewButton
Language: TypeScript
Lines: 12
Full Code:
--------------------------------------------------------------------------------
function renderViewButton(
    completedChallenge: CompletedChallenge
  ): React.ReactNode {
    const { id } = completedChallenge;
    const projectTitle = idToNameMap.get(id)?.challengeTitle || '';
    return (
      <SolutionDisplayWidget
        completedChallenge={completedChallenge}
        projectTitle={projectTitle}
        showUserCode={() => viewSolution(completedChallenge)}
        showProjectPreview={() => viewProject(completedChallenge)}
        showExamResults={() => viewExamResults(completedChallenge)}
        displayContext='timeline'
      ></SolutionDisplayWidget>
    );
  }
--------------------------------------------------------------------------------


Function 4: CodespacesContinueAlert
Language: TypeScript
Lines: 12
Full Code:
--------------------------------------------------------------------------------
function CodespacesContinueAlert({ title }: CodespacesContinueAlertProps) {
  return (
    <Callout variant='info'>
      <Trans values={{ title }} i18nKey='learn.codespaces.continue-project'>
        <a
          href='https://github.com/freeCodeCamp/rdb-alpha'
          rel='noopener noreferrer'
          target='_blank'
        >
          placeholder
        </a>
      </Trans>
      <Spacer size='m' />
      <Trans i18nKey='learn.codespaces.learn-more'>
        <a
          href='https://forum.freecodecamp.org/t/relational-database-curriculum-in-codespaces/761449'
          rel='noopener noreferrer'
          target='_blank'
        >
          placeholder
        </a>
      </Trans>
    </Callout>
  );
}
--------------------------------------------------------------------------------


Function 5: CodespacesLogoutAlert
Language: TypeScript
Lines: 6
Full Code:
--------------------------------------------------------------------------------
function CodespacesLogoutAlert({ course }: CodespacesLogoutAlertProps): JSX.Element {
  const { t } = useTranslation();
  return (
    <Callout variant='danger'>
      {t('learn.codespaces.logout-warning', { course })}
    </Callout>
  );
}
--------------------------------------------------------------------------------

================================================================================

--- FUNCTION EXTRACTION ---
Timestamp: 2025-10-16T01:06:54.688Z
File: [3 files: index.ts, TODO: Convert to DELETE, social-icons.tsx]
Functions Extracted: 5


Function 1: base64URLEncode
Language: TypeScript
Lines: 6
Full Code:
--------------------------------------------------------------------------------
export function base64URLEncode(buf: Buffer): string {
  return buf
    .toString('base64')
    .replace(/\+/g, '-')
    .replace(/\//g, '_')
    .replace(/=/g, '');
}
--------------------------------------------------------------------------------


Function 2: mapErr
Language: TypeScript
Lines: 8
Full Code:
--------------------------------------------------------------------------------
export async function mapErr<T>(promise: Promise<T>): Promise<Result<T>> {
  try {
    return { hasError: false, data: await promise };
  } catch (error) {
    return { hasError: true, error };
  }
}
--------------------------------------------------------------------------------


Function 3: syncMapErr
Language: TypeScript
Lines: 8
Full Code:
--------------------------------------------------------------------------------
export function syncMapErr<T>(fn: () => T): Result<T> {
  try {
    return { hasError: false, data: fn() };
  } catch (error) {
    return { hasError: true, error };
  }
}
--------------------------------------------------------------------------------


Function 4: putUpdateMyAbout
Language: TypeScript
Lines: 5
Full Code:
--------------------------------------------------------------------------------
export function putUpdateMyAbout(
  values: MyAbout
): Promise<ResponseWithData<void>> {
  return put('/update-my-about', { ...values });
}
--------------------------------------------------------------------------------


Function 5: SocialIcons
Language: TypeScript
Lines: 15
Full Code:
--------------------------------------------------------------------------------
function SocialIcons(props: SocialIconsProps): JSX.Element | null {
  const { githubProfile, linkedin, twitter, bluesky, username, website } =
    props;
  const show = linkedin || githubProfile || website || twitter || bluesky;
  if (!show) {
    return null;
  }

  return (
    <Row>
      <Col className='social-icons-row'>
        {linkedin ? <LinkedInIcon href={linkedin} username={username} /> : null}
        {githubProfile ? (
          <GitHubIcon href={githubProfile} username={username} />
        ) : null}
        {website ? <WebsiteIcon href={website} username={username} /> : null}
        {twitter ? <TwitterIcon href={twitter} username={username} /> : null}
        {bluesky ? <BlueskyIcon href={bluesky} username={username} /> : null}
      </Col>
    </Row>
  );
}
--------------------------------------------------------------------------------

================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T01:06:59.772Z
Question Type: select-all
Function: putUpdateMyAbout
Function Size: 224 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: putUpdateMyAbout (TypeScript)\n// Updates the user's about information.\n\nexport function putUpdateMyAbout(\n  values: MyAbout\n): Promise<ResponseWithData<void>> {\n  return put('/update-my-about', { ...values });\n}
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T01:07:00.069Z
Question Type: multiple-choice
Function: syncMapErr
Function Size: 304 characters
Questions Generated: 3
Repository: Unknown
Function Preview: // Function: syncMapErr (TypeScript)\n// Wrapper around a synchronise function to catch throws and return them as part of the value.\n\nexport function syncMapErr<T>(fn: () => T): Result<T> {\n  try {\n    return { hasError: false, data: fn() };\n  } catch (error) {\n    return { hasError: true, error };\n 
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T01:07:00.503Z
Question Type: function-variant
Function: viewExamResults
Function Size: 375 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: viewExamResults (TypeScript)\n// Sets the completed challenge and project title, then opens the exam results modal.\n\nfunction viewExamResults(completedChallenge: CompletedChallenge): void {\n    setCompletedChallenge(completedChallenge);\n    setProjectTitle(\n      idToNameMap.get(complete
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T01:07:00.604Z
Question Type: select-all
Function: CodespacesContinueAlert
Function Size: 832 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: CodespacesContinueAlert (TypeScript)\n// Renders an alert for continuing the project in Codespaces.\n\nfunction CodespacesContinueAlert({ title }: CodespacesContinueAlertProps) {\n  return (\n    <Callout variant='info'>\n      <Trans values={{ title }} i18nKey='learn.codespaces.continue-proj
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T01:07:00.675Z
Question Type: select-all
Function: syncMapErr
Function Size: 304 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: syncMapErr (TypeScript)\n// Wrapper around a synchronise function to catch throws and return them as part of the value.\n\nexport function syncMapErr<T>(fn: () => T): Result<T> {\n  try {\n    return { hasError: false, data: fn() };\n  } catch (error) {\n    return { hasError: true, error };\n 
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T01:07:02.679Z
Question Type: function-variant
Function: viewProject
Function Size: 373 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: viewProject (TypeScript)\n// Sets the completed challenge and project title, then opens the project preview modal.\n\nfunction viewProject(completedChallenge: CompletedChallenge): void {\n    setCompletedChallenge(completedChallenge);\n    setProjectTitle(\n      idToNameMap.get(completedChal
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T01:07:07.745Z
Question Type: true-false
Function: viewProject
Function Size: 373 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: viewProject (TypeScript)\n// Sets the completed challenge and project title, then opens the project preview modal.\n\nfunction viewProject(completedChallenge: CompletedChallenge): void {\n    setCompletedChallenge(completedChallenge);\n    setProjectTitle(\n      idToNameMap.get(completedChal
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T01:07:07.998Z
Question Type: function-variant
Function: renderViewButton
Function Size: 750 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: renderViewButton (TypeScript)\n// Renders a button for viewing the solution, project preview, and exam results for a completed challenge.\n\nfunction renderViewButton(\n    completedChallenge: CompletedChallenge\n  ): React.ReactNode {\n    const { id } = completedChallenge;\n    const project
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T01:07:08.890Z
Question Type: order-sequence
Function: SocialIcons
Function Size: 878 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: SocialIcons (TypeScript)\n// Renders social media icons based on provided links.\n\nfunction SocialIcons(props: SocialIconsProps): JSX.Element | null {\n  const { githubProfile, linkedin, twitter, bluesky, username, website } =\n    props;\n  const show = linkedin || githubProfile || website 
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T01:07:10.418Z
Question Type: function-variant
Function: putUpdateMyAbout
Function Size: 224 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: putUpdateMyAbout (TypeScript)\n// Updates the user's about information.\n\nexport function putUpdateMyAbout(\n  values: MyAbout\n): Promise<ResponseWithData<void>> {\n  return put('/update-my-about', { ...values });\n}
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T01:07:10.695Z
Question Type: function-variant
Function: base64URLEncode
Function Size: 257 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: base64URLEncode (TypeScript)\n// Utility to encode a buffer to a base64 URI.\n\nexport function base64URLEncode(buf: Buffer): string {\n  return buf\n    .toString('base64')\n    .replace(/\+/g, '-')\n    .replace(/\//g, '_')\n    .replace(/=/g, '');\n}
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T01:07:13.631Z
Question Type: order-sequence
Function: CodespacesLogoutAlert
Function Size: 339 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: CodespacesLogoutAlert (TypeScript)\n// Renders a logout warning alert for Codespaces.\n\nfunction CodespacesLogoutAlert({ course }: CodespacesLogoutAlertProps): JSX.Element {\n  const { t } = useTranslation();\n  return (\n    <Callout variant='danger'>\n      {t('learn.codespaces.logout-warni
================================================================================


=== SESSION SUMMARY ===
Session ID: session-1760546051744
Repository: Unknown
Total Questions Generated: 6
Total Chunks Processed: 5
Ended: 2025-10-16T01:07:13.750Z
================================================================================


--- QUESTION GENERATION ---
Timestamp: 2025-10-16T01:07:15.731Z
Question Type: function-variant
Function: mapErr
Function Size: 317 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: mapErr (TypeScript)\n// Wrapper around a promise to catch errors and return them as part of the promise.\n\nexport async function mapErr<T>(promise: Promise<T>): Promise<Result<T>> {\n  try {\n    return { hasError: false, data: await promise };\n  } catch (error) {\n    return { hasError: tru
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T01:07:15.958Z
Question Type: true-false
Function: base64URLEncode
Function Size: 257 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: base64URLEncode (TypeScript)\n// Utility to encode a buffer to a base64 URI.\n\nexport function base64URLEncode(buf: Buffer): string {\n  return buf\n    .toString('base64')\n    .replace(/\+/g, '-')\n    .replace(/\//g, '_')\n    .replace(/=/g, '');\n}
================================================================================


=== SESSION SUMMARY ===
Session ID: session-1760546051744
Repository: Unknown
Total Questions Generated: 10
Total Chunks Processed: 5
Ended: 2025-10-16T01:07:16.107Z
================================================================================


--- FUNCTION EXTRACTION ---
Timestamp: 2025-10-16T01:07:27.620Z
File: [3 files: codespaces-instructions.tsx, show.tsx, just need the body to exist, but doesn't seem to use the properties.]
Functions Extracted: 2


Function 1: handleDownloadLink
Language: TypeScript
Lines: 30
Full Code:
--------------------------------------------------------------------------------
function handleDownloadLink(downloadLinks: string[]) {
    const win = downloadLinks.find(link => link.match(/\.exe/));
    const macARM = downloadLinks.find(
      link => link.match(/aarch64/) && link.match(/\.dmg/)
    );
    const macX64 = downloadLinks.find(
      link => link.match(/x64/) && link.match(/\.dmg/)
    );

    const linuxARM = downloadLinks.find(
      link => link.match(/aarch64/) && link.match(/tar\.gz/)
    );

    const linuxX64 = downloadLinks.find(
      link => link.match(/amd64/) && link.match(/AppImage/)
    );

    if (os.os === 'WIN') {
      if (isEmpty(win)) return '';

      return win;
    }

    if (os.os === 'MAC') {
      if (os.architecture.toLowerCase() === 'arm') {
        if (isEmpty(macARM)) return '';

        return macARM;
      } else {
        if (isEmpty(macX64)) return '';

        return macX64;
      }
    }

    if (os.os === 'LINUX') {
      if (os.architecture.toLowerCase() === 'arm') {
        if (isEmpty(linuxARM)) return '';

        return linuxARM;
      } else {
        if (isEmpty(linuxX64)) return '';

        return linuxX64;
      }
    }

    return '';
}
--------------------------------------------------------------------------------


Function 2: checkLatestVersion
Language: TypeScript
Lines: 14
Full Code:
--------------------------------------------------------------------------------
async function checkLatestVersion() {
      try {
        const response = await fetch(
          'https://api.github.com/repos/freeCodeCamp/exam-env/releases/latest'
        );
        if (response.ok) {
          const data = (await response.json()) as GitProps;
          const { tag_name, assets } = data;
          setLatestVersion(tag_name);
          const urls = assets.map(link => link.browser_download_url);
          setDownloadLink(handleDownloadLink(urls));
          setDownloadLinks(urls);
        }
      } catch {
        setLatestVersion('...');
      }
    }
--------------------------------------------------------------------------------

================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T01:07:35.760Z
Question Type: true-false
Function: checkLatestVersion
Function Size: 736 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: checkLatestVersion (TypeScript)\n// Fetches the latest version of the exam environment from GitHub and updates the state with the download links.\n\nasync function checkLatestVersion() {\n      try {\n        const response = await fetch(\n          'https://api.github.com/repos/freeCodeCamp/
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T01:07:39.605Z
Question Type: select-all
Function: handleDownloadLink
Function Size: 1281 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: handleDownloadLink (TypeScript)\n// Determines the appropriate download link based on the user's operating system and architecture.\n\nfunction handleDownloadLink(downloadLinks: string[]) {\n    const win = downloadLinks.find(link => link.match(/\.exe/));\n    const macARM = downloadLinks.fi
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T01:07:47.111Z
Question Type: order-sequence
Function: checkLatestVersion
Function Size: 736 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: checkLatestVersion (TypeScript)\n// Fetches the latest version of the exam environment from GitHub and updates the state with the download links.\n\nasync function checkLatestVersion() {\n      try {\n        const response = await fetch(\n          'https://api.github.com/repos/freeCodeCamp/
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T01:07:50.821Z
Question Type: function-variant
Function: checkLatestVersion
Function Size: 736 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: checkLatestVersion (TypeScript)\n// Fetches the latest version of the exam environment from GitHub and updates the state with the download links.\n\nasync function checkLatestVersion() {\n      try {\n        const response = await fetch(\n          'https://api.github.com/repos/freeCodeCamp/
================================================================================


=== SESSION SUMMARY ===
Session ID: session-1760546051744
Repository: Unknown
Total Questions Generated: 4
Total Chunks Processed: 2
Ended: 2025-10-16T01:07:50.951Z
================================================================================


--- QUESTION GENERATION ---
Timestamp: 2025-10-16T01:07:54.282Z
Question Type: true-false
Function: putUpdateMyQuincyEmail
Function Size: 262 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: putUpdateMyQuincyEmail (TypeScript)\n// Updates the user's Quincy email preference.\n\nexport function putUpdateMyQuincyEmail(update: {\n  sendQuincyEmail: boolean;\n}): Promise<ResponseWithData<void>> {\n  return put('/update-my-quincy-email', update);\n}
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T01:07:57.420Z
Question Type: function-variant
Function: putUpdateMyProfileUI
Function Size: 251 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: putUpdateMyProfileUI (TypeScript)\n// Updates the user's profile UI settings.\n\nexport function putUpdateMyProfileUI(\n  profileUI: User['profileUI']\n): Promise<ResponseWithData<void>> {\n  return put('/update-my-profileui', { profileUI });\n}
================================================================================


=== SESSION SUMMARY ===
Session ID: session-1760546051744
Repository: Unknown
Total Questions Generated: 2
Total Chunks Processed: 17
Ended: 2025-10-16T01:07:57.516Z
================================================================================


--- QUESTION GENERATION ---
Timestamp: 2025-10-16T01:08:59.288Z
Question Type: multiple-choice
Function: SocialIcons
Function Size: 878 characters
Questions Generated: 3
Repository: Unknown
Function Preview: // Function: SocialIcons (TypeScript)\n// Renders social media icons based on provided links.\n\nfunction SocialIcons(props: SocialIconsProps): JSX.Element | null {\n  const { githubProfile, linkedin, twitter, bluesky, username, website } =\n    props;\n  const show = linkedin || githubProfile || website 
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T01:09:00.114Z
Question Type: select-all
Function: mapErr
Function Size: 317 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: mapErr (TypeScript)\n// Wrapper around a promise to catch errors and return them as part of the promise.\n\nexport async function mapErr<T>(promise: Promise<T>): Promise<Result<T>> {\n  try {\n    return { hasError: false, data: await promise };\n  } catch (error) {\n    return { hasError: tru
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T01:09:02.932Z
Question Type: select-all
Function: checkLatestVersion
Function Size: 736 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: checkLatestVersion (TypeScript)\n// Fetches the latest version of the exam environment from GitHub and updates the state with the download links.\n\nasync function checkLatestVersion() {\n      try {\n        const response = await fetch(\n          'https://api.github.com/repos/freeCodeCamp/
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T01:09:08.540Z
Question Type: select-all
Function: base64URLEncode
Function Size: 257 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: base64URLEncode (TypeScript)\n// Utility to encode a buffer to a base64 URI.\n\nexport function base64URLEncode(buf: Buffer): string {\n  return buf\n    .toString('base64')\n    .replace(/\+/g, '-')\n    .replace(/\//g, '_')\n    .replace(/=/g, '');\n}
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T01:09:10.567Z
Question Type: order-sequence
Function: base64URLEncode
Function Size: 257 characters
Questions Generated: 0
Repository: Unknown
Function Preview: // Function: base64URLEncode (TypeScript)\n// Utility to encode a buffer to a base64 URI.\n\nexport function base64URLEncode(buf: Buffer): string {\n  return buf\n    .toString('base64')\n    .replace(/\+/g, '-')\n    .replace(/\//g, '_')\n    .replace(/=/g, '');\n}
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T01:09:12.220Z
Question Type: select-all
Function: SocialIcons
Function Size: 878 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: SocialIcons (TypeScript)\n// Renders social media icons based on provided links.\n\nfunction SocialIcons(props: SocialIconsProps): JSX.Element | null {\n  const { githubProfile, linkedin, twitter, bluesky, username, website } =\n    props;\n  const show = linkedin || githubProfile || website 
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T01:09:16.552Z
Question Type: true-false
Function: putUpdateMyAbout
Function Size: 224 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: putUpdateMyAbout (TypeScript)\n// Updates the user's about information.\n\nexport function putUpdateMyAbout(\n  values: MyAbout\n): Promise<ResponseWithData<void>> {\n  return put('/update-my-about', { ...values });\n}
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T01:09:18.386Z
Question Type: order-sequence
Function: checkLatestVersion
Function Size: 736 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: checkLatestVersion (TypeScript)\n// Fetches the latest version of the exam environment from GitHub and updates the state with the download links.\n\nasync function checkLatestVersion() {\n      try {\n        const response = await fetch(\n          'https://api.github.com/repos/freeCodeCamp/
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T01:09:18.421Z
Question Type: select-all
Function: syncMapErr
Function Size: 304 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: syncMapErr (TypeScript)\n// Wrapper around a synchronise function to catch throws and return them as part of the value.\n\nexport function syncMapErr<T>(fn: () => T): Result<T> {\n  try {\n    return { hasError: false, data: fn() };\n  } catch (error) {\n    return { hasError: true, error };\n 
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T01:09:21.076Z
Question Type: function-variant
Function: handleDownloadLink
Function Size: 1281 characters
Questions Generated: 0
Repository: Unknown
Function Preview: // Function: handleDownloadLink (TypeScript)\n// Determines the appropriate download link based on the user's operating system and architecture.\n\nfunction handleDownloadLink(downloadLinks: string[]) {\n    const win = downloadLinks.find(link => link.match(/\.exe/));\n    const macARM = downloadLinks.fi
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T01:09:27.476Z
Question Type: function-variant
Function: putUpdateMyAbout
Function Size: 224 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: putUpdateMyAbout (TypeScript)\n// Updates the user's about information.\n\nexport function putUpdateMyAbout(\n  values: MyAbout\n): Promise<ResponseWithData<void>> {\n  return put('/update-my-about', { ...values });\n}
================================================================================


=== SESSION SUMMARY ===
Session ID: session-1760546051744
Repository: Unknown
Total Questions Generated: 11
Total Chunks Processed: 7
Ended: 2025-10-16T01:09:27.539Z
================================================================================


--- FUNCTION EXTRACTION ---
Timestamp: 2025-10-16T01:13:53.592Z
File: [3 files: link-ms-user.tsx, just need the body to exist, but doesn't seem to use the properties., codespaces-instructions.tsx]
Functions Extracted: 3


Function 1: LinkMsUser
Language: TypeScript
Lines: 41
Full Code:
--------------------------------------------------------------------------------
function LinkMsUser({ isSignedIn, msUsername, linkMsUsername, unlinkMsUsername, isProcessing, setIsProcessing }: Props): JSX.Element {
  const { t } = useTranslation();
  const [msTranscriptUrl, setMsTranscriptUrl] = useState('');

  function handleLinkUsername(e: React.FormEvent) {
    e.preventDefault();
    setIsProcessing(true);
    linkMsUsername({ msTranscriptUrl });
  }

  function handleInputChange(e: React.ChangeEvent<HTMLInputElement>) {
    e.preventDefault();
    setMsTranscriptUrl(e.target.value);
  }

  const isValid = isMicrosoftTranscriptLink(msTranscriptUrl);
  const isPristine = msTranscriptUrl === '';
  const isDisabled = isProcessing || !isValid;
  const showWarning = !isPristine && !isValid;

  return !isSignedIn ? (
    <>...
  ) : msUsername ? (
    <>...
  ) : (
    <div>...
  );
}
--------------------------------------------------------------------------------


Function 2: CodespacesInstructions
Language: TypeScript
Lines: 35
Full Code:
--------------------------------------------------------------------------------
export function CodespacesInstructions({ challengeType, copyUrl, copyUserToken, generateUserToken, isSignedIn, title, userToken }: CodespacesInstructionsProps) {
  const { t } = useTranslation();

  function openCodespaces() {
    const codespacesUrl = `https://codespaces.new/freeCodeCamp/rdb-alpha`;
    window.open(codespacesUrl, '_blank');
  }

  return (
    <div className='ca-description'>
      <p>{t('learn.codespaces.intro')}</p>
      <ol>...
    </div>
  );
}
--------------------------------------------------------------------------------


Function 3: openCodespaces
Language: TypeScript
Lines: 5
Full Code:
--------------------------------------------------------------------------------
function openCodespaces() {
    const codespacesUrl = `https://codespaces.new/freeCodeCamp/rdb-alpha`;
    window.open(codespacesUrl, '_blank');
  }
--------------------------------------------------------------------------------

================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T01:14:00.524Z
Question Type: multiple-choice
Function: CodespacesInstructions
Function Size: 624 characters
Questions Generated: 3
Repository: Unknown
Function Preview: // Function: CodespacesInstructions (TypeScript)\n// Displays instructions for using Codespaces, including steps for generating and copying user tokens.\n\nexport function CodespacesInstructions({ challengeType, copyUrl, copyUserToken, generateUserToken, isSignedIn, title, userToken }: CodespacesInstru
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T01:14:00.924Z
Question Type: select-all
Function: CodespacesInstructions
Function Size: 624 characters
Questions Generated: 0
Repository: Unknown
Function Preview: // Function: CodespacesInstructions (TypeScript)\n// Displays instructions for using Codespaces, including steps for generating and copying user tokens.\n\nexport function CodespacesInstructions({ challengeType, copyUrl, copyUserToken, generateUserToken, isSignedIn, title, userToken }: CodespacesInstru
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T01:14:02.295Z
Question Type: function-variant
Function: openCodespaces
Function Size: 240 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: openCodespaces (TypeScript)\n// Opens the Codespaces URL in a new browser tab.\n\nfunction openCodespaces() {\n    const codespacesUrl = `https://codespaces.new/freeCodeCamp/rdb-alpha`;\n    window.open(codespacesUrl, '_blank');\n  }
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T01:14:06.164Z
Question Type: order-sequence
Function: CodespacesInstructions
Function Size: 624 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: CodespacesInstructions (TypeScript)\n// Displays instructions for using Codespaces, including steps for generating and copying user tokens.\n\nexport function CodespacesInstructions({ challengeType, copyUrl, copyUserToken, generateUserToken, isSignedIn, title, userToken }: CodespacesInstru
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T01:14:06.774Z
Question Type: true-false
Function: openCodespaces
Function Size: 240 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: openCodespaces (TypeScript)\n// Opens the Codespaces URL in a new browser tab.\n\nfunction openCodespaces() {\n    const codespacesUrl = `https://codespaces.new/freeCodeCamp/rdb-alpha`;\n    window.open(codespacesUrl, '_blank');\n  }
================================================================================


=== SESSION SUMMARY ===
Session ID: session-1760546051744
Repository: Unknown
Total Questions Generated: 6
Total Chunks Processed: 3
Ended: 2025-10-16T01:14:06.797Z
================================================================================


--- QUESTION GENERATION ---
Timestamp: 2025-10-16T01:14:38.295Z
Question Type: select-all
Function: CodespacesInstructions
Function Size: 624 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: CodespacesInstructions (TypeScript)\n// Displays instructions for using Codespaces, including steps for generating and copying user tokens.\n\nexport function CodespacesInstructions({ challengeType, copyUrl, copyUserToken, generateUserToken, isSignedIn, title, userToken }: CodespacesInstru
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T01:14:42.571Z
Question Type: select-all
Function: LinkMsUser
Function Size: 954 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: LinkMsUser (TypeScript)\n// Handles linking a Microsoft username to a user account and manages the UI for linking/unlinking.\n\nfunction LinkMsUser({ isSignedIn, msUsername, linkMsUsername, unlinkMsUsername, isProcessing, setIsProcessing }: Props): JSX.Element {\n  const { t } = useTranslat
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T01:14:47.220Z
Question Type: function-variant
Function: CodespacesInstructions
Function Size: 624 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: CodespacesInstructions (TypeScript)\n// Displays instructions for using Codespaces, including steps for generating and copying user tokens.\n\nexport function CodespacesInstructions({ challengeType, copyUrl, copyUserToken, generateUserToken, isSignedIn, title, userToken }: CodespacesInstru
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T01:14:49.263Z
Question Type: true-false
Function: CodespacesInstructions
Function Size: 624 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: CodespacesInstructions (TypeScript)\n// Displays instructions for using Codespaces, including steps for generating and copying user tokens.\n\nexport function CodespacesInstructions({ challengeType, copyUrl, copyUserToken, generateUserToken, isSignedIn, title, userToken }: CodespacesInstru
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T01:14:50.530Z
Question Type: function-variant
Function: LinkMsUser
Function Size: 954 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: LinkMsUser (TypeScript)\n// Handles linking a Microsoft username to a user account and manages the UI for linking/unlinking.\n\nfunction LinkMsUser({ isSignedIn, msUsername, linkMsUsername, unlinkMsUsername, isProcessing, setIsProcessing }: Props): JSX.Element {\n  const { t } = useTranslat
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T01:14:53.176Z
Question Type: multiple-choice
Function: openCodespaces
Function Size: 240 characters
Questions Generated: 3
Repository: Unknown
Function Preview: // Function: openCodespaces (TypeScript)\n// Opens the Codespaces URL in a new browser tab.\n\nfunction openCodespaces() {\n    const codespacesUrl = `https://codespaces.new/freeCodeCamp/rdb-alpha`;\n    window.open(codespacesUrl, '_blank');\n  }
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T01:15:01.272Z
Question Type: select-all
Function: LinkMsUser
Function Size: 954 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: LinkMsUser (TypeScript)\n// Handles linking a Microsoft username to a user account and manages the UI for linking/unlinking.\n\nfunction LinkMsUser({ isSignedIn, msUsername, linkMsUsername, unlinkMsUsername, isProcessing, setIsProcessing }: Props): JSX.Element {\n  const { t } = useTranslat
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T01:15:01.958Z
Question Type: order-sequence
Function: openCodespaces
Function Size: 240 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: openCodespaces (TypeScript)\n// Opens the Codespaces URL in a new browser tab.\n\nfunction openCodespaces() {\n    const codespacesUrl = `https://codespaces.new/freeCodeCamp/rdb-alpha`;\n    window.open(codespacesUrl, '_blank');\n  }
================================================================================


=== SESSION SUMMARY ===
Session ID: session-1760546051744
Repository: Unknown
Total Questions Generated: 10
Total Chunks Processed: 3
Ended: 2025-10-16T01:15:02.011Z
================================================================================


--- FUNCTION EXTRACTION ---
Timestamp: 2025-10-16T01:20:27.389Z
File: freeCodeCamp-freeCodeCamp-0c8fc66/client/src/templates/Challenges/codeally/codespaces-instructions.tsx
Functions Extracted: 3


Function 1: CodespacesInstructions
Language: TypeScript
Lines: 66
Full Code:
--------------------------------------------------------------------------------
export function CodespacesInstructions({
  challengeType,
  copyUrl,
  copyUserToken,
  generateUserToken,
  isSignedIn,
  title,
  userToken
}: CodespacesInstructionsProps) {
  const { t } = useTranslation();

  function openCodespaces() {
    const codespacesUrl = `https://codespaces.new/freeCodeCamp/rdb-alpha`;

    window.open(codespacesUrl, '_blank');
  }

  return (
    <div className='ca-description'>
      <p>{t('learn.codespaces.intro')}</p>
      <ol>
        <li>
          <Trans i18nKey='learn.codespaces.step-1'>
            <a
              href='https://github.com/signup'
              rel='noopener noreferrer'
              target='_blank'
            >
              placeholder
            </a>
          </Trans>
        </li>
        {isSignedIn && (
          <>
            <Spacer size='s' />
            <p>{t('learn.local.sub-step-heading')}</p>
            <ol>
              <li>{t('learn.local.sub-step-1')}</li>
              <Spacer size='xxs' />
              <Button
                disabled={!!userToken}
                block={true}
                onClick={() => void generateUserToken()}
              >
                {t('learn.local.generate-token-btn')}
              </Button>
              <Spacer size='xs' />
              <li>{t('learn.local.sub-step-2')}</li>
              <Spacer size='xxs' />
              <Button
                disabled={!userToken}
                block={true}
                onClick={copyUserToken}
              >
                {t('learn.local.copy-token-btn')}
              </Button>
              <Spacer size='xs' />
              <li>
                <Trans i18nKey='learn.codespaces.sub-step-3'>
                  <a
                    href='https://github.com/settings/codespaces/secrets/new'
                    rel='noopener noreferrer'
                    target='_blank'
                  >
                    Codespaces secrets page
                  </a>
                </Trans>
              </li>
              <li>
                <Trans i18nKey='learn.codespaces.sub-step-4'>
                  <code>placeholder</code>
                </Trans>
              </li>
              <li>
                <Trans i18nKey='learn.codespaces.sub-step-5'>
                  <code>placeholder</code>
                </Trans>
              </li>
              <li>
                <Trans i18nKey='learn.codespaces.sub-step-6'>
                  <code>placeholder</code>
                  <code>placeholder</code>
                </Trans>
              </li>
            </ol>
            <Spacer size='s' />
          </>
        )}
        <li>{t('learn.codespaces.step-2')}</li>
        <li>{t('learn.codespaces.step-3')}</li>
        <li>
          {t('learn.codespaces.step-4')}
          <ul>
            <li>{t('learn.codespaces.step-5')}</li>
            <li>
              <Trans i18nKey='learn.codespaces.step-6'>
                <code>placeholder</code>
              </Trans>
            </li>
            <li>
              <Trans i18nKey='learn.codespaces.step-7'>
                <code>placeholder</code>
              </Trans>
            </li>
            <li>
              <Trans i18nKey='learn.codespaces.step-8'>
                <code>placeholder</code>
              </Trans>
            </li>
            <li>{t('learn.local.step-6')}</li>
            <li>{t('learn.local.step-7')}</li>
            <Spacer size='xxs' />
            <Button block={true} onClick={copyUrl}>
              {t('learn.local.copy-url')}
            </Button>
            <Spacer size='xs' />
            <li>{t('learn.local.step-8')}</li>
          </ul>
        </li>
        <li>{t('learn.codespaces.step-9')}</li>
      </ol>
      <Spacer size='m' />
      <CodespacesContinueAlert title={title} />
      {isSignedIn && <CodespacesLogoutAlert course={title} />}
      <CodeAllyButton challengeType={challengeType} onClick={openCodespaces} />
    </div>
  );
}
--------------------------------------------------------------------------------


Function 2: CodespacesContinueAlert
Language: TypeScript
Lines: 15
Full Code:
--------------------------------------------------------------------------------
function CodespacesContinueAlert({ title }: CodespacesContinueAlertProps) {
  return (
    <Callout variant='info'>
      <Trans values={{ title }} i18nKey='learn.codespaces.continue-project'>
        <a
          href='https://github.com/freeCodeCamp/rdb-alpha'
          rel='noopener noreferrer'
          target='_blank'
        >
          placeholder
        </a>
      </Trans>
      <Spacer size='m' />
      <Trans i18nKey='learn.codespaces.learn-more'>
        <a
          href='https://forum.freecodecamp.org/t/relational-database-curriculum-in-codespaces/761449'
          rel='noopener noreferrer'
          target='_blank'
        >
          placeholder
        </a>
      </Trans>
    </Callout>
  );
}
--------------------------------------------------------------------------------


Function 3: CodespacesLogoutAlert
Language: TypeScript
Lines: 10
Full Code:
--------------------------------------------------------------------------------
function CodespacesLogoutAlert({ course }: CodespacesLogoutAlertProps): JSX.Element {
  const { t } = useTranslation();

  return (
    <Callout variant='danger'>
      {t('learn.codespaces.logout-warning', { course })}
    </Callout>
  );
}
--------------------------------------------------------------------------------

================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T01:20:40.121Z
Question Type: function-variant
Function: CodespacesLogoutAlert
Function Size: 370 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: CodespacesLogoutAlert (TypeScript)\n// Displays a logout warning alert for the user regarding the specified course.\n\nfunction CodespacesLogoutAlert({ course }: CodespacesLogoutAlertProps): JSX.Element {\n  const { t } = useTranslation();\n\n  return (\n    <Callout variant='danger'>\n      {t
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T01:20:46.930Z
Question Type: true-false
Function: CodespacesInstructions
Function Size: 4108 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: CodespacesInstructions (TypeScript)\n// Renders the instructions for using Codespaces, including steps for generating and copying user tokens.\n\nexport function CodespacesInstructions({\n  challengeType,\n  copyUrl,\n  copyUserToken,\n  generateUserToken,\n  isSignedIn,\n  title,\n  userToken\n}:
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T01:20:51.173Z
Question Type: function-variant
Function: CodespacesContinueAlert
Function Size: 852 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: CodespacesContinueAlert (TypeScript)\n// Displays an alert with information about continuing the project in Codespaces.\n\nfunction CodespacesContinueAlert({ title }: CodespacesContinueAlertProps) {\n  return (\n    <Callout variant='info'>\n      <Trans values={{ title }} i18nKey='learn.code
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T01:20:53.734Z
Question Type: multiple-choice
Function: CodespacesContinueAlert
Function Size: 852 characters
Questions Generated: 3
Repository: Unknown
Function Preview: // Function: CodespacesContinueAlert (TypeScript)\n// Displays an alert with information about continuing the project in Codespaces.\n\nfunction CodespacesContinueAlert({ title }: CodespacesContinueAlertProps) {\n  return (\n    <Callout variant='info'>\n      <Trans values={{ title }} i18nKey='learn.code
================================================================================


=== SESSION SUMMARY ===
Session ID: session-1760546051744
Repository: Unknown
Total Questions Generated: 6
Total Chunks Processed: 3
Ended: 2025-10-16T01:20:54.174Z
================================================================================


--- FUNCTION EXTRACTION ---
Timestamp: 2025-10-16T01:21:20.412Z
File: freeCodeCamp-freeCodeCamp-0c8fc66/client/src/components/settings/email.tsx
Functions Extracted: 1


Function 1: EmailSettings
Language: TypeScript
Lines: 114
Full Code:
--------------------------------------------------------------------------------
function EmailSettings({
  email,
  isEmailVerified,
  sendQuincyEmail,
  t,
  updateMyEmail,
  updateQuincyEmail
}: EmailProps): JSX.Element {
  const [emailForm, setEmailForm] = useState<EmailForm>({
    currentEmail: email,
    newEmail: '',
    confirmNewEmail: '',
    isPristine: true
  });

  function handleSubmit(e: React.FormEvent): void {
    e.preventDefault();
    updateMyEmail(emailForm.newEmail);
  }

  function createHandleEmailFormChange(
    key: 'newEmail' | 'confirmNewEmail'
  ): (e: React.ChangeEvent<HTMLInputElement>) => void {
    return e => {
      e.preventDefault();
      const userInput = e.target.value.slice();
      setEmailForm(prev => ({
        ...prev,
        [key]: userInput,
        isPristine: userInput === prev.currentEmail
      }));
    };
  }

  function getValidationForNewEmail(): EmailValidation {
    const { newEmail, currentEmail } = emailForm;
    if (!maybeEmailRE.test(newEmail)) {
      return {
        state: null,
        message: ''
      };
    }
    if (newEmail === currentEmail) {
      return {
        state: 'error',
        message: t('validation.same-email')
      };
    }
    if (isEmail(newEmail)) {
      return { state: 'success', message: '' };
    } else {
      return {
        state: 'error',
        message: t('validation.invalid-email')
      };
    }
  }

  function getValidationForConfirmEmail(): EmailValidation {
    const { confirmNewEmail, newEmail } = emailForm;
    if (!maybeEmailRE.test(newEmail)) {
      return {
        state: null,
        message: ''
      };
    }
    const isMatch = newEmail === confirmNewEmail;
    if (maybeEmailRE.test(confirmNewEmail)) {
      return {
        state: isMatch ? 'success' : 'error',
        message: isMatch ? '' : t('validation.email-mismatch')
      };
    } else {
      return {
        state: null,
        message: ''
      };
    }
  }

  const { newEmail, confirmNewEmail, currentEmail, isPristine } = emailForm;

  const { state: newEmailValidation, message: newEmailValidationMessage } =
    getValidationForNewEmail();

  const {
    state: confirmEmailValidation,
    message: confirmEmailValidationMessage
  } = getValidationForConfirmEmail();
  const isDisabled =
    newEmailValidation !== 'success' ||
    confirmEmailValidation !== 'success' ||
    isPristine;
  if (!currentEmail) {
    return (
      <div>
        <FullWidthRow>
          <p className='large-p text-center'>{t('settings.email.missing')}</p>
        </FullWidthRow>
        <FullWidthRow>
          <Button
            block={true}
            size='large'
            variant='primary'
            href='/update-email'
          >
            {t('buttons.edit')}
          </Button>
        </FullWidthRow>
      </div>
    );
  }
  return (
    <div className='email-settings'>
      <SectionHeader>{t('settings.email.heading')}</SectionHeader>
      {isEmailVerified ? null : (
        <FullWidthRow>
          <HelpBlock>
            <Callout
              variant='info'
              className='text-center'
              data-playwright-test-label='email-verification-alert'
            >
              {t('settings.email.not-verified')}
              <br />
              <Trans i18nKey='settings.email.check'>
                <Link
                  data-playwright-test-label='email-verification-link'
                  to='/update-email'
                />
              </Trans>
            </Callout>
          </HelpBlock>
        </FullWidthRow>
      )}
      <FullWidthRow>
        <form
          id='form-update-email'
          {...(!isDisabled
            ? { onSubmit: handleSubmit }
            : { onSubmit: e => e.preventDefault() })}
        >
          <FormGroup controlId='current-email'>
            <ControlLabel>{t('settings.email.current')}</ControlLabel>
            <FormControl.Static>{currentEmail}</FormControl.Static>
          </FormGroup>
          <div role='group' aria-label={t('settings.email.heading')}>
            <FormGroup
              controlId='new-email'
              validationState={newEmailValidation}
            >
              <ControlLabel htmlFor='new-email-input'>
                {t('settings.email.new')}
              </ControlLabel>
              <FormControl
                onChange={createHandleEmailFormChange('newEmail')}
                type='email'
                value={newEmail}
                id='new-email-input'
              />
              {newEmailValidationMessage ? (
                <HelpBlock data-playwright-test-label='new-email-validation'>
                  {newEmailValidationMessage}
                </HelpBlock>
              ) : null}
            </FormGroup>
            <FormGroup
              controlId='confirm-email'
              validationState={confirmEmailValidation}
            >
              <ControlLabel htmlFor='confirm-email-input'>
                {t('settings.email.confirm')}
              </ControlLabel>
              <FormControl
                onChange={createHandleEmailFormChange('confirmNewEmail')}
                type='email'
                value={confirmNewEmail}
                id='confirm-email-input'
              />
              {confirmEmailValidationMessage ? (
                <HelpBlock data-playwright-test-label='confirm-email-validation'>
                  {confirmEmailValidationMessage}
                </HelpBlock>
              ) : null}
            </FormGroup>
          </div>
          <BlockSaveButton
            disabled={isDisabled}
            bgSize='large'
            {...(isDisabled && { tabIndex: -1 })}
          >
            {t('buttons.save')}{' '}
            <span className='sr-only'>{t('settings.email.heading')}</span>
          </BlockSaveButton>
        </form>
      </FullWidthRow>
      <Spacer size='m' />
      <FullWidthRow>
        <ToggleButtonSetting
          action={t('settings.email.weekly')}
          flag={!!sendQuincyEmail}
          flagName='sendQuincyEmail'
          offLabel={t('buttons.no-thanks')}
          onLabel={t('buttons.yes-please')}
          toggleFlag={() => updateQuincyEmail(!sendQuincyEmail)}
        />
      </FullWidthRow>
    </div>
  );
}
--------------------------------------------------------------------------------

================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T01:21:25.636Z
Question Type: true-false
Function: EmailSettings
Function Size: 6340 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: EmailSettings (TypeScript)\n// Renders the email settings component, allowing users to update their email address and manage email preferences.\n\nfunction EmailSettings({\n  email,\n  isEmailVerified,\n  sendQuincyEmail,\n  t,\n  updateMyEmail,\n  updateQuincyEmail\n}: EmailProps): JSX.Element {
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T01:21:27.243Z
Question Type: true-false
Function: EmailSettings
Function Size: 6340 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: EmailSettings (TypeScript)\n// Renders the email settings component, allowing users to update their email address and manage email preferences.\n\nfunction EmailSettings({\n  email,\n  isEmailVerified,\n  sendQuincyEmail,\n  t,\n  updateMyEmail,\n  updateQuincyEmail\n}: EmailProps): JSX.Element {
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T01:21:42.191Z
Question Type: order-sequence
Function: EmailSettings
Function Size: 6340 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: EmailSettings (TypeScript)\n// Renders the email settings component, allowing users to update their email address and manage email preferences.\n\nfunction EmailSettings({\n  email,\n  isEmailVerified,\n  sendQuincyEmail,\n  t,\n  updateMyEmail,\n  updateQuincyEmail\n}: EmailProps): JSX.Element {
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T01:21:48.835Z
Question Type: multiple-choice
Function: EmailSettings
Function Size: 6340 characters
Questions Generated: 3
Repository: Unknown
Function Preview: // Function: EmailSettings (TypeScript)\n// Renders the email settings component, allowing users to update their email address and manage email preferences.\n\nfunction EmailSettings({\n  email,\n  isEmailVerified,\n  sendQuincyEmail,\n  t,\n  updateMyEmail,\n  updateQuincyEmail\n}: EmailProps): JSX.Element {
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T01:21:50.450Z
Question Type: function-variant
Function: EmailSettings
Function Size: 6340 characters
Questions Generated: 0
Repository: Unknown
Function Preview: // Function: EmailSettings (TypeScript)\n// Renders the email settings component, allowing users to update their email address and manage email preferences.\n\nfunction EmailSettings({\n  email,\n  isEmailVerified,\n  sendQuincyEmail,\n  t,\n  updateMyEmail,\n  updateQuincyEmail\n}: EmailProps): JSX.Element {
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T01:21:52.075Z
Question Type: select-all
Function: EmailSettings
Function Size: 6340 characters
Questions Generated: 0
Repository: Unknown
Function Preview: // Function: EmailSettings (TypeScript)\n// Renders the email settings component, allowing users to update their email address and manage email preferences.\n\nfunction EmailSettings({\n  email,\n  isEmailVerified,\n  sendQuincyEmail,\n  t,\n  updateMyEmail,\n  updateQuincyEmail\n}: EmailProps): JSX.Element {
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T01:21:58.366Z
Question Type: select-all
Function: EmailSettings
Function Size: 6340 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: EmailSettings (TypeScript)\n// Renders the email settings component, allowing users to update their email address and manage email preferences.\n\nfunction EmailSettings({\n  email,\n  isEmailVerified,\n  sendQuincyEmail,\n  t,\n  updateMyEmail,\n  updateQuincyEmail\n}: EmailProps): JSX.Element {
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T01:22:18.941Z
Question Type: function-variant
Function: EmailSettings
Function Size: 6340 characters
Questions Generated: 0
Repository: Unknown
Function Preview: // Function: EmailSettings (TypeScript)\n// Renders the email settings component, allowing users to update their email address and manage email preferences.\n\nfunction EmailSettings({\n  email,\n  isEmailVerified,\n  sendQuincyEmail,\n  t,\n  updateMyEmail,\n  updateQuincyEmail\n}: EmailProps): JSX.Element {
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T01:22:19.434Z
Question Type: select-all
Function: EmailSettings
Function Size: 6340 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: EmailSettings (TypeScript)\n// Renders the email settings component, allowing users to update their email address and manage email preferences.\n\nfunction EmailSettings({\n  email,\n  isEmailVerified,\n  sendQuincyEmail,\n  t,\n  updateMyEmail,\n  updateQuincyEmail\n}: EmailProps): JSX.Element {
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T01:22:22.289Z
Question Type: select-all
Function: EmailSettings
Function Size: 6340 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: EmailSettings (TypeScript)\n// Renders the email settings component, allowing users to update their email address and manage email preferences.\n\nfunction EmailSettings({\n  email,\n  isEmailVerified,\n  sendQuincyEmail,\n  t,\n  updateMyEmail,\n  updateQuincyEmail\n}: EmailProps): JSX.Element {
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T01:22:28.921Z
Question Type: select-all
Function: EmailSettings
Function Size: 6340 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: EmailSettings (TypeScript)\n// Renders the email settings component, allowing users to update their email address and manage email preferences.\n\nfunction EmailSettings({\n  email,\n  isEmailVerified,\n  sendQuincyEmail,\n  t,\n  updateMyEmail,\n  updateQuincyEmail\n}: EmailProps): JSX.Element {
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T01:22:29.973Z
Question Type: order-sequence
Function: EmailSettings
Function Size: 6340 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: EmailSettings (TypeScript)\n// Renders the email settings component, allowing users to update their email address and manage email preferences.\n\nfunction EmailSettings({\n  email,\n  isEmailVerified,\n  sendQuincyEmail,\n  t,\n  updateMyEmail,\n  updateQuincyEmail\n}: EmailProps): JSX.Element {
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T01:22:49.481Z
Question Type: function-variant
Function: EmailSettings
Function Size: 6340 characters
Questions Generated: 0
Repository: Unknown
Function Preview: // Function: EmailSettings (TypeScript)\n// Renders the email settings component, allowing users to update their email address and manage email preferences.\n\nfunction EmailSettings({\n  email,\n  isEmailVerified,\n  sendQuincyEmail,\n  t,\n  updateMyEmail,\n  updateQuincyEmail\n}: EmailProps): JSX.Element {
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T01:22:50.938Z
Question Type: function-variant
Function: EmailSettings
Function Size: 6340 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: EmailSettings (TypeScript)\n// Renders the email settings component, allowing users to update their email address and manage email preferences.\n\nfunction EmailSettings({\n  email,\n  isEmailVerified,\n  sendQuincyEmail,\n  t,\n  updateMyEmail,\n  updateQuincyEmail\n}: EmailProps): JSX.Element {
================================================================================


=== SESSION SUMMARY ===
Session ID: session-1760546051744
Repository: Unknown
Total Questions Generated: 12
Total Chunks Processed: 1
Ended: 2025-10-16T01:22:52.335Z
================================================================================


--- FUNCTION EXTRACTION ---
Timestamp: 2025-10-16T02:39:36.995Z
File: [8 files: 8 are considered localhost for IPv4., EmployeeService.js, App.js, serviceWorker.js, SpringbootBackendApplication.java, ResourceNotFoundException.java, EmployeeController.java, ListEmployeeComponent.jsx]
Functions Extracted: 2


Function 1: componentDidMount
Language: JavaScript
Lines: 5
Full Code:
--------------------------------------------------------------------------------
componentDidMount(){
        EmployeeService.getEmployees().then((res) => {
            this.setState({ employees: res.data});
        });
    }
--------------------------------------------------------------------------------


Function 2: deleteEmployee
Language: JavaScript
Lines: 5
Full Code:
--------------------------------------------------------------------------------
deleteEmployee(id){
        EmployeeService.deleteEmployee(id).then( res => {
            this.setState({employees: this.state.employees.filter(employee => employee.id !== id)});
        });
    }
--------------------------------------------------------------------------------

================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T02:39:42.562Z
Question Type: select-all
Function: deleteEmployee
Function Size: 306 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: deleteEmployee (JavaScript)\n// Deletes an employee and updates the state to reflect the change.\n\ndeleteEmployee(id){\n        EmployeeService.deleteEmployee(id).then( res => {\n            this.setState({employees: this.state.employees.filter(employee => employee.id !== id)});\n        });
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T02:39:44.260Z
Question Type: select-all
Function: deleteEmployee
Function Size: 306 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: deleteEmployee (JavaScript)\n// Deletes an employee and updates the state to reflect the change.\n\ndeleteEmployee(id){\n        EmployeeService.deleteEmployee(id).then( res => {\n            this.setState({employees: this.state.employees.filter(employee => employee.id !== id)});\n        });
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T02:39:44.546Z
Question Type: select-all
Function: componentDidMount
Function Size: 271 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: componentDidMount (JavaScript)\n// Lifecycle method that fetches the list of employees when the component mounts.\n\ncomponentDidMount(){\n        EmployeeService.getEmployees().then((res) => {\n            this.setState({ employees: res.data});\n        });\n    }
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T02:39:46.328Z
Question Type: function-variant
Function: componentDidMount
Function Size: 271 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: componentDidMount (JavaScript)\n// Lifecycle method that fetches the list of employees when the component mounts.\n\ncomponentDidMount(){\n        EmployeeService.getEmployees().then((res) => {\n            this.setState({ employees: res.data});\n        });\n    }
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T02:39:50.421Z
Question Type: true-false
Function: componentDidMount
Function Size: 271 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: componentDidMount (JavaScript)\n// Lifecycle method that fetches the list of employees when the component mounts.\n\ncomponentDidMount(){\n        EmployeeService.getEmployees().then((res) => {\n            this.setState({ employees: res.data});\n        });\n    }
================================================================================


=== SESSION SUMMARY ===
Session ID: session-1760546051744
Repository: Unknown
Total Questions Generated: 5
Total Chunks Processed: 2
Ended: 2025-10-16T02:39:50.472Z
================================================================================


--- QUESTION GENERATION ---
Timestamp: 2025-10-16T02:39:57.062Z
Question Type: select-all
Function: componentDidMount
Function Size: 271 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: componentDidMount (JavaScript)\n// Lifecycle method that fetches the list of employees when the component mounts.\n\ncomponentDidMount(){\n        EmployeeService.getEmployees().then((res) => {\n            this.setState({ employees: res.data});\n        });\n    }
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T02:39:57.069Z
Question Type: select-all
Function: componentDidMount
Function Size: 271 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: componentDidMount (JavaScript)\n// Lifecycle method that fetches the list of employees when the component mounts.\n\ncomponentDidMount(){\n        EmployeeService.getEmployees().then((res) => {\n            this.setState({ employees: res.data});\n        });\n    }
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T02:40:00.954Z
Question Type: function-variant
Function: componentDidMount
Function Size: 271 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: componentDidMount (JavaScript)\n// Lifecycle method that fetches the list of employees when the component mounts.\n\ncomponentDidMount(){\n        EmployeeService.getEmployees().then((res) => {\n            this.setState({ employees: res.data});\n        });\n    }
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T02:40:01.095Z
Question Type: function-variant
Function: deleteEmployee
Function Size: 306 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: deleteEmployee (JavaScript)\n// Deletes an employee and updates the state to reflect the change.\n\ndeleteEmployee(id){\n        EmployeeService.deleteEmployee(id).then( res => {\n            this.setState({employees: this.state.employees.filter(employee => employee.id !== id)});\n        });
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T02:40:03.378Z
Question Type: select-all
Function: deleteEmployee
Function Size: 306 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: deleteEmployee (JavaScript)\n// Deletes an employee and updates the state to reflect the change.\n\ndeleteEmployee(id){\n        EmployeeService.deleteEmployee(id).then( res => {\n            this.setState({employees: this.state.employees.filter(employee => employee.id !== id)});\n        });
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T02:40:06.820Z
Question Type: select-all
Function: deleteEmployee
Function Size: 306 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: deleteEmployee (JavaScript)\n// Deletes an employee and updates the state to reflect the change.\n\ndeleteEmployee(id){\n        EmployeeService.deleteEmployee(id).then( res => {\n            this.setState({employees: this.state.employees.filter(employee => employee.id !== id)});\n        });
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T02:40:08.492Z
Question Type: function-variant
Function: deleteEmployee
Function Size: 306 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: deleteEmployee (JavaScript)\n// Deletes an employee and updates the state to reflect the change.\n\ndeleteEmployee(id){\n        EmployeeService.deleteEmployee(id).then( res => {\n            this.setState({employees: this.state.employees.filter(employee => employee.id !== id)});\n        });
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T02:40:09.722Z
Question Type: multiple-choice
Function: componentDidMount
Function Size: 271 characters
Questions Generated: 0
Repository: Unknown
Function Preview: // Function: componentDidMount (JavaScript)\n// Lifecycle method that fetches the list of employees when the component mounts.\n\ncomponentDidMount(){\n        EmployeeService.getEmployees().then((res) => {\n            this.setState({ employees: res.data});\n        });\n    }
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T02:40:09.913Z
Question Type: order-sequence
Function: componentDidMount
Function Size: 271 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: componentDidMount (JavaScript)\n// Lifecycle method that fetches the list of employees when the component mounts.\n\ncomponentDidMount(){\n        EmployeeService.getEmployees().then((res) => {\n            this.setState({ employees: res.data});\n        });\n    }
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T02:40:10.833Z
Question Type: true-false
Function: deleteEmployee
Function Size: 306 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: deleteEmployee (JavaScript)\n// Deletes an employee and updates the state to reflect the change.\n\ndeleteEmployee(id){\n        EmployeeService.deleteEmployee(id).then( res => {\n            this.setState({employees: this.state.employees.filter(employee => employee.id !== id)});\n        });
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T02:40:14.206Z
Question Type: true-false
Function: componentDidMount
Function Size: 271 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: componentDidMount (JavaScript)\n// Lifecycle method that fetches the list of employees when the component mounts.\n\ncomponentDidMount(){\n        EmployeeService.getEmployees().then((res) => {\n            this.setState({ employees: res.data});\n        });\n    }
================================================================================

--- FUNCTION EXTRACTION ---
Timestamp: 2025-10-16T02:40:14.371Z
File: [3 files: certification with projects., just need the body to exist, but doesn't seem to use the properties., TODO: Convert to DELETE]
Functions Extracted: 4


Function 1: LegacyFullStack
Language: TypeScript
Lines: 52
Full Code:
--------------------------------------------------------------------------------
const LegacyFullStack = (props: CertificationSettingsProps) => {
  const {
    isFullStackCert,
    username,
    isHonest,
    createFlashMessage,
    verifyCert,
    is2018DataVisCert,
    isApisMicroservicesCert,
    isFrontEndLibsCert,
    isInfosecQaCert,
    isJsAlgoDataStructCert,
    isRespWebDesignCert,
    t
  } = props;

  const fullStackClaimable =
    is2018DataVisCert &&
    isApisMicroservicesCert &&
    isFrontEndLibsCert &&
    isInfosecQaCert &&
    isJsAlgoDataStructCert &&
    isRespWebDesignCert;

  const certSlug = Certification.LegacyFullStack;
  const certLocation = `/certification/${username}/${certSlug}`;

  const handleClaim =
    (certSlug: keyof typeof certSlugTypeMap) =>
    (e: MouseEvent<HTMLButtonElement>) => {
      e.preventDefault();

      return isHonest
        ? verifyCert(certSlug)
        : createFlashMessage(honestyInfoMessage);
    };

  return (
    <FullWidthRow key={certSlug}>
      <Spacer size='m' />
      <h3 className='text-center'>
        {t(`certification.title.${Certification.LegacyFullStack}-cert`)}
      </h3>
      <div>
        <p>
          {t('settings.claim-legacy', {
            cert: t(`certification.title.${Certification.LegacyFullStack}-cert`)
          })}
        </p>
        <ul>
          <li>{t(`certification.title.${Certification.RespWebDesign}`)}</li>
          <li>{t(`certification.title.${Certification.JsAlgoDataStruct}`)}</li>
          <li>{t(`certification.title.${Certification.LegacyFrontEnd}`)}</li>
          <li>{t(`certification.title.${Certification.LegacyDataVis}`)}</li>
          <li>{t(`certification.title.${Certification.BackEndDevApis}`)}</li>
          <li>{t(`certification.title.${Certification.LegacyInfoSecQa}`)}</li>
        </ul>
      </div>

      <div>
        {isFullStackCert ? (
          <Button
            size='small'
            variant='primary'
            block={true}
            href={certLocation}
            id={'button-' + certSlug}
            target='_blank'
          >
            {t('buttons.show-cert')}{' '}
            <span className='sr-only'>
              {t(`certification.title.${Certification.LegacyFullStack}`)}
            </span>
          </Button>
        ) : (
          <Button
            size='small'
            variant='primary'
            block={true}
            disabled={!fullStackClaimable}
            id={'button-' + certSlug}
            onClick={handleClaim(certSlug)}
          >
            {t('buttons.claim-cert')}{' '}
            <span className='sr-only'>
              {t(`certification.title.${Certification.LegacyFullStack}`)}
            </span>
          </Button>
        )}
      </div>
      <Spacer size='m' />
    </FullWidthRow>
  );
};
--------------------------------------------------------------------------------


Function 2: CertificationSettings
Language: TypeScript
Lines: 36
Full Code:
--------------------------------------------------------------------------------
function CertificationSettings(props: CertificationSettingsProps) {
  const [projectTitle, setProjectTitle] = useState('');
  const [challengeFiles, setChallengeFiles] = useState<CompletedChallenge['challengeFiles'] | null>(null);
  const [challengeData, setChallengeData] = useState<ChallengeData | null>(null);
  const [solution, setSolution] = useState<string | null>();
  const [examResults, setExamResults] = useState<GeneratedExamResults | null>();
  const [isOpen, setIsOpen] = useState(false);
  function initialiseState() {
    setProjectTitle('');
    setChallengeFiles(null);
    setSolution(null);
    setExamResults(null);
    setIsOpen(false);
  }

  const handleSolutionModalHide = () => initialiseState();

  const isCertifiedMap = createCertifiedMap(props);
  const getProjectSolution = (projectId: string, projectTitle: string) => {
    const { completedChallenges, openModal } = props;
    const completedProject = find(
      completedChallenges,
      ({ id }) => projectId === id
    );
    if (!completedProject) {
      return null;
    }
    const { solution, challengeFiles, examResults } = completedProject;
    const showUserCode = () => {
      setProjectTitle(projectTitle);
      setChallengeFiles(challengeFiles);
      setSolution(solution);
      setIsOpen(true);
    };
  };
--------------------------------------------------------------------------------


Function 3: createStripePaymentIntent
Language: TypeScript
Lines: 6
Full Code:
--------------------------------------------------------------------------------
export function createStripePaymentIntent(body: {
  email: string | undefined;
  name: string | undefined;
  amount: number;
  duration: DonationDuration;
}): PaymentIntentResponse {
  return post('/donate/create-stripe-payment-intent', body);
}
--------------------------------------------------------------------------------


Function 4: putUpdateMyAbout
Language: TypeScript
Lines: 6
Full Code:
--------------------------------------------------------------------------------
export function putUpdateMyAbout(
  values: MyAbout
): Promise<ResponseWithData<void>> {
  return put('/update-my-about', { ...values });
}
--------------------------------------------------------------------------------

================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T02:40:16.155Z
Question Type: select-all
Function: componentDidMount
Function Size: 271 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: componentDidMount (JavaScript)\n// Lifecycle method that fetches the list of employees when the component mounts.\n\ncomponentDidMount(){\n        EmployeeService.getEmployees().then((res) => {\n            this.setState({ employees: res.data});\n        });\n    }
================================================================================


=== SESSION SUMMARY ===
Session ID: session-1760546051744
Repository: Unknown
Total Questions Generated: 11
Total Chunks Processed: 2
Ended: 2025-10-16T02:40:16.180Z
================================================================================


--- QUESTION GENERATION ---
Timestamp: 2025-10-16T02:40:18.097Z
Question Type: true-false
Function: CertificationSettings
Function Size: 1488 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: CertificationSettings (TypeScript)\n// Manages the state and functionality for the certification settings, including handling project solutions and modal visibility.\n\nfunction CertificationSettings(props: CertificationSettingsProps) {\n  const [projectTitle, setProjectTitle] = useState(''
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T02:40:18.719Z
Question Type: true-false
Function: createStripePaymentIntent
Function Size: 386 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: createStripePaymentIntent (TypeScript)\n// Creates a Stripe payment intent with the provided email, name, amount, and duration.\n\nexport function createStripePaymentIntent(body: {\n  email: string | undefined;\n  name: string | undefined;\n  amount: number;\n  duration: DonationDuration;\n}): 
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T02:40:24.105Z
Question Type: multiple-choice
Function: LegacyFullStack
Function Size: 2912 characters
Questions Generated: 3
Repository: Unknown
Function Preview: // Function: LegacyFullStack (TypeScript)\n// Renders the Legacy Full Stack certification component, allowing users to claim or view their certification based on their eligibility.\n\nconst LegacyFullStack = (props: CertificationSettingsProps) => {\n  const {\n    isFullStackCert,\n    username,\n    isHon
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T02:40:27.884Z
Question Type: function-variant
Function: createStripePaymentIntent
Function Size: 386 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: createStripePaymentIntent (TypeScript)\n// Creates a Stripe payment intent with the provided email, name, amount, and duration.\n\nexport function createStripePaymentIntent(body: {\n  email: string | undefined;\n  name: string | undefined;\n  amount: number;\n  duration: DonationDuration;\n}): 
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T02:40:28.810Z
Question Type: order-sequence
Function: putUpdateMyAbout
Function Size: 243 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: putUpdateMyAbout (TypeScript)\n// Updates the user's 'About' information in their profile.\n\nexport function putUpdateMyAbout(\n  values: MyAbout\n): Promise<ResponseWithData<void>> {\n  return put('/update-my-about', { ...values });\n}
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T02:40:29.301Z
Question Type: function-variant
Function: putUpdateMyAbout
Function Size: 243 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: putUpdateMyAbout (TypeScript)\n// Updates the user's 'About' information in their profile.\n\nexport function putUpdateMyAbout(\n  values: MyAbout\n): Promise<ResponseWithData<void>> {\n  return put('/update-my-about', { ...values });\n}
================================================================================


=== SESSION SUMMARY ===
Session ID: session-1760546051744
Repository: Unknown
Total Questions Generated: 8
Total Chunks Processed: 4
Ended: 2025-10-16T02:40:29.351Z
================================================================================


--- FUNCTION EXTRACTION ---
Timestamp: 2025-10-16T02:40:45.194Z
File: [2 files: profile.tsx, index.ts]
Functions Extracted: 4


Function 1: UserProfile
Language: TypeScript
Lines: 15
Full Code:
--------------------------------------------------------------------------------
function UserProfile({ user, isSessionUser }: ProfileProps): JSX.Element {
  const [isEditing, setIsEditing] = useState(false);

  const {
    profileUI: {
      showCerts,
      showHeatMap,
      showPoints,
      showPortfolio,
      showTimeLine
    },
    calendar,
    completedChallenges,
    username,
    points,
    portfolio
  } = user;

  return (
    <>
      {isSessionUser && (
        <EditModal
          user={user}
          isEditing={isEditing}
          isSessionUser={isSessionUser}
          setIsEditing={setIsEditing}
        />
      )}
      <Camper
        user={user}
        isSessionUser={isSessionUser}
        setIsEditing={setIsEditing}
      />
      {showPoints ? <Stats points={points} calendar={calendar} /> : null}
      {showHeatMap ? <HeatMap calendar={calendar} /> : null}
      {showPortfolio ? (
        <PortfolioProjects portfolioProjects={portfolio} />
      ) : null}
      {showCerts ? <Certifications user={user} /> : null}
      {showTimeLine ? (
        <Timeline completedMap={completedChallenges} username={username} />
      ) : null}
      <Spacer size='m' />
    </>
}
--------------------------------------------------------------------------------


Function 2: Profile
Language: TypeScript
Lines: 15
Full Code:
--------------------------------------------------------------------------------
function Profile({ user, isSessionUser }: ProfileProps): JSX.Element {
  const { t } = useTranslation();
  const {
    profileUI: { isLocked },
    username
  } = user;

  const showUserProfile = !isLocked || isSessionUser;

  return (
    <>
      <Helmet>
        <title>{t('buttons.profile')} | freeCodeCamp.org</title>
      </Helmet>
      <Spacer size='m' />
      <Container>
        <Spacer size='m' />
        {isLocked && (
          <Message username={username} isSessionUser={isSessionUser} t={t} />
        )}
        {showUserProfile && (
          <UserProfile user={user} isSessionUser={isSessionUser} />
        )}
        {!isSessionUser && (
          <Row className='text-center'>
            <Link to={`/user/${username}/report-user`}>
              {t('buttons.flag-user')}
            </Link>
          </Row>
        )}
        <Spacer size='m' />
      </Container>
    </>
  );
}
--------------------------------------------------------------------------------


Function 3: mapErr
Language: TypeScript
Lines: 7
Full Code:
--------------------------------------------------------------------------------
export async function mapErr<T>(promise: Promise<T>): Promise<Result<T>> {
  try {
    return { hasError: false, data: await promise };
  } catch (error) {
    return { hasError: true, error };
  }
}
--------------------------------------------------------------------------------


Function 4: syncMapErr
Language: TypeScript
Lines: 7
Full Code:
--------------------------------------------------------------------------------
export function syncMapErr<T>(fn: () => T): Result<T> {
  try {
    return { hasError: false, data: fn() };
  } catch (error) {
    return { hasError: true, error };
  }
}
--------------------------------------------------------------------------------

================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T02:40:51.648Z
Question Type: multiple-choice
Function: Profile
Function Size: 1055 characters
Questions Generated: 3
Repository: Unknown
Function Preview: // Function: Profile (TypeScript)\n// Renders the profile component, handling user visibility and displaying user information based on session state.\n\nfunction Profile({ user, isSessionUser }: ProfileProps): JSX.Element {\n  const { t } = useTranslation();\n  const {\n    profileUI: { isLocked },\n    us
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T02:40:51.854Z
Question Type: select-all
Function: mapErr
Function Size: 315 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: mapErr (TypeScript)\n// Wraps a promise to catch errors and return them as part of the promise result.\n\nexport async function mapErr<T>(promise: Promise<T>): Promise<Result<T>> {\n  try {\n    return { hasError: false, data: await promise };\n  } catch (error) {\n    return { hasError: true,
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T02:40:53.514Z
Question Type: true-false
Function: UserProfile
Function Size: 1266 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: UserProfile (TypeScript)\n// Renders the user profile component, conditionally displaying various sections based on user data.\n\nfunction UserProfile({ user, isSessionUser }: ProfileProps): JSX.Element {\n  const [isEditing, setIsEditing] = useState(false);\n\n  const {\n    profileUI: {\n    
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T02:41:00.577Z
Question Type: function-variant
Function: mapErr
Function Size: 315 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: mapErr (TypeScript)\n// Wraps a promise to catch errors and return them as part of the promise result.\n\nexport async function mapErr<T>(promise: Promise<T>): Promise<Result<T>> {\n  try {\n    return { hasError: false, data: await promise };\n  } catch (error) {\n    return { hasError: true,
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T02:41:02.239Z
Question Type: order-sequence
Function: syncMapErr
Function Size: 295 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: syncMapErr (TypeScript)\n// Wraps a synchronous function to catch throws and return them as part of the value.\n\nexport function syncMapErr<T>(fn: () => T): Result<T> {\n  try {\n    return { hasError: false, data: fn() };\n  } catch (error) {\n    return { hasError: true, error };\n  }\n}
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T02:41:05.834Z
Question Type: select-all
Function: UserProfile
Function Size: 1266 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: UserProfile (TypeScript)\n// Renders the user profile component, conditionally displaying various sections based on user data.\n\nfunction UserProfile({ user, isSessionUser }: ProfileProps): JSX.Element {\n  const [isEditing, setIsEditing] = useState(false);\n\n  const {\n    profileUI: {\n    
================================================================================


=== SESSION SUMMARY ===
Session ID: session-1760546051744
Repository: Unknown
Total Questions Generated: 8
Total Chunks Processed: 4
Ended: 2025-10-16T02:41:05.947Z
================================================================================


--- QUESTION GENERATION ---
Timestamp: 2025-10-16T02:41:09.918Z
Question Type: true-false
Function: syncMapErr
Function Size: 295 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: syncMapErr (TypeScript)\n// Wraps a synchronous function to catch throws and return them as part of the value.\n\nexport function syncMapErr<T>(fn: () => T): Result<T> {\n  try {\n    return { hasError: false, data: fn() };\n  } catch (error) {\n    return { hasError: true, error };\n  }\n}
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T02:41:13.210Z
Question Type: select-all
Function: CertificationSettings
Function Size: 1488 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: CertificationSettings (TypeScript)\n// Manages the state and functionality for the certification settings, including handling project solutions and modal visibility.\n\nfunction CertificationSettings(props: CertificationSettingsProps) {\n  const [projectTitle, setProjectTitle] = useState(''
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T02:41:13.719Z
Question Type: multiple-choice
Function: LegacyFullStack
Function Size: 2912 characters
Questions Generated: 3
Repository: Unknown
Function Preview: // Function: LegacyFullStack (TypeScript)\n// Renders the Legacy Full Stack certification component, allowing users to claim or view their certification based on their eligibility.\n\nconst LegacyFullStack = (props: CertificationSettingsProps) => {\n  const {\n    isFullStackCert,\n    username,\n    isHon
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T02:41:17.505Z
Question Type: true-false
Function: UserProfile
Function Size: 1266 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: UserProfile (TypeScript)\n// Renders the user profile component, conditionally displaying various sections based on user data.\n\nfunction UserProfile({ user, isSessionUser }: ProfileProps): JSX.Element {\n  const [isEditing, setIsEditing] = useState(false);\n\n  const {\n    profileUI: {\n    
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T02:41:22.529Z
Question Type: order-sequence
Function: createStripePaymentIntent
Function Size: 386 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: createStripePaymentIntent (TypeScript)\n// Creates a Stripe payment intent with the provided email, name, amount, and duration.\n\nexport function createStripePaymentIntent(body: {\n  email: string | undefined;\n  name: string | undefined;\n  amount: number;\n  duration: DonationDuration;\n}): 
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T02:41:24.256Z
Question Type: order-sequence
Function: mapErr
Function Size: 315 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: mapErr (TypeScript)\n// Wraps a promise to catch errors and return them as part of the promise result.\n\nexport async function mapErr<T>(promise: Promise<T>): Promise<Result<T>> {\n  try {\n    return { hasError: false, data: await promise };\n  } catch (error) {\n    return { hasError: true,
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T02:41:27.089Z
Question Type: select-all
Function: Profile
Function Size: 1055 characters
Questions Generated: 0
Repository: Unknown
Function Preview: // Function: Profile (TypeScript)\n// Renders the profile component, handling user visibility and displaying user information based on session state.\n\nfunction Profile({ user, isSessionUser }: ProfileProps): JSX.Element {\n  const { t } = useTranslation();\n  const {\n    profileUI: { isLocked },\n    us
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T02:41:29.020Z
Question Type: select-all
Function: mapErr
Function Size: 315 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: mapErr (TypeScript)\n// Wraps a promise to catch errors and return them as part of the promise result.\n\nexport async function mapErr<T>(promise: Promise<T>): Promise<Result<T>> {\n  try {\n    return { hasError: false, data: await promise };\n  } catch (error) {\n    return { hasError: true,
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T02:41:31.538Z
Question Type: function-variant
Function: Profile
Function Size: 1055 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: Profile (TypeScript)\n// Renders the profile component, handling user visibility and displaying user information based on session state.\n\nfunction Profile({ user, isSessionUser }: ProfileProps): JSX.Element {\n  const { t } = useTranslation();\n  const {\n    profileUI: { isLocked },\n    us
================================================================================


=== SESSION SUMMARY ===
Session ID: session-1760546051744
Repository: Unknown
Total Questions Generated: 10
Total Chunks Processed: 8
Ended: 2025-10-16T02:41:31.592Z
================================================================================


--- FUNCTION EXTRACTION ---
Timestamp: 2025-10-16T03:26:25.288Z
File: Make them available to the helpers.
Functions Extracted: 4


Function 1: readContext
Language: JavaScript
Lines: 5
Full Code:
--------------------------------------------------------------------------------
function readContext(Ctx) {
  const dispatcher =
    React.__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE
      .H;
  return dispatcher.readContext(Ctx);
}
--------------------------------------------------------------------------------


Function 2: Parent
Language: JavaScript
Lines: 6
Full Code:
--------------------------------------------------------------------------------
class Parent extends React.Component {
  render() {
    return (
      <Theme.Provider value="light">
        <Child />
      </Theme.Provider>
    );
  }
}
--------------------------------------------------------------------------------


Function 3: Child
Language: JavaScript
Lines: 5
Full Code:
--------------------------------------------------------------------------------
function Child() {
  return (
    <Language.Provider value="english">
      <Grandchild />
    </Language.Provider>
  );
}
--------------------------------------------------------------------------------


Function 4: App
Language: JavaScript
Lines: 10
Full Code:
--------------------------------------------------------------------------------
const App = () => (
  <div>
    <Theme.Provider value="light">
      <Language.Provider value="english">
        <Theme.Provider value="dark">
          <Theme.Consumer>
            {theme => <div id="theme1">{theme}</div>}
          </Theme.Consumer>
        </Theme.Provider>
      </Language.Provider>
    </Theme.Provider>
    <Language.Consumer>
      {language => <div id="language3">{language}</div>}
    </Language.Consumer>
  </div>
);
--------------------------------------------------------------------------------

================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T03:26:31.328Z
Question Type: true-false
Function: readContext
Function Size: 272 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: readContext (JavaScript)\n// Reads the context value from the provided context object.\n\nfunction readContext(Ctx) {\n  const dispatcher =\n    React.__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE\n      .H;\n  return dispatcher.readContext(Ctx);\n}
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T03:26:36.384Z
Question Type: function-variant
Function: readContext
Function Size: 272 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: readContext (JavaScript)\n// Reads the context value from the provided context object.\n\nfunction readContext(Ctx) {\n  const dispatcher =\n    React.__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE\n      .H;\n  return dispatcher.readContext(Ctx);\n}
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T03:26:36.892Z
Question Type: function-variant
Function: readContext
Function Size: 272 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: readContext (JavaScript)\n// Reads the context value from the provided context object.\n\nfunction readContext(Ctx) {\n  const dispatcher =\n    React.__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE\n      .H;\n  return dispatcher.readContext(Ctx);\n}
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T03:26:39.484Z
Question Type: select-all
Function: Parent
Function Size: 266 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: Parent (JavaScript)\n// A React component that provides a theme context to its child components.\n\nclass Parent extends React.Component {\n  render() {\n    return (\n      <Theme.Provider value="light">\n        <Child />\n      </Theme.Provider>\n    );\n  }\n}
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T03:26:41.558Z
Question Type: function-variant
Function: App
Function Size: 559 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: App (JavaScript)\n// A functional component that demonstrates nested context providers and consumers.\n\nconst App = () => (\n  <div>\n    <Theme.Provider value="light">\n      <Language.Provider value="english">\n        <Theme.Provider value="dark">\n          <Theme.Consumer>\n            {th
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T03:26:42.379Z
Question Type: multiple-choice
Function: Child
Function Size: 233 characters
Questions Generated: 3
Repository: Unknown
Function Preview: // Function: Child (JavaScript)\n// A functional component that provides a language context to its grandchild.\n\nfunction Child() {\n  return (\n    <Language.Provider value="english">\n      <Grandchild />\n    </Language.Provider>\n  );\n}
================================================================================


=== SESSION SUMMARY ===
Session ID: session-1760546051744
Repository: Unknown
Total Questions Generated: 8
Total Chunks Processed: 4
Ended: 2025-10-16T03:26:42.416Z
================================================================================


--- FUNCTION EXTRACTION ---
Timestamp: 2025-10-16T03:27:06.586Z
File: [2 files: index.js, did in the future we'd probably want to have this be in sync with scheduleWork]
Functions Extracted: 8


Function 1: triggerErrorAndCatch
Language: JavaScript
Lines: 12
Full Code:
--------------------------------------------------------------------------------
triggerErrorAndCatch = () => {
    try {
      ReactDOM.flushSync(() => {
        ReactDOM.render(
          <BadRender
            doThrow={() => {
              throw new Error('Caught error');
            }}
          />, 
          this.container
        );
      });
    } catch (e) {}
  };
--------------------------------------------------------------------------------


Function 2: componentDidMount
Language: JavaScript
Lines: 5
Full Code:
--------------------------------------------------------------------------------
componentDidMount() {
    if (this.state.silenceErrors) {
      window.addEventListener('error', silenceWindowError);
    }
  }
--------------------------------------------------------------------------------


Function 3: componentDidUpdate
Language: JavaScript
Lines: 9
Full Code:
--------------------------------------------------------------------------------
componentDidUpdate(prevProps, prevState) {
    if (!prevState.silenceErrors && this.state.silenceErrors) {
      window.addEventListener('error', silenceWindowError);
    } else if (prevState.silenceErrors && !this.state.silenceErrors) {
      window.removeEventListener('error', silenceWindowError);
    }
  }
--------------------------------------------------------------------------------


Function 4: componentWillUnmount
Language: JavaScript
Lines: 5
Full Code:
--------------------------------------------------------------------------------
componentWillUnmount() {
    if (this.state.silenceErrors) {
      window.removeEventListener('error', silenceWindowError);
    }
  }
--------------------------------------------------------------------------------


Function 5: componentDidUpdate
Language: JavaScript
Lines: 8
Full Code:
--------------------------------------------------------------------------------
componentDidUpdate() {
    if (this.expectUpdate) {
      this.expectUpdate = false;
      this.setState({eventType: window.event.type});
      setTimeout(() => {
        this.setState({cleared: !window.event});
      });
    }
  }
--------------------------------------------------------------------------------


Function 6: naiveMemoize
Language: JavaScript
Lines: 10
Full Code:
--------------------------------------------------------------------------------
function naiveMemoize(fn) {
  let memoizedEntry;
  return function () {
    if (!memoizedEntry) {
      memoizedEntry = {result: null};
      memoizedEntry.result = fn();
    }
    return memoizedEntry.result;
  };
}
--------------------------------------------------------------------------------


Function 7: writeChunk
Language: JavaScript
Lines: 6
Full Code:
--------------------------------------------------------------------------------
export function writeChunk(
  destination: Destination,
  chunk: Chunk | PrecomputedChunk | BinaryChunk,
): void {
  writeChunkAndReturn(destination, chunk);
}
--------------------------------------------------------------------------------


Function 8: writeChunkAndReturn
Language: JavaScript
Lines: 5
Full Code:
--------------------------------------------------------------------------------
export function writeChunkAndReturn(
  destination: Destination,
  chunk: Chunk | PrecomputedChunk | BinaryChunk,
): boolean {
  return destination.push(chunk);
}
--------------------------------------------------------------------------------

================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T03:27:13.556Z
Question Type: select-all
Function: writeChunkAndReturn
Function Size: 288 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: writeChunkAndReturn (JavaScript)\n// Pushes a chunk to the destination and returns a boolean indicating success.\n\nexport function writeChunkAndReturn(\n  destination: Destination,\n  chunk: Chunk | PrecomputedChunk | BinaryChunk,\n): boolean {\n  return destination.push(chunk);\n}
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T03:27:14.959Z
Question Type: multiple-choice
Function: componentDidMount
Function Size: 252 characters
Questions Generated: 3
Repository: Unknown
Function Preview: // Function: componentDidMount (JavaScript)\n// Lifecycle method that adds an error event listener if silenceErrors is true.\n\ncomponentDidMount() {\n    if (this.state.silenceErrors) {\n      window.addEventListener('error', silenceWindowError);\n    }\n  }
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T03:27:15.758Z
Question Type: select-all
Function: triggerErrorAndCatch
Function Size: 405 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: triggerErrorAndCatch (JavaScript)\n// Triggers an error in a BadRender component and catches it.\n\ntriggerErrorAndCatch = () => {\n    try {\n      ReactDOM.flushSync(() => {\n        ReactDOM.render(\n          <BadRender\n            doThrow={() => {\n              throw new Error('Caught err
================================================================================

--- FUNCTION EXTRACTION ---
Timestamp: 2025-10-16T03:27:17.863Z
File: [2 files: CustomHooks.js, Program.ts]
Functions Extracted: 4


Function 1: tryFindDirectiveEnablingMemoization
Language: TypeScript
Lines: 12
Full Code:
--------------------------------------------------------------------------------
export function tryFindDirectiveEnablingMemoization(
  directives: Array<t.Directive>,
  opts: ParsedPluginOptions,
): Result<t.Directive | null, CompilerError> {
  const optIn = directives.find(directive =>
    OPT_IN_DIRECTIVES.has(directive.value.value),
  );
  if (optIn != null) {
    return Ok(optIn);
  }
  const dynamicGating = findDirectivesDynamicGating(directives, opts);
  if (dynamicGating.isOk()) {
    return Ok(dynamicGating.unwrap()?.directive ?? null);
  } else {
    return Err(dynamicGating.unwrapErr());
  }
}
--------------------------------------------------------------------------------


Function 2: findDirectiveDisablingMemoization
Language: TypeScript
Lines: 10
Full Code:
--------------------------------------------------------------------------------
export function findDirectiveDisablingMemoization(
  directives: Array<t.Directive>,
  {customOptOutDirectives}: PluginOptions,
): t.Directive | null {
  if (customOptOutDirectives != null) {
    return (
      directives.find(
        directive =>
          customOptOutDirectives.indexOf(directive.value.value) !== -1,
      ) ?? null
    );
  }
  return (
    directives.find(directive =>
      OPT_OUT_DIRECTIVES.has(directive.value.value),
    ) ?? null
  );
}
--------------------------------------------------------------------------------


Function 3: logError
Language: TypeScript
Lines: 16
Full Code:
--------------------------------------------------------------------------------
function logError(
  err: unknown,
  context: {
    opts: PluginOptions;
    filename: string | null;
  },
  fnLoc: t.SourceLocation | null,
): void {
  if (context.opts.logger) {
    if (err instanceof CompilerError) {
      for (const detail of err.details) {
        context.opts.logger.logEvent(context.filename, {
          kind: 'CompileError',
          fnLoc,
          detail,
        });
      }
    } else {
      let stringifiedError;
      if (err instanceof Error) {
        stringifiedError = err.stack ?? err.message;
      } else {
        stringifiedError = err?.toString() ?? '[ null ]';
      }

      context.opts.logger.logEvent(context.filename, {
        kind: 'PipelineError',
        fnLoc,
        data: stringifiedError,
      });
    }
  }
}
--------------------------------------------------------------------------------


Function 4: handleError
Language: TypeScript
Lines: 9
Full Code:
--------------------------------------------------------------------------------
function handleError(
  err: unknown,
  context: {
    opts: PluginOptions;
    filename: string | null;
  },
  fnLoc: t.SourceLocation | null,
): void {
  logError(err, context, fnLoc);
  if (
    context.opts.panicThreshold === 'all_errors' ||
    (context.opts.panicThreshold === 'critical_errors' && isError(err)) ||
    isConfigError(err)
  ) {
    // Additional error handling logic can be added here
  }
}
--------------------------------------------------------------------------------

================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T03:27:17.971Z
Question Type: function-variant
Function: componentDidUpdate
Function Size: 355 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: componentDidUpdate (JavaScript)\n// Updates the state with the event type and checks if the event has cleared.\n\ncomponentDidUpdate() {\n    if (this.expectUpdate) {\n      this.expectUpdate = false;\n      this.setState({eventType: window.event.type});\n      setTimeout(() => {\n        this.
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T03:27:19.447Z
Question Type: true-false
Function: naiveMemoize
Function Size: 314 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: naiveMemoize (JavaScript)\n// Memoizes a function to avoid recalculating its result.\n\nfunction naiveMemoize(fn) {\n  let memoizedEntry;\n  return function () {\n    if (!memoizedEntry) {\n      memoizedEntry = {result: null};\n      memoizedEntry.result = fn();\n    }\n    return memoizedEntry.
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T03:27:23.100Z
Question Type: select-all
Function: componentWillUnmount
Function Size: 265 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: componentWillUnmount (JavaScript)\n// Lifecycle method that removes the error event listener if silenceErrors is true.\n\ncomponentWillUnmount() {\n    if (this.state.silenceErrors) {\n      window.removeEventListener('error', silenceWindowError);\n    }\n  }
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T03:27:23.104Z
Question Type: true-false
Function: tryFindDirectiveEnablingMemoization
Function Size: 674 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: tryFindDirectiveEnablingMemoization (TypeScript)\n// Tries to find a directive that enables memoization from a list of directives.\n\nexport function tryFindDirectiveEnablingMemoization(\n  directives: Array<t.Directive>,\n  opts: ParsedPluginOptions,\n): Result<t.Directive | null, CompilerEr
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T03:27:24.814Z
Question Type: function-variant
Function: writeChunk
Function Size: 276 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: writeChunk (JavaScript)\n// Writes a chunk to the specified destination by calling writeChunkAndReturn.\n\nexport function writeChunk(\n  destination: Destination,\n  chunk: Chunk | PrecomputedChunk | BinaryChunk,\n): void {\n  writeChunkAndReturn(destination, chunk);\n}
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T03:27:25.962Z
Question Type: select-all
Function: tryFindDirectiveEnablingMemoization
Function Size: 674 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: tryFindDirectiveEnablingMemoization (TypeScript)\n// Tries to find a directive that enables memoization from a list of directives.\n\nexport function tryFindDirectiveEnablingMemoization(\n  directives: Array<t.Directive>,\n  opts: ParsedPluginOptions,\n): Result<t.Directive | null, CompilerEr
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T03:27:27.117Z
Question Type: true-false
Function: writeChunk
Function Size: 276 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: writeChunk (JavaScript)\n// Writes a chunk to the specified destination by calling writeChunkAndReturn.\n\nexport function writeChunk(\n  destination: Destination,\n  chunk: Chunk | PrecomputedChunk | BinaryChunk,\n): void {\n  writeChunkAndReturn(destination, chunk);\n}
================================================================================


=== SESSION SUMMARY ===
Session ID: session-1760546051744
Repository: Unknown
Total Questions Generated: 10
Total Chunks Processed: 8
Ended: 2025-10-16T03:27:27.149Z
================================================================================


--- QUESTION GENERATION ---
Timestamp: 2025-10-16T03:27:32.210Z
Question Type: select-all
Function: handleError
Function Size: 524 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: handleError (TypeScript)\n// Handles errors by logging them and checking against panic thresholds.\n\nfunction handleError(\n  err: unknown,\n  context: {\n    opts: PluginOptions;\n    filename: string | null;\n  },\n  fnLoc: t.SourceLocation | null,\n): void {\n  logError(err, context, fnLoc);\n 
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T03:27:32.267Z
Question Type: multiple-choice
Function: findDirectiveDisablingMemoization
Function Size: 600 characters
Questions Generated: 0
Repository: Unknown
Function Preview: // Function: findDirectiveDisablingMemoization (TypeScript)\n// Finds a directive that disables memoization from a list of directives.\n\nexport function findDirectiveDisablingMemoization(\n  directives: Array<t.Directive>,\n  {customOptOutDirectives}: PluginOptions,\n): t.Directive | null {\n  if (customO
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T03:27:36.344Z
Question Type: function-variant
Function: handleError
Function Size: 524 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: handleError (TypeScript)\n// Handles errors by logging them and checking against panic thresholds.\n\nfunction handleError(\n  err: unknown,\n  context: {\n    opts: PluginOptions;\n    filename: string | null;\n  },\n  fnLoc: t.SourceLocation | null,\n): void {\n  logError(err, context, fnLoc);\n 
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T03:27:39.805Z
Question Type: select-all
Function: findDirectiveDisablingMemoization
Function Size: 600 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: findDirectiveDisablingMemoization (TypeScript)\n// Finds a directive that disables memoization from a list of directives.\n\nexport function findDirectiveDisablingMemoization(\n  directives: Array<t.Directive>,\n  {customOptOutDirectives}: PluginOptions,\n): t.Directive | null {\n  if (customO
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T03:27:43.547Z
Question Type: function-variant
Function: handleError
Function Size: 524 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: handleError (TypeScript)\n// Handles errors by logging them and checking against panic thresholds.\n\nfunction handleError(\n  err: unknown,\n  context: {\n    opts: PluginOptions;\n    filename: string | null;\n  },\n  fnLoc: t.SourceLocation | null,\n): void {\n  logError(err, context, fnLoc);\n 
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T03:27:44.093Z
Question Type: select-all
Function: tryFindDirectiveEnablingMemoization
Function Size: 674 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: tryFindDirectiveEnablingMemoization (TypeScript)\n// Tries to find a directive that enables memoization from a list of directives.\n\nexport function tryFindDirectiveEnablingMemoization(\n  directives: Array<t.Directive>,\n  opts: ParsedPluginOptions,\n): Result<t.Directive | null, CompilerEr
================================================================================

--- FUNCTION EXTRACTION ---
Timestamp: 2025-10-16T03:27:46.251Z
File: [2 files: container., WebSockets can produce string values in ReadableStreams.]
Functions Extracted: 4


Function 1: startReadingFromStream
Language: JavaScript
Lines: 15
Full Code:
--------------------------------------------------------------------------------
function startReadingFromStream(
  response: FlightResponse,
  stream: ReadableStream,
  onDone: () => void,
  debugValue: mixed,
): void {
  const streamState = createStreamState(response, debugValue);
  const reader = stream.getReader();
  function progress({
    done,
    value,
  }: {
    done: boolean,
    value: ?any,
    ...
  }): void | Promise<void> {
    if (done) {
      return onDone();
    }
    const buffer: Uint8Array = (value: any);
    processBinaryChunk(response, streamState, buffer);
    return reader.read().then(progress).catch(error);
  }
  function error(e: any) {
    reportGlobalError(response, e);
  }
  reader.read().then(progress).catch(error);
}
--------------------------------------------------------------------------------


Function 2: createFromReadableStream
Language: JavaScript
Lines: 20
Full Code:
--------------------------------------------------------------------------------
function createFromReadableStream<T>(
  stream: ReadableStream,
  options?: Options,
): Thenable<T> {
  const response: FlightResponse = createResponseFromOptions(options);
  if (
    __DEV__ &&
    options &&
    options.debugChannel &&
    options.debugChannel.readable
  ) {
    let streamDoneCount = 0;
    const handleDone = () => {
      if (++streamDoneCount === 2) {
        close(response);
      }
    };
    startReadingFromUniversalStream(
      response,
      options.debugChannel.readable,
      handleDone,
    );
    startReadingFromStream(response, stream, handleDone, stream);
  } else {
    startReadingFromStream(
      response,
      stream,
      close.bind(null, response),
      stream,
    );
  }
  return getRoot(response);
}
--------------------------------------------------------------------------------


Function 3: createFromFetch
Language: JavaScript
Lines: 22
Full Code:
--------------------------------------------------------------------------------
function createFromFetch<T>(
  promiseForResponse: Promise<Response>,
  options?: Options,
): Thenable<T> {
  const response: FlightResponse = createResponseFromOptions(options);
  promiseForResponse.then(
    function (r) {
      if (
        __DEV__ &&
        options &&
        options.debugChannel &&
        options.debugChannel.readable
      ) {
        let streamDoneCount = 0;
        const handleDone = () => {
          if (++streamDoneCount === 2) {
            close(response);
          }
        };
        startReadingFromUniversalStream(
          response,
          options.debugChannel.readable,
          handleDone,
        );
        startReadingFromStream(response, (r.body: any), handleDone, r);
      } else {
        startReadingFromStream(
          response,
          (r.body: any),
          close.bind(null, response),
          r,
        );
      }
    },
    function (e) {
      reportGlobalError(response, e);
    },
  );
  return getRoot(response);
}
--------------------------------------------------------------------------------


Function 4: encodeReply
Language: JavaScript
Lines: 15
Full Code:
--------------------------------------------------------------------------------
function encodeReply(
  value: ReactServerValue,
  options?: {temporaryReferences?: TemporaryReferenceSet, signal?: AbortSignal},
): Promise<
  string | URLSearchParams | FormData,
> /* We don't use URLSearchParams yet but maybe */ {
  return new Promise((resolve, reject) => {
    const abort = processReply(
      value,
      '',
      options && options.temporaryReferences
        ? options.temporaryReferences
        : undefined,
      resolve,
      reject,
    );
    if (options && options.signal) {
      const signal = options.signal;
      if (signal.aborted) {
        abort((signal: any).reason);
      } else {
        const listener = () => {
          abort((signal: any).reason);
          signal.removeEventListener('abort', listener);
        };
        signal.addEventListener('abort', listener);
      }
    }
  });
}
--------------------------------------------------------------------------------

================================================================================

--- FUNCTION EXTRACTION ---
Timestamp: 2025-10-16T03:27:47.981Z
File: [2 files: Program.ts, ReactServerStreamConfigFB.js]
Functions Extracted: 7


Function 1: tryFindDirectiveEnablingMemoization
Language: TypeScript
Lines: 15
Full Code:
--------------------------------------------------------------------------------
export function tryFindDirectiveEnablingMemoization(
  directives: Array<t.Directive>,
  opts: ParsedPluginOptions,
): Result<t.Directive | null, CompilerError> {
  const optIn = directives.find(directive =>
    OPT_IN_DIRECTIVES.has(directive.value.value),
  );
  if (optIn != null) {
    return Ok(optIn);
  }
  const dynamicGating = findDirectivesDynamicGating(directives, opts);
  if (dynamicGating.isOk()) {
    return Ok(dynamicGating.unwrap()?.directive ?? null);
  } else {
    return Err(dynamicGating.unwrapErr());
  }
}
--------------------------------------------------------------------------------


Function 2: findDirectiveDisablingMemoization
Language: TypeScript
Lines: 15
Full Code:
--------------------------------------------------------------------------------
export function findDirectiveDisablingMemoization(
  directives: Array<t.Directive>,
  {customOptOutDirectives}: PluginOptions,
): t.Directive | null {
  if (customOptOutDirectives != null) {
    return (
      directives.find(
        directive =>
          customOptOutDirectives.indexOf(directive.value.value) !== -1,
      ) ?? null
    );
  }
  return (
    directives.find(directive =>
      OPT_OUT_DIRECTIVES.has(directive.value.value),
    ) ?? null
  );
}
--------------------------------------------------------------------------------


Function 3: findDirectivesDynamicGating
Language: TypeScript
Lines: 36
Full Code:
--------------------------------------------------------------------------------
function findDirectivesDynamicGating(
  directives: Array<t.Directive>,
  opts: ParsedPluginOptions,
): Result<
  {
    gating: ExternalFunction;
    directive: t.Directive;
  } | null,
  CompilerError
> {
  if (opts.dynamicGating === null) {
    return Ok(null);
  }
  const errors = new CompilerError();
  const result: Array<{directive: t.Directive; match: string}> = [];

  for (const directive of directives) {
    const maybeMatch = DYNAMIC_GATING_DIRECTIVE.exec(directive.value.value);
    if (maybeMatch != null && maybeMatch[1] != null) {
      if (t.isValidIdentifier(maybeMatch[1])) {
        result.push({directive, match: maybeMatch[1]});
      } else {
        errors.push({
          reason: `Dynamic gating directive is not a valid JavaScript identifier`,
          description: `Found '${directive.value.value}'`,
          category: ErrorCategory.Gating,
          loc: directive.loc ?? null,
          suggestions: null,
        });
      }
    }
  }
  if (errors.hasAnyErrors()) {
    return Err(errors);
  } else if (result.length > 1) {
    const error = new CompilerError();
    error.push({
      reason: `Multiple dynamic gating directives found`,
      description: `Expected a single directive but found [${result
        .map(r => r.directive.value.value)
        .join(', ')}]`,
      category: ErrorCategory.Gating,
      loc: result[0].directive.loc ?? null,
      suggestions: null,
    });
    return Err(error);
  } else if (result.length === 1) {
    return Ok({
      gating: {
        source: opts.dynamicGating.source,
        importSpecifierName: result[0].match,
      },
      directive: result[0].directive,
    });
  } else {
    return Ok(null);
  }
}
--------------------------------------------------------------------------------


Function 4: logError
Language: TypeScript
Lines: 22
Full Code:
--------------------------------------------------------------------------------
function logError(
  err: unknown,
  context: {
    opts: PluginOptions;
    filename: string | null;
  },
  fnLoc: t.SourceLocation | null,
): void {
  if (context.opts.logger) {
    if (err instanceof CompilerError) {
      for (const detail of err.details) {
        context.opts.logger.logEvent(context.filename, {
          kind: 'CompileError',
          fnLoc,
          detail,
        });
      }
    } else {
      let stringifiedError;
      if (err instanceof Error) {
        stringifiedError = err.stack ?? err.message;
      } else {
        stringifiedError = err?.toString() ?? '[ null ]';
      }

      context.opts.logger.logEvent(context.filename, {
        kind: 'PipelineError',
        fnLoc,
        data: stringifiedError,
      });
    }
  }
}
--------------------------------------------------------------------------------


Function 5: writeChunk
Language: JavaScript
Lines: 5
Full Code:
--------------------------------------------------------------------------------
export function writeChunk(
  destination: Destination,
  chunk: Chunk | PrecomputedChunk | BinaryChunk,
): void {
  destination.buffer += chunk;
}
--------------------------------------------------------------------------------


Function 6: writeChunkAndReturn
Language: JavaScript
Lines: 6
Full Code:
--------------------------------------------------------------------------------
export function writeChunkAndReturn(
  destination: Destination,
  chunk: Chunk | PrecomputedChunk | BinaryChunk,
): boolean {
  destination.buffer += chunk;
  return true;
}
--------------------------------------------------------------------------------


Function 7: closeWithError
Language: JavaScript
Lines: 6
Full Code:
--------------------------------------------------------------------------------
export function closeWithError(destination: Destination, error: mixed): void {
  destination.done = true;
  destination.fatal = true;
  destination.error = error;
}
--------------------------------------------------------------------------------

================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T03:27:50.423Z
Question Type: true-false
Function: handleError
Function Size: 524 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: handleError (TypeScript)\n// Handles errors by logging them and checking against panic thresholds.\n\nfunction handleError(\n  err: unknown,\n  context: {\n    opts: PluginOptions;\n    filename: string | null;\n  },\n  fnLoc: t.SourceLocation | null,\n): void {\n  logError(err, context, fnLoc);\n 
================================================================================


=== SESSION SUMMARY ===
Session ID: session-1760546051744
Repository: Unknown
Total Questions Generated: 8
Total Chunks Processed: 4
Ended: 2025-10-16T03:27:51.175Z
================================================================================


--- QUESTION GENERATION ---
Timestamp: 2025-10-16T03:27:53.805Z
Question Type: true-false
Function: findDirectiveDisablingMemoization
Function Size: 603 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: findDirectiveDisablingMemoization (TypeScript)\n// Finds a directive that disables memoization from the provided directives.\n\nexport function findDirectiveDisablingMemoization(\n  directives: Array<t.Directive>,\n  {customOptOutDirectives}: PluginOptions,\n): t.Directive | null {\n  if (cust
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T03:27:54.528Z
Question Type: multiple-choice
Function: logError
Function Size: 870 characters
Questions Generated: 3
Repository: Unknown
Function Preview: // Function: logError (TypeScript)\n// Logs errors to the provided logger with context information.\n\nfunction logError(\n  err: unknown,\n  context: {\n    opts: PluginOptions;\n    filename: string | null;\n  },\n  fnLoc: t.SourceLocation | null,\n): void {\n  if (context.opts.logger) {\n    if (err instance
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T03:27:55.945Z
Question Type: select-all
Function: startReadingFromStream
Function Size: 795 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: startReadingFromStream (JavaScript)\n// Starts reading from a ReadableStream and processes its chunks.\n\nfunction startReadingFromStream(\n  response: FlightResponse,\n  stream: ReadableStream,\n  onDone: () => void,\n  debugValue: mixed,\n): void {\n  const streamState = createStreamState(resp
================================================================================

--- FUNCTION EXTRACTION ---
Timestamp: 2025-10-16T03:27:56.885Z
File: [2 files: View, did in the future we'd probably want to have this be in sync with scheduleWork]
Functions Extracted: 2


Function 1: writeChunk
Language: TypeScript
Lines: 6
Full Code:
--------------------------------------------------------------------------------
export function writeChunk(
  destination: Destination,
  chunk: Chunk | PrecomputedChunk | BinaryChunk,
): void {
  writeChunkAndReturn(destination, chunk);
}
--------------------------------------------------------------------------------


Function 2: writeChunkAndReturn
Language: TypeScript
Lines: 6
Full Code:
--------------------------------------------------------------------------------
export function writeChunkAndReturn(
  destination: Destination,
  chunk: Chunk | PrecomputedChunk | BinaryChunk,
): boolean {
  return destination.push(chunk);
}
--------------------------------------------------------------------------------

================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T03:28:01.772Z
Question Type: select-all
Function: writeChunkAndReturn
Function Size: 288 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: writeChunkAndReturn (TypeScript)\n// Writes a chunk to the destination and returns a boolean indicating success.\n\nexport function writeChunkAndReturn(\n  destination: Destination,\n  chunk: Chunk | PrecomputedChunk | BinaryChunk,\n): boolean {\n  return destination.push(chunk);\n}
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T03:28:03.058Z
Question Type: select-all
Function: writeChunkAndReturn
Function Size: 288 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: writeChunkAndReturn (TypeScript)\n// Writes a chunk to the destination and returns a boolean indicating success.\n\nexport function writeChunkAndReturn(\n  destination: Destination,\n  chunk: Chunk | PrecomputedChunk | BinaryChunk,\n): boolean {\n  return destination.push(chunk);\n}
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T03:28:03.424Z
Question Type: multiple-choice
Function: writeChunkAndReturn
Function Size: 288 characters
Questions Generated: 3
Repository: Unknown
Function Preview: // Function: writeChunkAndReturn (TypeScript)\n// Writes a chunk to the destination and returns a boolean indicating success.\n\nexport function writeChunkAndReturn(\n  destination: Destination,\n  chunk: Chunk | PrecomputedChunk | BinaryChunk,\n): boolean {\n  return destination.push(chunk);\n}
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T03:28:03.882Z
Question Type: select-all
Function: findDirectivesDynamicGating
Function Size: 1832 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: findDirectivesDynamicGating (TypeScript)\n// Finds directives related to dynamic gating and returns the result or an error.\n\nfunction findDirectivesDynamicGating(\n  directives: Array<t.Directive>,\n  opts: ParsedPluginOptions,\n): Result<\n  {\n    gating: ExternalFunction;\n    directive: t.
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T03:28:05.648Z
Question Type: function-variant
Function: writeChunk
Function Size: 240 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: writeChunk (JavaScript)\n// Writes a chunk of data to the destination's buffer.\n\nexport function writeChunk(\n  destination: Destination,\n  chunk: Chunk | PrecomputedChunk | BinaryChunk,\n): void {\n  destination.buffer += chunk;\n}
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T03:28:07.242Z
Question Type: function-variant
Function: writeChunkAndReturn
Function Size: 293 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: writeChunkAndReturn (JavaScript)\n// Writes a chunk of data to the destination's buffer and returns true.\n\nexport function writeChunkAndReturn(\n  destination: Destination,\n  chunk: Chunk | PrecomputedChunk | BinaryChunk,\n): boolean {\n  destination.buffer += chunk;\n  return true;\n}
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T03:28:07.734Z
Question Type: select-all
Function: writeChunk
Function Size: 253 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: writeChunk (TypeScript)\n// Writes a chunk of data to the specified destination.\n\nexport function writeChunk(\n  destination: Destination,\n  chunk: Chunk | PrecomputedChunk | BinaryChunk,\n): void {\n  writeChunkAndReturn(destination, chunk);\n}
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T03:28:09.421Z
Question Type: order-sequence
Function: startReadingFromStream
Function Size: 795 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: startReadingFromStream (JavaScript)\n// Starts reading from a ReadableStream and processes its chunks.\n\nfunction startReadingFromStream(\n  response: FlightResponse,\n  stream: ReadableStream,\n  onDone: () => void,\n  debugValue: mixed,\n): void {\n  const streamState = createStreamState(resp
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T03:28:10.139Z
Question Type: function-variant
Function: encodeReply
Function Size: 931 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: encodeReply (JavaScript)\n// Encodes a reply value and handles abort signals.\n\nfunction encodeReply(\n  value: ReactServerValue,\n  options?: {temporaryReferences?: TemporaryReferenceSet, signal?: AbortSignal},\n): Promise<\n  string | URLSearchParams | FormData,\n> /* We don't use URLSearchP
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T03:28:10.246Z
Question Type: function-variant
Function: startReadingFromStream
Function Size: 795 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: startReadingFromStream (JavaScript)\n// Starts reading from a ReadableStream and processes its chunks.\n\nfunction startReadingFromStream(\n  response: FlightResponse,\n  stream: ReadableStream,\n  onDone: () => void,\n  debugValue: mixed,\n): void {\n  const streamState = createStreamState(resp
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T03:28:11.182Z
Question Type: function-variant
Function: writeChunkAndReturn
Function Size: 288 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: writeChunkAndReturn (TypeScript)\n// Writes a chunk to the destination and returns a boolean indicating success.\n\nexport function writeChunkAndReturn(\n  destination: Destination,\n  chunk: Chunk | PrecomputedChunk | BinaryChunk,\n): boolean {\n  return destination.push(chunk);\n}
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T03:28:11.360Z
Question Type: select-all
Function: writeChunk
Function Size: 240 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: writeChunk (JavaScript)\n// Writes a chunk of data to the destination's buffer.\n\nexport function writeChunk(\n  destination: Destination,\n  chunk: Chunk | PrecomputedChunk | BinaryChunk,\n): void {\n  destination.buffer += chunk;\n}
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T03:28:13.636Z
Question Type: order-sequence
Function: writeChunkAndReturn
Function Size: 288 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: writeChunkAndReturn (TypeScript)\n// Writes a chunk to the destination and returns a boolean indicating success.\n\nexport function writeChunkAndReturn(\n  destination: Destination,\n  chunk: Chunk | PrecomputedChunk | BinaryChunk,\n): boolean {\n  return destination.push(chunk);\n}
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T03:28:14.793Z
Question Type: function-variant
Function: writeChunkAndReturn
Function Size: 288 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: writeChunkAndReturn (TypeScript)\n// Writes a chunk to the destination and returns a boolean indicating success.\n\nexport function writeChunkAndReturn(\n  destination: Destination,\n  chunk: Chunk | PrecomputedChunk | BinaryChunk,\n): boolean {\n  return destination.push(chunk);\n}
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T03:28:16.408Z
Question Type: function-variant
Function: createFromReadableStream
Function Size: 872 characters
Questions Generated: 0
Repository: Unknown
Function Preview: // Function: createFromReadableStream (JavaScript)\n// Creates a response from a ReadableStream and handles debugging.\n\nfunction createFromReadableStream<T>(\n  stream: ReadableStream,\n  options?: Options,\n): Thenable<T> {\n  const response: FlightResponse = createResponseFromOptions(options);\n  if (\n 
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T03:28:17.438Z
Question Type: function-variant
Function: logError
Function Size: 870 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: logError (TypeScript)\n// Logs errors to the provided logger with context information.\n\nfunction logError(\n  err: unknown,\n  context: {\n    opts: PluginOptions;\n    filename: string | null;\n  },\n  fnLoc: t.SourceLocation | null,\n): void {\n  if (context.opts.logger) {\n    if (err instance
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T03:28:17.867Z
Question Type: multiple-choice
Function: startReadingFromStream
Function Size: 795 characters
Questions Generated: 3
Repository: Unknown
Function Preview: // Function: startReadingFromStream (JavaScript)\n// Starts reading from a ReadableStream and processes its chunks.\n\nfunction startReadingFromStream(\n  response: FlightResponse,\n  stream: ReadableStream,\n  onDone: () => void,\n  debugValue: mixed,\n): void {\n  const streamState = createStreamState(resp
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T03:28:18.808Z
Question Type: select-all
Function: logError
Function Size: 870 characters
Questions Generated: 0
Repository: Unknown
Function Preview: // Function: logError (TypeScript)\n// Logs errors to the provided logger with context information.\n\nfunction logError(\n  err: unknown,\n  context: {\n    opts: PluginOptions;\n    filename: string | null;\n  },\n  fnLoc: t.SourceLocation | null,\n): void {\n  if (context.opts.logger) {\n    if (err instance
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T03:28:19.425Z
Question Type: function-variant
Function: writeChunk
Function Size: 253 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: writeChunk (TypeScript)\n// Writes a chunk of data to the specified destination.\n\nexport function writeChunk(\n  destination: Destination,\n  chunk: Chunk | PrecomputedChunk | BinaryChunk,\n): void {\n  writeChunkAndReturn(destination, chunk);\n}
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T03:28:20.197Z
Question Type: order-sequence
Function: encodeReply
Function Size: 931 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: encodeReply (JavaScript)\n// Encodes a reply value and handles abort signals.\n\nfunction encodeReply(\n  value: ReactServerValue,\n  options?: {temporaryReferences?: TemporaryReferenceSet, signal?: AbortSignal},\n): Promise<\n  string | URLSearchParams | FormData,\n> /* We don't use URLSearchP
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T03:28:21.815Z
Question Type: select-all
Function: writeChunk
Function Size: 253 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: writeChunk (TypeScript)\n// Writes a chunk of data to the specified destination.\n\nexport function writeChunk(\n  destination: Destination,\n  chunk: Chunk | PrecomputedChunk | BinaryChunk,\n): void {\n  writeChunkAndReturn(destination, chunk);\n}
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T03:28:23.040Z
Question Type: order-sequence
Function: writeChunk
Function Size: 253 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: writeChunk (TypeScript)\n// Writes a chunk of data to the specified destination.\n\nexport function writeChunk(\n  destination: Destination,\n  chunk: Chunk | PrecomputedChunk | BinaryChunk,\n): void {\n  writeChunkAndReturn(destination, chunk);\n}
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T03:28:24.359Z
Question Type: true-false
Function: createFromReadableStream
Function Size: 872 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: createFromReadableStream (JavaScript)\n// Creates a response from a ReadableStream and handles debugging.\n\nfunction createFromReadableStream<T>(\n  stream: ReadableStream,\n  options?: Options,\n): Thenable<T> {\n  const response: FlightResponse = createResponseFromOptions(options);\n  if (\n 
================================================================================


=== SESSION SUMMARY ===
Session ID: session-1760546051744
Repository: Unknown
Total Questions Generated: 9
Total Chunks Processed: 4
Ended: 2025-10-16T03:28:24.413Z
================================================================================


--- QUESTION GENERATION ---
Timestamp: 2025-10-16T03:28:24.691Z
Question Type: function-variant
Function: findDirectiveDisablingMemoization
Function Size: 603 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: findDirectiveDisablingMemoization (TypeScript)\n// Finds a directive that disables memoization from the provided directives.\n\nexport function findDirectiveDisablingMemoization(\n  directives: Array<t.Directive>,\n  {customOptOutDirectives}: PluginOptions,\n): t.Directive | null {\n  if (cust
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T03:28:24.830Z
Question Type: true-false
Function: writeChunkAndReturn
Function Size: 288 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: writeChunkAndReturn (TypeScript)\n// Writes a chunk to the destination and returns a boolean indicating success.\n\nexport function writeChunkAndReturn(\n  destination: Destination,\n  chunk: Chunk | PrecomputedChunk | BinaryChunk,\n): boolean {\n  return destination.push(chunk);\n}
================================================================================


=== SESSION SUMMARY ===
Session ID: session-1760546051744
Repository: Unknown
Total Questions Generated: 13
Total Chunks Processed: 2
Ended: 2025-10-16T03:28:24.848Z
================================================================================


--- QUESTION GENERATION ---
Timestamp: 2025-10-16T03:28:27.673Z
Question Type: select-all
Function: tryFindDirectiveEnablingMemoization
Function Size: 680 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: tryFindDirectiveEnablingMemoization (TypeScript)\n// Attempts to find a directive that enables memoization from the provided directives.\n\nexport function tryFindDirectiveEnablingMemoization(\n  directives: Array<t.Directive>,\n  opts: ParsedPluginOptions,\n): Result<t.Directive | null, Comp
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T03:28:30.769Z
Question Type: true-false
Function: writeChunkAndReturn
Function Size: 293 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: writeChunkAndReturn (JavaScript)\n// Writes a chunk of data to the destination's buffer and returns true.\n\nexport function writeChunkAndReturn(\n  destination: Destination,\n  chunk: Chunk | PrecomputedChunk | BinaryChunk,\n): boolean {\n  destination.buffer += chunk;\n  return true;\n}
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T03:28:34.372Z
Question Type: order-sequence
Function: closeWithError
Function Size: 277 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: closeWithError (JavaScript)\n// Closes the destination with an error, marking it as done and fatal.\n\nexport function closeWithError(destination: Destination, error: mixed): void {\n  destination.done = true;\n  destination.fatal = true;\n  destination.error = error;\n}
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T03:28:37.806Z
Question Type: select-all
Function: closeWithError
Function Size: 277 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: closeWithError (JavaScript)\n// Closes the destination with an error, marking it as done and fatal.\n\nexport function closeWithError(destination: Destination, error: mixed): void {\n  destination.done = true;\n  destination.fatal = true;\n  destination.error = error;\n}
================================================================================


=== SESSION SUMMARY ===
Session ID: session-1760546051744
Repository: Unknown
Total Questions Generated: 14
Total Chunks Processed: 7
Ended: 2025-10-16T03:28:41.738Z
================================================================================


--- FUNCTION EXTRACTION ---
Timestamp: 2025-10-16T03:28:46.278Z
File: [2 files: nothing yielded for bad markup, did in the future we'd probably want to have this be in sync with scheduleWork]
Functions Extracted: 2


Function 1: writeChunk
Language: TypeScript
Lines: 5
Full Code:
--------------------------------------------------------------------------------
export function writeChunk(
  destination: Destination,
  chunk: Chunk | PrecomputedChunk | BinaryChunk,
): void {
  writeChunkAndReturn(destination, chunk);
}
--------------------------------------------------------------------------------


Function 2: writeChunkAndReturn
Language: TypeScript
Lines: 5
Full Code:
--------------------------------------------------------------------------------
export function writeChunkAndReturn(
  destination: Destination,
  chunk: Chunk | PrecomputedChunk | BinaryChunk,
): boolean {
  return destination.push(chunk);
}
--------------------------------------------------------------------------------

================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T03:28:51.149Z
Question Type: multiple-choice
Function: writeChunk
Function Size: 253 characters
Questions Generated: 0
Repository: Unknown
Function Preview: // Function: writeChunk (TypeScript)\n// Writes a chunk of data to the specified destination.\n\nexport function writeChunk(\n  destination: Destination,\n  chunk: Chunk | PrecomputedChunk | BinaryChunk,\n): void {\n  writeChunkAndReturn(destination, chunk);\n}
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T03:28:52.115Z
Question Type: select-all
Function: writeChunk
Function Size: 253 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: writeChunk (TypeScript)\n// Writes a chunk of data to the specified destination.\n\nexport function writeChunk(\n  destination: Destination,\n  chunk: Chunk | PrecomputedChunk | BinaryChunk,\n): void {\n  writeChunkAndReturn(destination, chunk);\n}
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T03:28:54.487Z
Question Type: true-false
Function: writeChunk
Function Size: 253 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: writeChunk (TypeScript)\n// Writes a chunk of data to the specified destination.\n\nexport function writeChunk(\n  destination: Destination,\n  chunk: Chunk | PrecomputedChunk | BinaryChunk,\n): void {\n  writeChunkAndReturn(destination, chunk);\n}
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T03:28:54.674Z
Question Type: function-variant
Function: writeChunkAndReturn
Function Size: 288 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: writeChunkAndReturn (TypeScript)\n// Writes a chunk to the destination and returns a boolean indicating success.\n\nexport function writeChunkAndReturn(\n  destination: Destination,\n  chunk: Chunk | PrecomputedChunk | BinaryChunk,\n): boolean {\n  return destination.push(chunk);\n}
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T03:28:55.614Z
Question Type: order-sequence
Function: writeChunk
Function Size: 253 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: writeChunk (TypeScript)\n// Writes a chunk of data to the specified destination.\n\nexport function writeChunk(\n  destination: Destination,\n  chunk: Chunk | PrecomputedChunk | BinaryChunk,\n): void {\n  writeChunkAndReturn(destination, chunk);\n}
================================================================================


=== SESSION SUMMARY ===
Session ID: session-1760546051744
Repository: Unknown
Total Questions Generated: 4
Total Chunks Processed: 2
Ended: 2025-10-16T03:28:55.663Z
================================================================================


--- FUNCTION EXTRACTION ---
Timestamp: 2025-10-16T03:29:43.567Z
File: Renable error overlay
Functions Extracted: 6


Function 1: RendererResult
Language: JavaScript
Lines: 21
Full Code:
--------------------------------------------------------------------------------
function RendererResult({
  result,
  canonicalResult,
  defaultValue,
  canonicalDefaultValue,
  didWarn,
  didError,
  ssrHasSameBehavior,
  ssrHasSameBehaviorExceptWarnings,
}) {
  let backgroundColor;
  if (didError) {
    backgroundColor = errorColor;
  } else if (didWarn) {
    backgroundColor = warnColor;
  } else if (canonicalResult !== canonicalDefaultValue) {
    backgroundColor = 'cyan';
  } else {
    backgroundColor = successColor;
  }

  let style = {
    display: 'flex',
    alignItems: 'center',
    position: 'absolute',
    height: '100%',
    width: '100%',
    backgroundColor,
  };

  if (!ssrHasSameBehavior) {
    const color = ssrHasSameBehaviorExceptWarnings ? 'gray' : 'magenta';
    style.border = `3px dotted ${color}`;
  }

  return <div css={style}>{canonicalResult}</div>;
}
--------------------------------------------------------------------------------


Function 2: ResultPopover
Language: JavaScript
Lines: 11
Full Code:
--------------------------------------------------------------------------------
function ResultPopover(props) {
  return (
    <pre
      css={{
        padding: '1em',
        minWidth: '25em',
      }}>
      {JSON.stringify(
        {
          reactStable: props.reactStable,
          reactNext: props.reactNext,
          hasSameBehavior: props.hasSameBehavior,
        },
        null,
        2
      )}
    </pre>
  );
}
--------------------------------------------------------------------------------


Function 3: CellContent
Language: JavaScript
Lines: 29
Full Code:
--------------------------------------------------------------------------------
function CellContent(props) {
  const {
    columnIndex,
    rowIndex,
    attributesInSortedOrder,
    completedHashes,
    toggleAttribute,
    table,
  } = props;
  const attribute = attributesInSortedOrder[rowIndex - 1];
  const type = types[columnIndex - 1];

  if (columnIndex === 0) {
    if (rowIndex === 0) {
      return null;
    }
    const row = table.get(attribute);
    const rowPatternHash = row.rowPatternHash;
    return (
      <RowHeader
        checked={completedHashes.has(rowPatternHash)}
        onChange={() => toggleAttribute(rowPatternHash)}>
        {row.hasSameBehaviorForAll ? (
          attribute.name
        ) : (
          <b css={{color: 'purple'}}>{attribute.name}</b>
        )}
      </RowHeader>
    );
  }

  if (rowIndex === 0) {
    return <ColumnHeader>{type.name}</ColumnHeader>;
  }

  const row = table.get(attribute);
  const result = row.results.get(type.name);

  return <Result {...result} />;
}
--------------------------------------------------------------------------------


Function 4: saveToLocalStorage
Language: JavaScript
Lines: 5
Full Code:
--------------------------------------------------------------------------------
function saveToLocalStorage(completedHashes) {
  const str = JSON.stringify([...completedHashes]);
  localStorage.setItem('completedHashes', str);
}
--------------------------------------------------------------------------------


Function 5: restoreFromLocalStorage
Language: JavaScript
Lines: 9
Full Code:
--------------------------------------------------------------------------------
function restoreFromLocalStorage() {
  const str = localStorage.getItem('completedHashes');
  if (str) {
    const completedHashes = new Set(JSON.parse(str));
    return completedHashes;
  }
  return new Set();
}
--------------------------------------------------------------------------------


Function 6: toggleAttribute
Language: JavaScript
Lines: 7
Full Code:
--------------------------------------------------------------------------------
toggleAttribute = rowPatternHash => {
    const completedHashes = new Set(this.state.completedHashes);
    if (completedHashes.has(rowPatternHash)) {
      completedHashes.delete(rowPatternHash);
    } else {
      completedHashes.add(rowPatternHash);
    }
    this.setState({completedHashes}, () => saveToLocalStorage(completedHashes));
  };
--------------------------------------------------------------------------------

================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T03:29:50.916Z
Question Type: select-all
Function: ResultPopover
Function Size: 464 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: ResultPopover (JavaScript)\n// Displays a popover with JSON representation of the comparison results.\n\nfunction ResultPopover(props) {\n  return (\n    <pre\n      css={{\n        padding: '1em',\n        minWidth: '25em',\n      }}>\n      {JSON.stringify(\n        {\n          reactStable: prop
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T03:29:54.349Z
Question Type: select-all
Function: CellContent
Function Size: 1076 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: CellContent (JavaScript)\n// Renders the content of a cell based on its position in the table and the data provided.\n\nfunction CellContent(props) {\n  const {\n    columnIndex,\n    rowIndex,\n    attributesInSortedOrder,\n    completedHashes,\n    toggleAttribute,\n    table,\n  } = props;\n  co
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T03:29:55.020Z
Question Type: function-variant
Function: toggleAttribute
Function Size: 479 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: toggleAttribute (JavaScript)\n// Toggles the completion state of an attribute based on its hash and updates local storage.\n\ntoggleAttribute = rowPatternHash => {\n    const completedHashes = new Set(this.state.completedHashes);\n    if (completedHashes.has(rowPatternHash)) {\n      complete
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T03:29:55.166Z
Question Type: select-all
Function: RendererResult
Function Size: 948 characters
Questions Generated: 0
Repository: Unknown
Function Preview: // Function: RendererResult (JavaScript)\n// Renders the result of a comparison with a background color based on the error/warning state.\n\nfunction RendererResult({\n  result,\n  canonicalResult,\n  defaultValue,\n  canonicalDefaultValue,\n  didWarn,\n  didError,\n  ssrHasSameBehavior,\n  ssrHasSameBehaviorE
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T03:30:02.492Z
Question Type: true-false
Function: CellContent
Function Size: 1076 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: CellContent (JavaScript)\n// Renders the content of a cell based on its position in the table and the data provided.\n\nfunction CellContent(props) {\n  const {\n    columnIndex,\n    rowIndex,\n    attributesInSortedOrder,\n    completedHashes,\n    toggleAttribute,\n    table,\n  } = props;\n  co
================================================================================


=== SESSION SUMMARY ===
Session ID: session-1760546051744
Repository: Unknown
Total Questions Generated: 4
Total Chunks Processed: 6
Ended: 2025-10-16T03:30:02.531Z
================================================================================


--- FUNCTION EXTRACTION ---
Timestamp: 2025-10-16T04:16:06.139Z
File: }
Functions Extracted: 3


Function 1: POST
Language: JavaScript
Lines: 8
Full Code:
--------------------------------------------------------------------------------
async function POST(formData) {
    const boundAction = await ReactServerDOMServer.decodeAction(
      formData,
      webpackServerMap,
    );
    const returnValue = boundAction();
    const formState = await ReactServerDOMServer.decodeFormState(
      await returnValue,
      formData,
      webpackServerMap,
    );
    return {returnValue, formState};
  }
--------------------------------------------------------------------------------


Function 2: submit
Language: JavaScript
Lines: 34
Full Code:
--------------------------------------------------------------------------------
function submit(submitter) {
    const form = submitter.form || submitter;
    if (!submitter.form) {
      submitter = undefined;
    }
    const submitEvent = new Event('submit', {bubbles: true, cancelable: true});
    submitEvent.submitter = submitter;
    const returnValue = form.dispatchEvent(submitEvent);
    if (!returnValue) {
      return;
    }
    const action =
      (submitter && submitter.getAttribute('formaction')) || form.action;
    if (!/\s*javascript:/i.test(action)) {
      const method = (submitter && submitter.formMethod) || form.method;
      const encType = (submitter && submitter.formEnctype) || form.enctype;
      if (method === 'post' && encType === 'multipart/form-data') {
        let formData;
        if (submitter) {
          const temp = document.createElement('input');
          temp.name = submitter.name;
          temp.value = submitter.value;
          submitter.parentNode.insertBefore(temp, submitter);
          formData = new FormData(form);
          temp.parentNode.removeChild(temp);
        } else {
          formData = new FormData(form);
        }
        return POST(formData);
      }
      throw new Error('Navigate to: ' + action);
    }
  }
--------------------------------------------------------------------------------


Function 3: readIntoContainer
Language: JavaScript
Lines: 12
Full Code:
--------------------------------------------------------------------------------
async function readIntoContainer(stream) {
    const reader = stream.getReader();
    let result = '';
    while (true) {
      const {done, value} = await reader.read();
      if (done) {
        break;
      }
      result += Buffer.from(value).toString('utf8');
    }
    const temp = document.createElement('div');
    temp.innerHTML = result;
    insertNodesAndExecuteScripts(temp, container, null);
  }
--------------------------------------------------------------------------------

================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T04:16:14.773Z
Question Type: select-all
Function: POST
Function Size: 460 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: POST (JavaScript)\n// Handles the POST request by decoding the action and form state.\n\nasync function POST(formData) {\n    const boundAction = await ReactServerDOMServer.decodeAction(\n      formData,\n      webpackServerMap,\n    );\n    const returnValue = boundAction();\n    const formStat
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T04:16:15.258Z
Question Type: true-false
Function: submit
Function Size: 1308 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: submit (JavaScript)\n// Submits a form, handling different submission methods and actions.\n\nfunction submit(submitter) {\n    const form = submitter.form || submitter;\n    if (!submitter.form) {\n      submitter = undefined;\n    }\n    const submitEvent = new Event('submit', {bubbles: true,
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T04:16:17.277Z
Question Type: select-all
Function: submit
Function Size: 1308 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: submit (JavaScript)\n// Submits a form, handling different submission methods and actions.\n\nfunction submit(submitter) {\n    const form = submitter.form || submitter;\n    if (!submitter.form) {\n      submitter = undefined;\n    }\n    const submitEvent = new Event('submit', {bubbles: true,
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T04:16:17.628Z
Question Type: order-sequence
Function: POST
Function Size: 460 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: POST (JavaScript)\n// Handles the POST request by decoding the action and form state.\n\nasync function POST(formData) {\n    const boundAction = await ReactServerDOMServer.decodeAction(\n      formData,\n      webpackServerMap,\n    );\n    const returnValue = boundAction();\n    const formStat
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T04:16:22.913Z
Question Type: multiple-choice
Function: POST
Function Size: 460 characters
Questions Generated: 3
Repository: Unknown
Function Preview: // Function: POST (JavaScript)\n// Handles the POST request by decoding the action and form state.\n\nasync function POST(formData) {\n    const boundAction = await ReactServerDOMServer.decodeAction(\n      formData,\n      webpackServerMap,\n    );\n    const returnValue = boundAction();\n    const formStat
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T04:16:23.399Z
Question Type: select-all
Function: readIntoContainer
Function Size: 513 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: readIntoContainer (JavaScript)\n// Reads a stream and inserts its content into a container.\n\nasync function readIntoContainer(stream) {\n    const reader = stream.getReader();\n    let result = '';\n    while (true) {\n      const {done, value} = await reader.read();\n      if (done) {\n      
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T04:16:24.515Z
Question Type: order-sequence
Function: submit
Function Size: 1308 characters
Questions Generated: 0
Repository: Unknown
Function Preview: // Function: submit (JavaScript)\n// Submits a form, handling different submission methods and actions.\n\nfunction submit(submitter) {\n    const form = submitter.form || submitter;\n    if (!submitter.form) {\n      submitter = undefined;\n    }\n    const submitEvent = new Event('submit', {bubbles: true,
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T04:16:26.998Z
Question Type: true-false
Function: readIntoContainer
Function Size: 513 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: readIntoContainer (JavaScript)\n// Reads a stream and inserts its content into a container.\n\nasync function readIntoContainer(stream) {\n    const reader = stream.getReader();\n    let result = '';\n    while (true) {\n      const {done, value} = await reader.read();\n      if (done) {\n      
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T04:16:32.642Z
Question Type: function-variant
Function: POST
Function Size: 460 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: POST (JavaScript)\n// Handles the POST request by decoding the action and form state.\n\nasync function POST(formData) {\n    const boundAction = await ReactServerDOMServer.decodeAction(\n      formData,\n      webpackServerMap,\n    );\n    const returnValue = boundAction();\n    const formStat
================================================================================


=== SESSION SUMMARY ===
Session ID: session-1760546051744
Repository: Unknown
Total Questions Generated: 10
Total Chunks Processed: 3
Ended: 2025-10-16T04:16:32.799Z
================================================================================


--- FUNCTION EXTRACTION ---
Timestamp: 2025-10-16T04:16:48.261Z
File: invariant for a missing parent, which is super confusing.
Functions Extracted: 5


Function 1: getFiberCurrentPropsFromNode
Language: TypeScript
Lines: 6
Full Code:
--------------------------------------------------------------------------------
export function getFiberCurrentPropsFromNode(
  node:
    | Container
    | Instance
    | TextInstance
    | SuspenseInstance
    | ActivityInstance,
): Props {
  return (node: any)[internalPropsKey] || null;
}
--------------------------------------------------------------------------------


Function 2: getEventListenerSet
Language: TypeScript
Lines: 7
Full Code:
--------------------------------------------------------------------------------
export function getEventListenerSet(node: EventTarget): Set<string> {
  let elementListenerSet = (node: any)[internalEventHandlersKey];
  if (elementListenerSet === undefined) {
    elementListenerSet = (node: any)[internalEventHandlersKey] = new Set();
  }
  return elementListenerSet;
}
--------------------------------------------------------------------------------


Function 3: setEventHandlerListeners
Language: TypeScript
Lines: 5
Full Code:
--------------------------------------------------------------------------------
export function setEventHandlerListeners(
  scope: EventTarget | ReactScopeInstance,
  listeners: Set<ReactDOMEventHandleListener>,
): void {
  (scope: any)[internalEventHandlerListenersKey] = listeners;
}
--------------------------------------------------------------------------------


Function 4: addEventHandleToTarget
Language: TypeScript
Lines: 8
Full Code:
--------------------------------------------------------------------------------
export function addEventHandleToTarget(
  target: EventTarget | ReactScopeInstance,
  eventHandle: ReactDOMEventHandle,
): void {
  let eventHandles = (target: any)[internalEventHandlesSetKey];
  if (eventHandles === undefined) {
    eventHandles = (target: any)[internalEventHandlesSetKey] = new Set();
  }
  eventHandles.add(eventHandle);
}
--------------------------------------------------------------------------------


Function 5: getResourcesFromRoot
Language: TypeScript
Lines: 10
Full Code:
--------------------------------------------------------------------------------
export function getResourcesFromRoot(root: HoistableRoot): RootResources {
  let resources = (root: any)[internalRootNodeResourcesKey];
  if (!resources) {
    resources = (root: any)[internalRootNodeResourcesKey] = {
      hoistableStyles: new Map(),
      hoistableScripts: new Map(),
    };
  }
  return resources;
}
--------------------------------------------------------------------------------

================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T04:16:54.833Z
Question Type: multiple-choice
Function: getFiberCurrentPropsFromNode
Function Size: 322 characters
Questions Generated: 0
Repository: Unknown
Function Preview: // Function: getFiberCurrentPropsFromNode (TypeScript)\n// Retrieves the current properties from a fiber node.\n\nexport function getFiberCurrentPropsFromNode(\n  node:\n    | Container\n    | Instance\n    | TextInstance\n    | SuspenseInstance\n    | ActivityInstance,\n): Props {\n  return (node: any)[intern
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T04:16:55.300Z
Question Type: select-all
Function: getResourcesFromRoot
Function Size: 410 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: getResourcesFromRoot (TypeScript)\n// Retrieves resources from the root node.\n\nexport function getResourcesFromRoot(root: HoistableRoot): RootResources {\n  let resources = (root: any)[internalRootNodeResourcesKey];\n  if (!resources) {\n    resources = (root: any)[internalRootNodeResources
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T04:16:55.560Z
Question Type: select-all
Function: getEventListenerSet
Function Size: 393 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: getEventListenerSet (TypeScript)\n// Retrieves the set of event listeners for a given node.\n\nexport function getEventListenerSet(node: EventTarget): Set<string> {\n  let elementListenerSet = (node: any)[internalEventHandlersKey];\n  if (elementListenerSet === undefined) {\n    elementListen
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T04:17:02.152Z
Question Type: select-all
Function: addEventHandleToTarget
Function Size: 431 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: addEventHandleToTarget (TypeScript)\n// Adds an event handle to the target.\n\nexport function addEventHandleToTarget(\n  target: EventTarget | ReactScopeInstance,\n  eventHandle: ReactDOMEventHandle,\n): void {\n  let eventHandles = (target: any)[internalEventHandlesSetKey];\n  if (eventHandle
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T04:17:03.243Z
Question Type: select-all
Function: getFiberCurrentPropsFromNode
Function Size: 322 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: getFiberCurrentPropsFromNode (TypeScript)\n// Retrieves the current properties from a fiber node.\n\nexport function getFiberCurrentPropsFromNode(\n  node:\n    | Container\n    | Instance\n    | TextInstance\n    | SuspenseInstance\n    | ActivityInstance,\n): Props {\n  return (node: any)[intern
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T04:17:04.988Z
Question Type: function-variant
Function: addEventHandleToTarget
Function Size: 431 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: addEventHandleToTarget (TypeScript)\n// Adds an event handle to the target.\n\nexport function addEventHandleToTarget(\n  target: EventTarget | ReactScopeInstance,\n  eventHandle: ReactDOMEventHandle,\n): void {\n  let eventHandles = (target: any)[internalEventHandlesSetKey];\n  if (eventHandle
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T04:17:09.663Z
Question Type: function-variant
Function: getResourcesFromRoot
Function Size: 410 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: getResourcesFromRoot (TypeScript)\n// Retrieves resources from the root node.\n\nexport function getResourcesFromRoot(root: HoistableRoot): RootResources {\n  let resources = (root: any)[internalRootNodeResourcesKey];\n  if (!resources) {\n    resources = (root: any)[internalRootNodeResources
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T04:17:10.574Z
Question Type: select-all
Function: setEventHandlerListeners
Function Size: 312 characters
Questions Generated: 0
Repository: Unknown
Function Preview: // Function: setEventHandlerListeners (TypeScript)\n// Sets the event handler listeners for a given scope.\n\nexport function setEventHandlerListeners(\n  scope: EventTarget | ReactScopeInstance,\n  listeners: Set<ReactDOMEventHandleListener>,\n): void {\n  (scope: any)[internalEventHandlerListenersKey] = 
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T04:17:14.867Z
Question Type: true-false
Function: getResourcesFromRoot
Function Size: 410 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: getResourcesFromRoot (TypeScript)\n// Retrieves resources from the root node.\n\nexport function getResourcesFromRoot(root: HoistableRoot): RootResources {\n  let resources = (root: any)[internalRootNodeResourcesKey];\n  if (!resources) {\n    resources = (root: any)[internalRootNodeResources
================================================================================


=== SESSION SUMMARY ===
Session ID: session-1760546051744
Repository: Unknown
Total Questions Generated: 7
Total Chunks Processed: 5
Ended: 2025-10-16T04:17:14.899Z
================================================================================


--- FUNCTION EXTRACTION ---
Timestamp: 2025-10-16T04:18:06.000Z
File: }
Functions Extracted: 5


Function 1: POST
Language: JavaScript
Lines: 8
Full Code:
--------------------------------------------------------------------------------
async function POST(formData) {
    const boundAction = await ReactServerDOMServer.decodeAction(
      formData,
      webpackServerMap,
    );
    const returnValue = boundAction();
    const formState = await ReactServerDOMServer.decodeFormState(
      await returnValue,
      formData,
      webpackServerMap,
    );
    return {returnValue, formState};
  }
--------------------------------------------------------------------------------


Function 2: submit
Language: JavaScript
Lines: 36
Full Code:
--------------------------------------------------------------------------------
function submit(submitter) {
    const form = submitter.form || submitter;
    if (!submitter.form) {
      submitter = undefined;
    }
    const submitEvent = new Event('submit', {bubbles: true, cancelable: true});
    submitEvent.submitter = submitter;
    const returnValue = form.dispatchEvent(submitEvent);
    if (!returnValue) {
      return;
    }
    const action =
      (submitter && submitter.getAttribute('formaction')) || form.action;
    if (!/\s*javascript:/i.test(action)) {
      const method = (submitter && submitter.formMethod) || form.method;
      const encType = (submitter && submitter.formEnctype) || form.enctype;
      if (method === 'post' && encType === 'multipart/form-data') {
        let formData;
        if (submitter) {
          const temp = document.createElement('input');
          temp.name = submitter.name;
          temp.value = submitter.value;
          submitter.parentNode.insertBefore(temp, submitter);
          formData = new FormData(form);
          temp.parentNode.removeChild(temp);
        } else {
          formData = new FormData(form);
        }
        return POST(formData);
      }
      throw new Error('Navigate to: ' + action);
    }
  }
--------------------------------------------------------------------------------


Function 3: readIntoContainer
Language: JavaScript
Lines: 12
Full Code:
--------------------------------------------------------------------------------
async function readIntoContainer(stream) {
    const reader = stream.getReader();
    let result = '';
    while (true) {
      const {done, value} = await reader.read();
      if (done) {
        break;
      }
      result += Buffer.from(value).toString('utf8');
    }
    const temp = document.createElement('div');
    temp.innerHTML = result;
    insertNodesAndExecuteScripts(temp, container, null);
  }
--------------------------------------------------------------------------------


Function 4: useActionState
Language: JavaScript
Lines: 36
Full Code:
--------------------------------------------------------------------------------
it("useActionState's dispatch binds the initial state to the provided action", async () => {
    const serverAction = serverExports(
      async function action(prevState, formData) {
        return {
          count:
            prevState.count + parseInt(formData.get('incrementAmount'), 10),
        };
      },
    );

    const initialState = {count: 1};
    function Client({action}) {
      const [state, dispatch, isPending] = useActionState(action, initialState);
      return (
        <form action={dispatch}>
          <span>{isPending ? 'Pending...' : ''}</span>
          <span>Count: {state.count}</span>
          <input type="text" name="incrementAmount" defaultValue="5" />
        </form>
      );
    }

    const ClientRef = await clientExports(Client);

    const rscStream = ReactServerDOMServer.renderToReadableStream(
      <ClientRef action={serverAction} />, 
      webpackMap,
    );
    const response = ReactServerDOMClient.createFromReadableStream(rscStream, {
      serverConsumerManifest: {
        moduleMap: null,
        moduleLoading: null,
      },
    });
    const ssrStream = await ReactDOMServer.renderToReadableStream(response);
    await readIntoContainer(ssrStream);

    const form = container.getElementsByTagName('form')[0];
    const pendingSpan = container.getElementsByTagName('span')[0];
    const stateSpan = container.getElementsByTagName('span')[1];
    expect(pendingSpan.textContent).toBe('');
    expect(stateSpan.textContent).toBe('Count: 1');

    const {returnValue} = await submit(form);
    expect(await returnValue).toEqual({count: 6});
  });
--------------------------------------------------------------------------------


Function 5: useActionStateReuse
Language: JavaScript
Lines: 36
Full Code:
--------------------------------------------------------------------------------
it('useActionState can reuse state during MPA form submission', async () => {
    const serverAction = serverExports(
      async function action(prevState, formData) {
        return prevState + 1;
      },
    );

    function Form({action}) {
      const [count, dispatch, isPending] = useActionState(action, 1);
      return (
        <form action={dispatch}>
          {isPending ? 'Pending...' : ''}
          {count}
        </form>
      );
    }

    function Client({action}) {
      return (
        <div>
          <Form action={action} />
          <Form action={action} />
          <Form action={action} />
        </div>
      );
    }

    const ClientRef = await clientExports(Client);

    const rscStream = ReactServerDOMServer.renderToReadableStream(
      <ClientRef action={serverAction} />, 
      webpackMap,
    );
    const response = ReactServerDOMClient.createFromReadableStream(rscStream, {
      serverConsumerManifest: {
        moduleMap: null,
        moduleLoading: null,
      },
    });
    const ssrStream = await ReactDOMServer.renderToReadableStream(response);
    await readIntoContainer(ssrStream);

    expect(container.textContent).toBe('111');
  });
--------------------------------------------------------------------------------

================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T04:18:17.911Z
Question Type: function-variant
Function: useActionState
Function Size: 1752 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: useActionState (JavaScript)\n// Tests the useActionState hook to ensure it binds the initial state to the provided action correctly.\n\nit("useActionState's dispatch binds the initial state to the provided action", async () => {\n    const serverAction = serverExports(\n      async function 
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T04:18:18.350Z
Question Type: select-all
Function: submit
Function Size: 1343 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: submit (JavaScript)\n// Submits a form, handling the submit event and processing the form data based on the action specified.\n\nfunction submit(submitter) {\n    const form = submitter.form || submitter;\n    if (!submitter.form) {\n      submitter = undefined;\n    }\n    const submitEvent = 
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T04:18:18.890Z
Question Type: function-variant
Function: POST
Function Size: 488 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: POST (JavaScript)\n// Handles the POST request by decoding the action and form state from the provided form data.\n\nasync function POST(formData) {\n    const boundAction = await ReactServerDOMServer.decodeAction(\n      formData,\n      webpackServerMap,\n    );\n    const returnValue = bound
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T04:18:19.703Z
Question Type: select-all
Function: useActionState
Function Size: 1752 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: useActionState (JavaScript)\n// Tests the useActionState hook to ensure it binds the initial state to the provided action correctly.\n\nit("useActionState's dispatch binds the initial state to the provided action", async () => {\n    const serverAction = serverExports(\n      async function 
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T04:18:27.240Z
Question Type: select-all
Function: readIntoContainer
Function Size: 557 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: readIntoContainer (JavaScript)\n// Reads a stream and inserts its content into a container, executing any scripts found in the content.\n\nasync function readIntoContainer(stream) {\n    const reader = stream.getReader();\n    let result = '';\n    while (true) {\n      const {done, value} = a
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T04:18:28.213Z
Question Type: order-sequence
Function: readIntoContainer
Function Size: 557 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: readIntoContainer (JavaScript)\n// Reads a stream and inserts its content into a container, executing any scripts found in the content.\n\nasync function readIntoContainer(stream) {\n    const reader = stream.getReader();\n    let result = '';\n    while (true) {\n      const {done, value} = a
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T04:18:29.353Z
Question Type: order-sequence
Function: useActionState
Function Size: 1752 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: useActionState (JavaScript)\n// Tests the useActionState hook to ensure it binds the initial state to the provided action correctly.\n\nit("useActionState's dispatch binds the initial state to the provided action", async () => {\n    const serverAction = serverExports(\n      async function 
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T04:18:33.185Z
Question Type: multiple-choice
Function: submit
Function Size: 1343 characters
Questions Generated: 3
Repository: Unknown
Function Preview: // Function: submit (JavaScript)\n// Submits a form, handling the submit event and processing the form data based on the action specified.\n\nfunction submit(submitter) {\n    const form = submitter.form || submitter;\n    if (!submitter.form) {\n      submitter = undefined;\n    }\n    const submitEvent = 
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T04:18:36.559Z
Question Type: function-variant
Function: readIntoContainer
Function Size: 557 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: readIntoContainer (JavaScript)\n// Reads a stream and inserts its content into a container, executing any scripts found in the content.\n\nasync function readIntoContainer(stream) {\n    const reader = stream.getReader();\n    let result = '';\n    while (true) {\n      const {done, value} = a
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T04:18:36.855Z
Question Type: true-false
Function: useActionStateReuse
Function Size: 1345 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: useActionStateReuse (JavaScript)\n// Tests the reuse of state in multiple forms using the useActionState hook during MPA form submission.\n\nit('useActionState can reuse state during MPA form submission', async () => {\n    const serverAction = serverExports(\n      async function action(pre
================================================================================


=== SESSION SUMMARY ===
Session ID: session-1760546051744
Repository: Unknown
Total Questions Generated: 12
Total Chunks Processed: 5
Ended: 2025-10-16T04:18:37.279Z
================================================================================


--- FUNCTION EXTRACTION ---
Timestamp: 2025-10-16T04:18:44.297Z
File: [3 files: CustomHooks.js, did in the future we'd probably want to have this be in sync with scheduleWork, container.]
Functions Extracted: 2


Function 1: writeChunk
Language: JavaScript
Lines: 5
Full Code:
--------------------------------------------------------------------------------
export function writeChunk(
  destination: Destination,
  chunk: Chunk | PrecomputedChunk | BinaryChunk,
): void {
  writeChunkAndReturn(destination, chunk);
}
--------------------------------------------------------------------------------


Function 2: writeChunkAndReturn
Language: JavaScript
Lines: 5
Full Code:
--------------------------------------------------------------------------------
export function writeChunkAndReturn(
  destination: Destination,
  chunk: Chunk | PrecomputedChunk | BinaryChunk,
): boolean {
  return destination.push(chunk);
}
--------------------------------------------------------------------------------

================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T04:18:49.622Z
Question Type: multiple-choice
Function: writeChunkAndReturn
Function Size: 288 characters
Questions Generated: 3
Repository: Unknown
Function Preview: // Function: writeChunkAndReturn (JavaScript)\n// Writes a chunk to the destination and returns a boolean indicating success.\n\nexport function writeChunkAndReturn(\n  destination: Destination,\n  chunk: Chunk | PrecomputedChunk | BinaryChunk,\n): boolean {\n  return destination.push(chunk);\n}
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T04:18:49.980Z
Question Type: select-all
Function: writeChunkAndReturn
Function Size: 288 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: writeChunkAndReturn (JavaScript)\n// Writes a chunk to the destination and returns a boolean indicating success.\n\nexport function writeChunkAndReturn(\n  destination: Destination,\n  chunk: Chunk | PrecomputedChunk | BinaryChunk,\n): boolean {\n  return destination.push(chunk);\n}
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T04:18:50.388Z
Question Type: select-all
Function: writeChunkAndReturn
Function Size: 288 characters
Questions Generated: 0
Repository: Unknown
Function Preview: // Function: writeChunkAndReturn (JavaScript)\n// Writes a chunk to the destination and returns a boolean indicating success.\n\nexport function writeChunkAndReturn(\n  destination: Destination,\n  chunk: Chunk | PrecomputedChunk | BinaryChunk,\n): boolean {\n  return destination.push(chunk);\n}
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T04:18:56.480Z
Question Type: select-all
Function: writeChunkAndReturn
Function Size: 288 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: writeChunkAndReturn (JavaScript)\n// Writes a chunk to the destination and returns a boolean indicating success.\n\nexport function writeChunkAndReturn(\n  destination: Destination,\n  chunk: Chunk | PrecomputedChunk | BinaryChunk,\n): boolean {\n  return destination.push(chunk);\n}
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T04:18:57.704Z
Question Type: select-all
Function: writeChunk
Function Size: 284 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: writeChunk (JavaScript)\n// Writes a chunk of data to the specified destination by calling writeChunkAndReturn.\n\nexport function writeChunk(\n  destination: Destination,\n  chunk: Chunk | PrecomputedChunk | BinaryChunk,\n): void {\n  writeChunkAndReturn(destination, chunk);\n}
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T04:18:57.980Z
Question Type: order-sequence
Function: writeChunkAndReturn
Function Size: 288 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: writeChunkAndReturn (JavaScript)\n// Writes a chunk to the destination and returns a boolean indicating success.\n\nexport function writeChunkAndReturn(\n  destination: Destination,\n  chunk: Chunk | PrecomputedChunk | BinaryChunk,\n): boolean {\n  return destination.push(chunk);\n}
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T04:19:01.613Z
Question Type: true-false
Function: writeChunkAndReturn
Function Size: 288 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: writeChunkAndReturn (JavaScript)\n// Writes a chunk to the destination and returns a boolean indicating success.\n\nexport function writeChunkAndReturn(\n  destination: Destination,\n  chunk: Chunk | PrecomputedChunk | BinaryChunk,\n): boolean {\n  return destination.push(chunk);\n}
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T04:19:02.808Z
Question Type: function-variant
Function: writeChunkAndReturn
Function Size: 288 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: writeChunkAndReturn (JavaScript)\n// Writes a chunk to the destination and returns a boolean indicating success.\n\nexport function writeChunkAndReturn(\n  destination: Destination,\n  chunk: Chunk | PrecomputedChunk | BinaryChunk,\n): boolean {\n  return destination.push(chunk);\n}
================================================================================


=== SESSION SUMMARY ===
Session ID: session-1760546051744
Repository: Unknown
Total Questions Generated: 9
Total Chunks Processed: 2
Ended: 2025-10-16T04:19:02.901Z
================================================================================


--- FUNCTION EXTRACTION ---
Timestamp: 2025-10-16T04:24:55.163Z
File: Make them available to the helpers.
Functions Extracted: 6


Function 1: UpdateCount
Language: JavaScript
Lines: 6
Full Code:
--------------------------------------------------------------------------------
function UpdateCount({setCount, count, children}) {
        if (count < 3) {
          setCount(c => c + 1);
        }
        return <span>{children}</span>;
      }
--------------------------------------------------------------------------------


Function 2: Counter
Language: JavaScript
Lines: 8
Full Code:
--------------------------------------------------------------------------------
function Counter() {
        const [count, setCount] = useState(0);
        if (count < 12) {
          setCount(c => c + 1);
          setCount(c => c + 1);
          setCount(c => c + 1);
        }
        return <Text text={'Count: ' + count} />;
      }
--------------------------------------------------------------------------------


Function 3: Counter
Language: JavaScript
Lines: 6
Full Code:
--------------------------------------------------------------------------------
function Counter() {
          const [count, setCount] = useState(0);
          if (count < 3) {
            setCount(count + 1);
          }
          return <span>Count: {count}</span>;
        }
--------------------------------------------------------------------------------


Function 4: Counter
Language: JavaScript
Lines: 5
Full Code:
--------------------------------------------------------------------------------
function Counter() {
        const [count] = useReducer(reducer, 0);
        yieldValue('Render: ' + count);
        return <Text text={count} />;
      }
--------------------------------------------------------------------------------


Function 5: Counter
Language: JavaScript
Lines: 5
Full Code:
--------------------------------------------------------------------------------
function Counter() {
        const [count] = useReducer(reducer, 0, c => c + 1);
        yieldValue('Render: ' + count);
        return <Text text={count} />;
      }
--------------------------------------------------------------------------------


Function 6: Counter
Language: JavaScript
Lines: 7
Full Code:
--------------------------------------------------------------------------------
function Counter() {
          const [count, dispatch] = useReducer(reducer, 0);
          if (count < 3) {
            dispatch('increment');
          }
          yieldValue('Render: ' + count);
          return <Text text={count} />;
        }
--------------------------------------------------------------------------------

================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T04:24:59.261Z
Question Type: true-false
Function: Counter
Function Size: 393 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: Counter (JavaScript)\n// A functional component that uses useReducer to manage count state and dispatches an action during rendering.\n\nfunction Counter() {\n          const [count, dispatch] = useReducer(reducer, 0);\n          if (count < 3) {\n            dispatch('increment');\n          
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T04:25:02.039Z
Question Type: select-all
Function: Counter
Function Size: 393 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: Counter (JavaScript)\n// A functional component that uses useReducer to manage count state and dispatches an action during rendering.\n\nfunction Counter() {\n          const [count, dispatch] = useReducer(reducer, 0);\n          if (count < 3) {\n            dispatch('increment');\n          
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T04:25:04.712Z
Question Type: select-all
Function: Counter
Function Size: 285 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: Counter (JavaScript)\n// A functional component that uses useReducer to manage count state and yields a render value.\n\nfunction Counter() {\n        const [count] = useReducer(reducer, 0);\n        yieldValue('Render: ' + count);\n        return <Text text={count} />;\n      }
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T04:25:05.734Z
Question Type: order-sequence
Function: UpdateCount
Function Size: 306 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: UpdateCount (JavaScript)\n// A functional component that updates the count state if it's less than 3 and renders its children.\n\nfunction UpdateCount({setCount, count, children}) {\n        if (count < 3) {\n          setCount(c => c + 1);\n        }\n        return <span>{children}</span>;\n 
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T04:25:06.854Z
Question Type: function-variant
Function: Counter
Function Size: 393 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: Counter (JavaScript)\n// A functional component that uses useReducer to manage count state and dispatches an action during rendering.\n\nfunction Counter() {\n          const [count, dispatch] = useReducer(reducer, 0);\n          if (count < 3) {\n            dispatch('increment');\n          
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T04:25:09.953Z
Question Type: select-all
Function: Counter
Function Size: 296 characters
Questions Generated: 0
Repository: Unknown
Function Preview: // Function: Counter (JavaScript)\n// A functional component that uses useReducer with lazy initialization to manage count state.\n\nfunction Counter() {\n        const [count] = useReducer(reducer, 0, c => c + 1);\n        yieldValue('Render: ' + count);\n        return <Text text={count} />;\n      }
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T04:25:14.897Z
Question Type: function-variant
Function: UpdateCount
Function Size: 306 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: UpdateCount (JavaScript)\n// A functional component that updates the count state if it's less than 3 and renders its children.\n\nfunction UpdateCount({setCount, count, children}) {\n        if (count < 3) {\n          setCount(c => c + 1);\n        }\n        return <span>{children}</span>;\n 
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T04:25:14.971Z
Question Type: true-false
Function: Counter
Function Size: 296 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: Counter (JavaScript)\n// A functional component that uses useReducer with lazy initialization to manage count state.\n\nfunction Counter() {\n        const [count] = useReducer(reducer, 0, c => c + 1);\n        yieldValue('Render: ' + count);\n        return <Text text={count} />;\n      }
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T04:25:18.711Z
Question Type: function-variant
Function: Counter
Function Size: 285 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: Counter (JavaScript)\n// A functional component that uses useReducer to manage count state and yields a render value.\n\nfunction Counter() {\n        const [count] = useReducer(reducer, 0);\n        yieldValue('Render: ' + count);\n        return <Text text={count} />;\n      }
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T04:25:20.407Z
Question Type: select-all
Function: Counter
Function Size: 325 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: Counter (JavaScript)\n// A functional component that increments the count state until it reaches 3 and renders it.\n\nfunction Counter() {\n          const [count, setCount] = useState(0);\n          if (count < 3) {\n            setCount(count + 1);\n          }\n          return <span>Count: 
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T04:25:21.672Z
Question Type: function-variant
Function: Counter
Function Size: 406 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: Counter (JavaScript)\n// A functional component that increments the count state multiple times and renders it using the Text component.\n\nfunction Counter() {\n        const [count, setCount] = useState(0);\n        if (count < 12) {\n          setCount(c => c + 1);\n          setCount(c => c
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T04:25:25.075Z
Question Type: order-sequence
Function: Counter
Function Size: 325 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: Counter (JavaScript)\n// A functional component that increments the count state until it reaches 3 and renders it.\n\nfunction Counter() {\n          const [count, setCount] = useState(0);\n          if (count < 3) {\n            setCount(count + 1);\n          }\n          return <span>Count: 
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T04:25:26.112Z
Question Type: multiple-choice
Function: Counter
Function Size: 285 characters
Questions Generated: 0
Repository: Unknown
Function Preview: // Function: Counter (JavaScript)\n// A functional component that uses useReducer to manage count state and yields a render value.\n\nfunction Counter() {\n        const [count] = useReducer(reducer, 0);\n        yieldValue('Render: ' + count);\n        return <Text text={count} />;\n      }
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T04:25:29.931Z
Question Type: select-all
Function: Counter
Function Size: 406 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: Counter (JavaScript)\n// A functional component that increments the count state multiple times and renders it using the Text component.\n\nfunction Counter() {\n        const [count, setCount] = useState(0);\n        if (count < 12) {\n          setCount(c => c + 1);\n          setCount(c => c
================================================================================


=== SESSION SUMMARY ===
Session ID: session-1760546051744
Repository: Unknown
Total Questions Generated: 12
Total Chunks Processed: 6
Ended: 2025-10-16T04:25:30.412Z
================================================================================


--- FUNCTION EXTRACTION ---
Timestamp: 2025-10-16T04:25:40.411Z
File: Make them available to the helpers.
Functions Extracted: 4


Function 1: readContext
Language: JavaScript
Lines: 5
Full Code:
--------------------------------------------------------------------------------
function readContext(Ctx) {
  const dispatcher =
    React.__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE
      .H;
  return dispatcher.readContext(Ctx);
}
--------------------------------------------------------------------------------


Function 2: Parent
Language: JavaScript
Lines: 6
Full Code:
--------------------------------------------------------------------------------
class Parent extends React.Component {
  render() {
    return (
      <Theme.Provider value="light">
        <Child />
      </Theme.Provider>
    );
  }
}
--------------------------------------------------------------------------------


Function 3: Child
Language: JavaScript
Lines: 5
Full Code:
--------------------------------------------------------------------------------
function Child() {
  return (
    <Language.Provider value="english">
      <Grandchild />
    </Language.Provider>
  );
}
--------------------------------------------------------------------------------


Function 4: App
Language: JavaScript
Lines: 12
Full Code:
--------------------------------------------------------------------------------
const App = () => (
  <div>
    <Theme.Provider value="light">
      <Language.Provider value="english">
        <Theme.Provider value="dark">
          <Theme.Consumer>
            {theme => <div id="theme1">{theme}</div>}
          </Theme.Consumer>
        </Theme.Provider>
      </Language.Provider>
    </Theme.Provider>
    <Language.Consumer>
      {language => <div id="language3">{language}</div>}
    </Language.Consumer>
  </div>
);
--------------------------------------------------------------------------------

================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T04:25:44.230Z
Question Type: true-false
Function: Parent
Function Size: 266 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: Parent (JavaScript)\n// A React component that provides a theme context with a value of 'light'.\n\nclass Parent extends React.Component {\n  render() {\n    return (\n      <Theme.Provider value="light">\n        <Child />\n      </Theme.Provider>\n    );\n  }\n}
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T04:25:48.386Z
Question Type: select-all
Function: readContext
Function Size: 266 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: readContext (JavaScript)\n// Reads the context value from the specified context.\n\nfunction readContext(Ctx) {\n  const dispatcher =\n    React.__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE\n      .H;\n  return dispatcher.readContext(Ctx);\n}
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T04:25:49.348Z
Question Type: order-sequence
Function: App
Function Size: 574 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: App (JavaScript)\n// A React functional component that demonstrates nested context providers for theme and language.\n\nconst App = () => (\n  <div>\n    <Theme.Provider value="light">\n      <Language.Provider value="english">\n        <Theme.Provider value="dark">\n          <Theme.Consumer>\n
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T04:25:50.407Z
Question Type: order-sequence
Function: Child
Function Size: 247 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: Child (JavaScript)\n// A React functional component that provides a language context with a value of 'english'.\n\nfunction Child() {\n  return (\n    <Language.Provider value="english">\n      <Grandchild />\n    </Language.Provider>\n  );\n}
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T04:25:50.513Z
Question Type: multiple-choice
Function: App
Function Size: 574 characters
Questions Generated: 0
Repository: Unknown
Function Preview: // Function: App (JavaScript)\n// A React functional component that demonstrates nested context providers for theme and language.\n\nconst App = () => (\n  <div>\n    <Theme.Provider value="light">\n      <Language.Provider value="english">\n        <Theme.Provider value="dark">\n          <Theme.Consumer>\n
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T04:25:54.584Z
Question Type: select-all
Function: Child
Function Size: 247 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: Child (JavaScript)\n// A React functional component that provides a language context with a value of 'english'.\n\nfunction Child() {\n  return (\n    <Language.Provider value="english">\n      <Grandchild />\n    </Language.Provider>\n  );\n}
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T04:25:59.678Z
Question Type: function-variant
Function: Parent
Function Size: 266 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: Parent (JavaScript)\n// A React component that provides a theme context with a value of 'light'.\n\nclass Parent extends React.Component {\n  render() {\n    return (\n      <Theme.Provider value="light">\n        <Child />\n      </Theme.Provider>\n    );\n  }\n}
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T04:26:00.203Z
Question Type: select-all
Function: App
Function Size: 574 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: App (JavaScript)\n// A React functional component that demonstrates nested context providers for theme and language.\n\nconst App = () => (\n  <div>\n    <Theme.Provider value="light">\n      <Language.Provider value="english">\n        <Theme.Provider value="dark">\n          <Theme.Consumer>\n
================================================================================


=== SESSION SUMMARY ===
Session ID: session-1760546051744
Repository: Unknown
Total Questions Generated: 7
Total Chunks Processed: 4
Ended: 2025-10-16T04:26:00.434Z
================================================================================


--- FUNCTION EXTRACTION ---
Timestamp: 2025-10-16T04:26:53.920Z
File: Renable error overlay
Functions Extracted: 6


Function 1: RendererResult
Language: JavaScript
Lines: 21
Full Code:
--------------------------------------------------------------------------------
function RendererResult({
  result,
  canonicalResult,
  defaultValue,
  canonicalDefaultValue,
  didWarn,
  didError,
  ssrHasSameBehavior,
  ssrHasSameBehaviorExceptWarnings,
}) {
  let backgroundColor;
  if (didError) {
    backgroundColor = errorColor;
  } else if (didWarn) {
    backgroundColor = warnColor;
  } else if (canonicalResult !== canonicalDefaultValue) {
    backgroundColor = 'cyan';
  } else {
    backgroundColor = successColor;
  }

  let style = {
    display: 'flex',
    alignItems: 'center',
    position: 'absolute',
    height: '100%',
    width: '100%',
    backgroundColor,
  };

  if (!ssrHasSameBehavior) {
    const color = ssrHasSameBehaviorExceptWarnings ? 'gray' : 'magenta';
    style.border = `3px dotted ${color}`;
  }

  return <div css={style}>{canonicalResult}</div>;
}
--------------------------------------------------------------------------------


Function 2: ResultPopover
Language: JavaScript
Lines: 10
Full Code:
--------------------------------------------------------------------------------
function ResultPopover(props) {
  return (
    <pre
      css={{
        padding: '1em',
        minWidth: '25em',
      }}>
      {JSON.stringify(
        {
          reactStable: props.reactStable,
          reactNext: props.reactNext,
          hasSameBehavior: props.hasSameBehavior,
        },
        null,
        2
      )}
    </pre>
  );
}
--------------------------------------------------------------------------------


Function 3: CellContent
Language: JavaScript
Lines: 27
Full Code:
--------------------------------------------------------------------------------
function CellContent(props) {
  const {
    columnIndex,
    rowIndex,
    attributesInSortedOrder,
    completedHashes,
    toggleAttribute,
    table,
  } = props;
  const attribute = attributesInSortedOrder[rowIndex - 1];
  const type = types[columnIndex - 1];

  if (columnIndex === 0) {
    if (rowIndex === 0) {
      return null;
    }
    const row = table.get(attribute);
    const rowPatternHash = row.rowPatternHash;
    return (
      <RowHeader
        checked={completedHashes.has(rowPatternHash)}
        onChange={() => toggleAttribute(rowPatternHash)}>
        {row.hasSameBehaviorForAll ? (
          attribute.name
        ) : (
          <b css={{color: 'purple'}}>{attribute.name}</b>
        )}
      </RowHeader>
    );
  }

  if (rowIndex === 0) {
    return <ColumnHeader>{type.name}</ColumnHeader>;
  }

  const row = table.get(attribute);
  const result = row.results.get(type.name);

  return <Result {...result} />;
}
--------------------------------------------------------------------------------


Function 4: saveToLocalStorage
Language: JavaScript
Lines: 5
Full Code:
--------------------------------------------------------------------------------
function saveToLocalStorage(completedHashes) {
  const str = JSON.stringify([...completedHashes]);
  localStorage.setItem('completedHashes', str);
}
--------------------------------------------------------------------------------


Function 5: restoreFromLocalStorage
Language: JavaScript
Lines: 8
Full Code:
--------------------------------------------------------------------------------
function restoreFromLocalStorage() {
  const str = localStorage.getItem('completedHashes');
  if (str) {
    const completedHashes = new Set(JSON.parse(str));
    return completedHashes;
  }
  return new Set();
}
--------------------------------------------------------------------------------


Function 6: toggleAttribute
Language: JavaScript
Lines: 7
Full Code:
--------------------------------------------------------------------------------
toggleAttribute = rowPatternHash => {
    const completedHashes = new Set(this.state.completedHashes);
    if (completedHashes.has(rowPatternHash)) {
      completedHashes.delete(rowPatternHash);
    } else {
      completedHashes.add(rowPatternHash);
    }
    this.setState({completedHashes}, () => saveToLocalStorage(completedHashes));
  };
--------------------------------------------------------------------------------

================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T04:26:56.823Z
Question Type: true-false
Function: saveToLocalStorage
Function Size: 242 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: saveToLocalStorage (JavaScript)\n// Saves the completed hashes to local storage.\n\nfunction saveToLocalStorage(completedHashes) {\n  const str = JSON.stringify([...completedHashes]);\n  localStorage.setItem('completedHashes', str);\n}
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T04:27:00.126Z
Question Type: select-all
Function: restoreFromLocalStorage
Function Size: 312 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: restoreFromLocalStorage (JavaScript)\n// Restores completed hashes from local storage.\n\nfunction restoreFromLocalStorage() {\n  const str = localStorage.getItem('completedHashes');\n  if (str) {\n    const completedHashes = new Set(JSON.parse(str));\n    return completedHashes;\n  }\n  return 
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T04:27:02.458Z
Question Type: select-all
Function: CellContent
Function Size: 1084 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: CellContent (JavaScript)\n// Renders the content of a cell based on its row and column index, including headers and results.\n\nfunction CellContent(props) {\n  const {\n    columnIndex,\n    rowIndex,\n    attributesInSortedOrder,\n    completedHashes,\n    toggleAttribute,\n    table,\n  } = pro
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T04:27:04.451Z
Question Type: order-sequence
Function: CellContent
Function Size: 1084 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: CellContent (JavaScript)\n// Renders the content of a cell based on its row and column index, including headers and results.\n\nfunction CellContent(props) {\n  const {\n    columnIndex,\n    rowIndex,\n    attributesInSortedOrder,\n    completedHashes,\n    toggleAttribute,\n    table,\n  } = pro
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T04:27:07.490Z
Question Type: select-all
Function: saveToLocalStorage
Function Size: 242 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: saveToLocalStorage (JavaScript)\n// Saves the completed hashes to local storage.\n\nfunction saveToLocalStorage(completedHashes) {\n  const str = JSON.stringify([...completedHashes]);\n  localStorage.setItem('completedHashes', str);\n}
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T04:27:09.523Z
Question Type: select-all
Function: toggleAttribute
Function Size: 461 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: toggleAttribute (JavaScript)\n// Toggles the completion state of an attribute and updates local storage.\n\ntoggleAttribute = rowPatternHash => {\n    const completedHashes = new Set(this.state.completedHashes);\n    if (completedHashes.has(rowPatternHash)) {\n      completedHashes.delete(row
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T04:27:15.873Z
Question Type: function-variant
Function: restoreFromLocalStorage
Function Size: 312 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: restoreFromLocalStorage (JavaScript)\n// Restores completed hashes from local storage.\n\nfunction restoreFromLocalStorage() {\n  const str = localStorage.getItem('completedHashes');\n  if (str) {\n    const completedHashes = new Set(JSON.parse(str));\n    return completedHashes;\n  }\n  return 
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T04:27:20.244Z
Question Type: order-sequence
Function: RendererResult
Function Size: 939 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: RendererResult (JavaScript)\n// Renders the result with appropriate background color based on error/warning states.\n\nfunction RendererResult({\n  result,\n  canonicalResult,\n  defaultValue,\n  canonicalDefaultValue,\n  didWarn,\n  didError,\n  ssrHasSameBehavior,\n  ssrHasSameBehaviorExceptWarn
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T04:27:21.460Z
Question Type: select-all
Function: ResultPopover
Function Size: 463 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: ResultPopover (JavaScript)\n// Displays a popover with JSON representation of the result properties.\n\nfunction ResultPopover(props) {\n  return (\n    <pre\n      css={{\n        padding: '1em',\n        minWidth: '25em',\n      }}>\n      {JSON.stringify(\n        {\n          reactStable: props
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T04:27:22.789Z
Question Type: function-variant
Function: ResultPopover
Function Size: 463 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: ResultPopover (JavaScript)\n// Displays a popover with JSON representation of the result properties.\n\nfunction ResultPopover(props) {\n  return (\n    <pre\n      css={{\n        padding: '1em',\n        minWidth: '25em',\n      }}>\n      {JSON.stringify(\n        {\n          reactStable: props
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T04:27:26.842Z
Question Type: function-variant
Function: RendererResult
Function Size: 939 characters
Questions Generated: 0
Repository: Unknown
Function Preview: // Function: RendererResult (JavaScript)\n// Renders the result with appropriate background color based on error/warning states.\n\nfunction RendererResult({\n  result,\n  canonicalResult,\n  defaultValue,\n  canonicalDefaultValue,\n  didWarn,\n  didError,\n  ssrHasSameBehavior,\n  ssrHasSameBehaviorExceptWarn
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T04:27:26.915Z
Question Type: true-false
Function: toggleAttribute
Function Size: 461 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: toggleAttribute (JavaScript)\n// Toggles the completion state of an attribute and updates local storage.\n\ntoggleAttribute = rowPatternHash => {\n    const completedHashes = new Set(this.state.completedHashes);\n    if (completedHashes.has(rowPatternHash)) {\n      completedHashes.delete(row
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T04:27:28.221Z
Question Type: function-variant
Function: saveToLocalStorage
Function Size: 242 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: saveToLocalStorage (JavaScript)\n// Saves the completed hashes to local storage.\n\nfunction saveToLocalStorage(completedHashes) {\n  const str = JSON.stringify([...completedHashes]);\n  localStorage.setItem('completedHashes', str);\n}
================================================================================


=== SESSION SUMMARY ===
Session ID: session-1760546051744
Repository: Unknown
Total Questions Generated: 12
Total Chunks Processed: 6
Ended: 2025-10-16T04:27:47.134Z
================================================================================


--- FUNCTION EXTRACTION ---
Timestamp: 2025-10-16T04:28:04.269Z
File: nothing yielded for bad markup
Functions Extracted: 9


Function 1: Counter
Language: JavaScript
Lines: 5
Full Code:
--------------------------------------------------------------------------------
function Counter(props) {
        useCallback(() => {
          yieldValue('should not be invoked');
        });
        return <Text text={'Count: ' + props.count} />;
      }
--------------------------------------------------------------------------------


Function 2: Counter
Language: JavaScript
Lines: 5
Full Code:
--------------------------------------------------------------------------------
function Counter(props) {
        const renderCount = useCallback(increment => {
          return 'Count: ' + (props.count + increment);
        });
        return <Text text={renderCount(3)} />;
      }
--------------------------------------------------------------------------------


Function 3: CapitalizedText
Language: JavaScript
Lines: 12
Full Code:
--------------------------------------------------------------------------------
function CapitalizedText(props) {
          const [text, setText] = useState(props.text);
          const [count, setCount] = useState(0);
          const capitalizeText = useCallback(() => text.toUpperCase(), [text]);
          yieldValue(capitalizeText);
          if (count < 3) {
            setCount(count + 1);
          }
          if (text === 'hello' && count === 2) {
            setText('hello, world.');
          }
          return <Text text={capitalizeText()} />;
        }
--------------------------------------------------------------------------------


Function 4: Counter
Language: JavaScript
Lines: 5
Full Code:
--------------------------------------------------------------------------------
function Counter(props, ref) {
        useImperativeHandle(ref, () => {
          throw new Error('should not be invoked');
        });
        return <Text text={props.label + ': ' + ref.current} />;
      }
--------------------------------------------------------------------------------


Function 5: Counter
Language: JavaScript
Lines: 5
Full Code:
--------------------------------------------------------------------------------
function Counter() {
        useInsertionEffect(() => {
          throw new Error('should not be invoked');
        });

        return <Text text="Count: 0" />;
      }
--------------------------------------------------------------------------------


Function 6: Counter
Language: JavaScript
Lines: 5
Full Code:
--------------------------------------------------------------------------------
function Counter() {
        useLayoutEffect(() => {
          throw new Error('should not be invoked');
        });

        return <Text text="Count: 0" />;
      }
--------------------------------------------------------------------------------


Function 7: App
Language: JavaScript
Lines: 15
Full Code:
--------------------------------------------------------------------------------
function App(props) {
        return (
          <div>
            <Provider foo={props.foo} bar={props.bar} baz={props.baz}>
              <Indirection>
                <Indirection>
                  <FooAndBar />
                </Indirection>
                <Indirection>
                  <Baz />
                </Indirection>
              </Indirection>
            </Provider>
          </div>
        );
      }
--------------------------------------------------------------------------------


Function 8: ReadInMemo
Language: JavaScript
Lines: 5
Full Code:
--------------------------------------------------------------------------------
function ReadInMemo(props) {
        const count = React.useMemo(() => readContext(Context), []);
        return <Text text={count} />;
      }
--------------------------------------------------------------------------------


Function 9: ReadInReducer
Language: JavaScript
Lines: 7
Full Code:
--------------------------------------------------------------------------------
function ReadInReducer(props) {
        const [count, dispatch] = React.useReducer(() => readContext(Context));
        if (count !== 42) {
          dispatch();
        }
        return <Text text={count} />;
      }
--------------------------------------------------------------------------------

================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T04:28:13.115Z
Question Type: select-all
Function: Counter
Function Size: 302 characters
Questions Generated: 0
Repository: Unknown
Function Preview: // Function: Counter (JavaScript)\n// A functional component that uses useLayoutEffect, which throws an error if invoked during render.\n\nfunction Counter() {\n        useLayoutEffect(() => {\n          throw new Error('should not be invoked');\n        });\n\n        return <Text text="Count: 0" />;\n     
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T04:28:14.318Z
Question Type: function-variant
Function: Counter
Function Size: 302 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: Counter (JavaScript)\n// A functional component that uses useLayoutEffect, which throws an error if invoked during render.\n\nfunction Counter() {\n        useLayoutEffect(() => {\n          throw new Error('should not be invoked');\n        });\n\n        return <Text text="Count: 0" />;\n     
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T04:28:14.877Z
Question Type: order-sequence
Function: Counter
Function Size: 352 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: Counter (JavaScript)\n// A functional component that uses useImperativeHandle to expose a ref, which is not invoked on the server.\n\nfunction Counter(props, ref) {\n        useImperativeHandle(ref, () => {\n          throw new Error('should not be invoked');\n        });\n        return <Text
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T04:28:15.454Z
Question Type: order-sequence
Function: Counter
Function Size: 308 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: Counter (JavaScript)\n// A functional component that uses useInsertionEffect, which throws an error if invoked during render.\n\nfunction Counter() {\n        useInsertionEffect(() => {\n          throw new Error('should not be invoked');\n        });\n\n        return <Text text="Count: 0" />;
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T04:28:19.578Z
Question Type: select-all
Function: ReadInReducer
Function Size: 346 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: ReadInReducer (JavaScript)\n// A component that reads context value using useReducer and updates state accordingly.\n\nfunction ReadInReducer(props) {\n        const [count, dispatch] = React.useReducer(() => readContext(Context));\n        if (count !== 42) {\n          dispatch();\n        }
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T04:28:20.639Z
Question Type: select-all
Function: Counter
Function Size: 352 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: Counter (JavaScript)\n// A functional component that uses useImperativeHandle to expose a ref, which is not invoked on the server.\n\nfunction Counter(props, ref) {\n        useImperativeHandle(ref, () => {\n          throw new Error('should not be invoked');\n        });\n        return <Text
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T04:28:21.914Z
Question Type: select-all
Function: Counter
Function Size: 343 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: Counter (JavaScript)\n// A functional component that uses useCallback to create a render time callback for displaying a count.\n\nfunction Counter(props) {\n        const renderCount = useCallback(increment => {\n          return 'Count: ' + (props.count + increment);\n        });\n        ret
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T04:28:26.013Z
Question Type: true-false
Function: ReadInReducer
Function Size: 346 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: ReadInReducer (JavaScript)\n// A component that reads context value using useReducer and updates state accordingly.\n\nfunction ReadInReducer(props) {\n        const [count, dispatch] = React.useReducer(() => readContext(Context));\n        if (count !== 42) {\n          dispatch();\n        }
================================================================================


=== SESSION SUMMARY ===
Session ID: session-1760546051744
Repository: Unknown
Total Questions Generated: 7
Total Chunks Processed: 9
Ended: 2025-10-16T04:28:26.167Z
================================================================================


--- FUNCTION EXTRACTION ---
Timestamp: 2025-10-16T04:33:02.454Z
File: View
Functions Extracted: 3


Function 1: App
Language: JavaScript
Lines: 7
Full Code:
--------------------------------------------------------------------------------
function App({response}) {
      return (
        <Suspense fallback={<h1>Loading...</h1>}>
          <Message response={response} />
        </Suspense>
      );
    }
--------------------------------------------------------------------------------


Function 2: App
Language: JavaScript
Lines: 7
Full Code:
--------------------------------------------------------------------------------
function App({response}) {
      return (
        <Suspense fallback={<h1>Loading...</h1>}>
          <Print response={response} />
        </Suspense>
      );
    }
--------------------------------------------------------------------------------


Function 3: App
Language: JavaScript
Lines: 15
Full Code:
--------------------------------------------------------------------------------
function App({response}) {
      return (
        <ErrorBoundary
          fallback={error => (
            <p>
              {__DEV__ ? error.message + ' + ' : null}
              {error.digest}
            </p>
          )}>
          <Suspense fallback={<h1>Loading...</h1>}>
            <Print response={response} />
          </Suspense>
        </ErrorBoundary>
      );
    }
--------------------------------------------------------------------------------

================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T04:33:08.614Z
Question Type: select-all
Function: App
Function Size: 260 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: App (JavaScript)\n// Renders the Message component within a Suspense fallback.\n\nfunction App({response}) {\n      return (\n        <Suspense fallback={<h1>Loading...</h1>}>\n          <Message response={response} />\n        </Suspense>\n      );\n    }
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T04:33:09.248Z
Question Type: select-all
Function: App
Function Size: 491 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: App (JavaScript)\n// Renders the Print component within an ErrorBoundary and Suspense fallback.\n\nfunction App({response}) {\n      return (\n        <ErrorBoundary\n          fallback={error => (\n            <p>\n              {__DEV__ ? error.message + ' + ' : null}\n              {error.dig
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T04:33:10.265Z
Question Type: function-variant
Function: App
Function Size: 256 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: App (JavaScript)\n// Renders the Print component within a Suspense fallback.\n\nfunction App({response}) {\n      return (\n        <Suspense fallback={<h1>Loading...</h1>}>\n          <Print response={response} />\n        </Suspense>\n      );\n    }
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T04:33:13.083Z
Question Type: true-false
Function: App
Function Size: 260 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: App (JavaScript)\n// Renders the Message component within a Suspense fallback.\n\nfunction App({response}) {\n      return (\n        <Suspense fallback={<h1>Loading...</h1>}>\n          <Message response={response} />\n        </Suspense>\n      );\n    }
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T04:33:17.596Z
Question Type: select-all
Function: App
Function Size: 260 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: App (JavaScript)\n// Renders the Message component within a Suspense fallback.\n\nfunction App({response}) {\n      return (\n        <Suspense fallback={<h1>Loading...</h1>}>\n          <Message response={response} />\n        </Suspense>\n      );\n    }
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T04:33:18.476Z
Question Type: function-variant
Function: App
Function Size: 491 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: App (JavaScript)\n// Renders the Print component within an ErrorBoundary and Suspense fallback.\n\nfunction App({response}) {\n      return (\n        <ErrorBoundary\n          fallback={error => (\n            <p>\n              {__DEV__ ? error.message + ' + ' : null}\n              {error.dig
================================================================================


=== SESSION SUMMARY ===
Session ID: session-1760546051744
Repository: Unknown
Total Questions Generated: 6
Total Chunks Processed: 3
Ended: 2025-10-16T04:33:18.562Z
================================================================================


--- FUNCTION EXTRACTION ---
Timestamp: 2025-10-16T04:33:29.202Z
File: TODO: Test that listeners are not registered onto any document/container.
Functions Extracted: 2


Function 1: runTest
Language: JavaScript
Lines: 38
Full Code:
--------------------------------------------------------------------------------
function runTest() {
        const lifecycle = [];

        class TestComponent extends React.Component {
          constructor(props) {
            super(props);
            lifecycle.push('getInitialState');
            this.state = {name: 'TestComponent'};
          }

          UNSAFE_componentWillMount() {
            lifecycle.push('componentWillMount');
          }

          componentDidMount() {
            lifecycle.push('componentDidMount');
          }

          render() {
            lifecycle.push('render');
            return <span>Component name: {this.state.name}</span>;
          }

          UNSAFE_componentWillUpdate() {
            lifecycle.push('componentWillUpdate');
          }

          componentDidUpdate() {
            lifecycle.push('componentDidUpdate');
          }

          shouldComponentUpdate() {
            lifecycle.push('shouldComponentUpdate');
          }

          UNSAFE_componentWillReceiveProps() {
            lifecycle.push('componentWillReceiveProps');
          }

          componentWillUnmount() {
            lifecycle.push('componentWillUnmount');
          }
        }

        const response = ReactDOMServer.renderToString(<TestComponent />);

        expect(response).toMatch(
          new RegExp(
            '<span>' + 'Component name: <!-- -->TestComponent' + '</span>',
          ),
        );
        expect(lifecycle).toEqual([
          'getInitialState',
          'componentWillMount',
          'render',
        ]);
      }
--------------------------------------------------------------------------------


Function 2: runTest
Language: JavaScript
Lines: 38
Full Code:
--------------------------------------------------------------------------------
function runTest() {
        const lifecycle = [];

        class TestComponent extends React.Component {
          constructor(props) {
            super(props);
            lifecycle.push('getInitialState');
            this.state = {name: 'TestComponent'};
          }

          UNSAFE_componentWillMount() {
            lifecycle.push('componentWillMount');
          }

          componentDidMount() {
            lifecycle.push('componentDidMount');
          }

          render() {
            lifecycle.push('render');
            return <span>Component name: {this.state.name}</span>;
          }

          UNSAFE_componentWillUpdate() {
            lifecycle.push('componentWillUpdate');
          }

          componentDidUpdate() {
            lifecycle.push('componentDidUpdate');
          }

          shouldComponentUpdate() {
            lifecycle.push('shouldComponentUpdate');
          }

          UNSAFE_componentWillReceiveProps() {
            lifecycle.push('componentWillReceiveProps');
          }

          componentWillUnmount() {
            lifecycle.push('componentWillUnmount');
          }
        }

        const response = ReactDOMServer.renderToStaticMarkup(<TestComponent />);

        expect(response).toBe('<span>Component name: TestComponent</span>');
        expect(lifecycle).toEqual([
          'getInitialState',
          'componentWillMount',
          'render',
        ]);
      }
--------------------------------------------------------------------------------

================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T04:33:38.906Z
Question Type: order-sequence
Function: runTest
Function Size: 1575 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: runTest (JavaScript)\n// Tests the lifecycle methods of a React component and verifies the rendered output using static markup.\n\nfunction runTest() {\n        const lifecycle = [];\n\n        class TestComponent extends React.Component {\n          constructor(props) {\n            super(prop
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T04:33:39.843Z
Question Type: true-false
Function: runTest
Function Size: 1575 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: runTest (JavaScript)\n// Tests the lifecycle methods of a React component and verifies the rendered output using static markup.\n\nfunction runTest() {\n        const lifecycle = [];\n\n        class TestComponent extends React.Component {\n          constructor(props) {\n            super(prop
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T04:33:44.103Z
Question Type: multiple-choice
Function: runTest
Function Size: 1575 characters
Questions Generated: 3
Repository: Unknown
Function Preview: // Function: runTest (JavaScript)\n// Tests the lifecycle methods of a React component and verifies the rendered output using static markup.\n\nfunction runTest() {\n        const lifecycle = [];\n\n        class TestComponent extends React.Component {\n          constructor(props) {\n            super(prop
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T04:33:54.514Z
Question Type: select-all
Function: runTest
Function Size: 1628 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: runTest (JavaScript)\n// Tests the lifecycle methods of a React component and verifies the rendered output.\n\nfunction runTest() {\n        const lifecycle = [];\n\n        class TestComponent extends React.Component {\n          constructor(props) {\n            super(props);\n            life
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T04:33:58.470Z
Question Type: function-variant
Function: runTest
Function Size: 1628 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: runTest (JavaScript)\n// Tests the lifecycle methods of a React component and verifies the rendered output.\n\nfunction runTest() {\n        const lifecycle = [];\n\n        class TestComponent extends React.Component {\n          constructor(props) {\n            super(props);\n            life
================================================================================


=== SESSION SUMMARY ===
Session ID: session-1760546051744
Repository: Unknown
Total Questions Generated: 7
Total Chunks Processed: 2
Ended: 2025-10-16T04:33:58.546Z
================================================================================


--- FUNCTION EXTRACTION ---
Timestamp: 2025-10-16T04:34:18.076Z
File: [2 files: Client rendering uses JS value with CR and null character., WebSockets can produce string values in ReadableStreams.]
Functions Extracted: 4


Function 1: startReadingFromStream
Language: TypeScript
Lines: 15
Full Code:
--------------------------------------------------------------------------------
function startReadingFromStream(
  response: FlightResponse,
  stream: ReadableStream,
  onDone: () => void,
  debugValue: mixed,
): void {
  const streamState = createStreamState(response, debugValue);
  const reader = stream.getReader();
  function progress({
    done,
    value,
  }: {
    done: boolean,
    value: ?any,
    ...
  }): void | Promise<void> {
    if (done) {
      return onDone();
    }
    const buffer: Uint8Array = (value: any);
    processBinaryChunk(response, streamState, buffer);
    return reader.read().then(progress).catch(error);
  }
  function error(e: any) {
    reportGlobalError(response, e);
  }
  reader.read().then(progress).catch(error);
}
--------------------------------------------------------------------------------


Function 2: createFromReadableStream
Language: TypeScript
Lines: 15
Full Code:
--------------------------------------------------------------------------------
function createFromReadableStream<T>(
  stream: ReadableStream,
  options?: Options,
): Thenable<T> {
  const response: FlightResponse = createResponseFromOptions(options);
  if (
    __DEV__ &&
    options &&
    options.debugChannel &&
    options.debugChannel.readable
  ) {
    let streamDoneCount = 0;
    const handleDone = () => {
      if (++streamDoneCount === 2) {
        close(response);
      }
    };
    startReadingFromUniversalStream(
      response,
      options.debugChannel.readable,
      handleDone,
    );
    startReadingFromStream(response, stream, handleDone, stream);
  } else {
    startReadingFromStream(
      response,
      stream,
      close.bind(null, response),
      stream,
    );
  }
  return getRoot(response);
}
--------------------------------------------------------------------------------


Function 3: createFromFetch
Language: TypeScript
Lines: 15
Full Code:
--------------------------------------------------------------------------------
function createFromFetch<T>(
  promiseForResponse: Promise<Response>,
  options?: Options,
): Thenable<T> {
  const response: FlightResponse = createResponseFromOptions(options);
  promiseForResponse.then(
    function (r) {
      if (
        __DEV__ &&
        options &&
        options.debugChannel &&
        options.debugChannel.readable
      ) {
        let streamDoneCount = 0;
        const handleDone = () => {
          if (++streamDoneCount === 2) {
            close(response);
          }
        };
        startReadingFromUniversalStream(
          response,
          options.debugChannel.readable,
          handleDone,
        );
        startReadingFromStream(response, (r.body: any), handleDone, r);
      } else {
        startReadingFromStream(
          response,
          (r.body: any),
          close.bind(null, response),
          r,
        );
      }
    },
    function (e) {
      reportGlobalError(response, e);
    },
  );
  return getRoot(response);
}
--------------------------------------------------------------------------------


Function 4: encodeReply
Language: TypeScript
Lines: 15
Full Code:
--------------------------------------------------------------------------------
function encodeReply(
  value: ReactServerValue,
  options?: {temporaryReferences?: TemporaryReferenceSet, signal?: AbortSignal},
): Promise<
  string | URLSearchParams | FormData,
> /* We don't use URLSearchParams yet but maybe */ {
  return new Promise((resolve, reject) => {
    const abort = processReply(
      value,
      '',
      options && options.temporaryReferences
        ? options.temporaryReferences
        : undefined,
      resolve,
      reject,
    );
    if (options && options.signal) {
      const signal = options.signal;
      if (signal.aborted) {
        abort((signal: any).reason);
      } else {
        const listener = () => {
          abort((signal: any).reason);
          signal.removeEventListener('abort', listener);
        };
        signal.addEventListener('abort', listener);
      }
    }
  });
}
--------------------------------------------------------------------------------

================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T04:34:29.430Z
Question Type: select-all
Function: createFromReadableStream
Function Size: 872 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: createFromReadableStream (TypeScript)\n// Creates a response from a ReadableStream and handles debugging.\n\nfunction createFromReadableStream<T>(\n  stream: ReadableStream,\n  options?: Options,\n): Thenable<T> {\n  const response: FlightResponse = createResponseFromOptions(options);\n  if (\n 
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T04:34:39.695Z
Question Type: function-variant
Function: createFromReadableStream
Function Size: 872 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: createFromReadableStream (TypeScript)\n// Creates a response from a ReadableStream and handles debugging.\n\nfunction createFromReadableStream<T>(\n  stream: ReadableStream,\n  options?: Options,\n): Thenable<T> {\n  const response: FlightResponse = createResponseFromOptions(options);\n  if (\n 
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T04:34:41.982Z
Question Type: select-all
Function: createFromFetch
Function Size: 1098 characters
Questions Generated: 0
Repository: Unknown
Function Preview: // Function: createFromFetch (TypeScript)\n// Creates a response from a fetch promise and handles debugging.\n\nfunction createFromFetch<T>(\n  promiseForResponse: Promise<Response>,\n  options?: Options,\n): Thenable<T> {\n  const response: FlightResponse = createResponseFromOptions(options);\n  promiseFor
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T04:34:43.830Z
Question Type: function-variant
Function: encodeReply
Function Size: 968 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: encodeReply (TypeScript)\n// Encodes a reply value into a promise, handling optional references and abort signals.\n\nfunction encodeReply(\n  value: ReactServerValue,\n  options?: {temporaryReferences?: TemporaryReferenceSet, signal?: AbortSignal},\n): Promise<\n  string | URLSearchParams | F
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T04:34:48.102Z
Question Type: function-variant
Function: createFromFetch
Function Size: 1098 characters
Questions Generated: 0
Repository: Unknown
Function Preview: // Function: createFromFetch (TypeScript)\n// Creates a response from a fetch promise and handles debugging.\n\nfunction createFromFetch<T>(\n  promiseForResponse: Promise<Response>,\n  options?: Options,\n): Thenable<T> {\n  const response: FlightResponse = createResponseFromOptions(options);\n  promiseFor
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T04:34:48.563Z
Question Type: true-false
Function: startReadingFromStream
Function Size: 795 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: startReadingFromStream (TypeScript)\n// Starts reading from a ReadableStream and processes its chunks.\n\nfunction startReadingFromStream(\n  response: FlightResponse,\n  stream: ReadableStream,\n  onDone: () => void,\n  debugValue: mixed,\n): void {\n  const streamState = createStreamState(resp
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T04:34:50.407Z
Question Type: select-all
Function: encodeReply
Function Size: 968 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: encodeReply (TypeScript)\n// Encodes a reply value into a promise, handling optional references and abort signals.\n\nfunction encodeReply(\n  value: ReactServerValue,\n  options?: {temporaryReferences?: TemporaryReferenceSet, signal?: AbortSignal},\n): Promise<\n  string | URLSearchParams | F
================================================================================


=== SESSION SUMMARY ===
Session ID: session-1760546051744
Repository: Unknown
Total Questions Generated: 5
Total Chunks Processed: 4
Ended: 2025-10-16T04:34:50.447Z
================================================================================


--- FUNCTION EXTRACTION ---
Timestamp: 2025-10-16T04:35:42.244Z
File: nothing yielded for bad markup
Functions Extracted: 9


Function 1: Counter
Language: JavaScript
Lines: 5
Full Code:
--------------------------------------------------------------------------------
function Counter(props) {
        useCallback(() => {
          yieldValue('should not be invoked');
        });
        return <Text text={'Count: ' + props.count} />;
      }
--------------------------------------------------------------------------------


Function 2: Counter
Language: JavaScript
Lines: 6
Full Code:
--------------------------------------------------------------------------------
function Counter(props) {
        const renderCount = useCallback(increment => {
          return 'Count: ' + (props.count + increment);
        });
        return <Text text={renderCount(3)} />;
      }
--------------------------------------------------------------------------------


Function 3: CapitalizedText
Language: JavaScript
Lines: 12
Full Code:
--------------------------------------------------------------------------------
function CapitalizedText(props) {
          const [text, setText] = useState(props.text);
          const [count, setCount] = useState(0);
          const capitalizeText = useCallback(() => text.toUpperCase(), [text]);
          yieldValue(capitalizeText);
          if (count < 3) {
            setCount(count + 1);
          }
          if (text === 'hello' && count === 2) {
            setText('hello, world.');
          }
          return <Text text={capitalizeText()} />;
        }
--------------------------------------------------------------------------------


Function 4: Counter
Language: JavaScript
Lines: 6
Full Code:
--------------------------------------------------------------------------------
function Counter(props, ref) {
        useImperativeHandle(ref, () => {
          throw new Error('should not be invoked');
        });
        return <Text text={props.label + ': ' + ref.current} />;
      }
--------------------------------------------------------------------------------


Function 5: Counter
Language: JavaScript
Lines: 5
Full Code:
--------------------------------------------------------------------------------
function Counter() {
        useInsertionEffect(() => {
          throw new Error('should not be invoked');
        });

        return <Text text="Count: 0" />;
      }
--------------------------------------------------------------------------------


Function 6: Counter
Language: JavaScript
Lines: 5
Full Code:
--------------------------------------------------------------------------------
function Counter() {
        useLayoutEffect(() => {
          throw new Error('should not be invoked');
        });

        return <Text text="Count: 0" />;
      }
--------------------------------------------------------------------------------


Function 7: App
Language: JavaScript
Lines: 15
Full Code:
--------------------------------------------------------------------------------
function App(props) {
        return (
          <div>
            <Provider foo={props.foo} bar={props.bar} baz={props.baz}>
              <Indirection>
                <Indirection>
                  <FooAndBar />
                </Indirection>
                <Indirection>
                  <Baz />
                </Indirection>
              </Indirection>
            </Provider>
          </div>
        );
      }
--------------------------------------------------------------------------------


Function 8: ReadInMemo
Language: JavaScript
Lines: 5
Full Code:
--------------------------------------------------------------------------------
function ReadInMemo(props) {
        const count = React.useMemo(() => readContext(Context), []);
        return <Text text={count} />;
      }
--------------------------------------------------------------------------------


Function 9: ReadInReducer
Language: JavaScript
Lines: 7
Full Code:
--------------------------------------------------------------------------------
function ReadInReducer(props) {
        const [count, dispatch] = React.useReducer(() => readContext(Context));
        if (count !== 42) {
          dispatch();
        }
        return <Text text={count} />;
      }
--------------------------------------------------------------------------------

================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T04:35:46.631Z
Question Type: true-false
Function: ReadInMemo
Function Size: 247 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: ReadInMemo (JavaScript)\n// A functional component that reads context value using useMemo.\n\nfunction ReadInMemo(props) {\n        const count = React.useMemo(() => readContext(Context), []);\n        return <Text text={count} />;\n      }
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T04:35:48.026Z
Question Type: multiple-choice
Function: Counter
Function Size: 285 characters
Questions Generated: 3
Repository: Unknown
Function Preview: // Function: Counter (JavaScript)\n// A functional component that uses useLayoutEffect to throw an error when invoked.\n\nfunction Counter() {\n        useLayoutEffect(() => {\n          throw new Error('should not be invoked');\n        });\n\n        return <Text text="Count: 0" />;\n      }
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T04:35:48.398Z
Question Type: true-false
Function: App
Function Size: 548 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: App (JavaScript)\n// A functional component that provides context to its children and renders nested components.\n\nfunction App(props) {\n        return (\n          <div>\n            <Provider foo={props.foo} bar={props.bar} baz={props.baz}>\n              <Indirection>\n                <Ind
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T04:35:48.928Z
Question Type: select-all
Function: Counter
Function Size: 301 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: Counter (JavaScript)\n// A functional component that uses useCallback to prevent a callback from being invoked.\n\nfunction Counter(props) {\n        useCallback(() => {\n          yieldValue('should not be invoked');\n        });\n        return <Text text={'Count: ' + props.count} />;\n      
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T04:35:55.557Z
Question Type: select-all
Function: ReadInMemo
Function Size: 247 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: ReadInMemo (JavaScript)\n// A functional component that reads context value using useMemo.\n\nfunction ReadInMemo(props) {\n        const count = React.useMemo(() => readContext(Context), []);\n        return <Text text={count} />;\n      }
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T04:35:58.701Z
Question Type: function-variant
Function: Counter
Function Size: 301 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: Counter (JavaScript)\n// A functional component that uses useCallback to prevent a callback from being invoked.\n\nfunction Counter(props) {\n        useCallback(() => {\n          yieldValue('should not be invoked');\n        });\n        return <Text text={'Count: ' + props.count} />;\n      
================================================================================


=== SESSION SUMMARY ===
Session ID: session-1760546051744
Repository: Unknown
Total Questions Generated: 8
Total Chunks Processed: 9
Ended: 2025-10-16T04:35:58.813Z
================================================================================


--- FUNCTION EXTRACTION ---
Timestamp: 2025-10-16T04:59:30.352Z
File: WordPress-WordPress-e9bd851/wp-includes/sodium_compat/lib/ristretto255.php
Functions Extracted: 6


Function 1: sodium_crypto_core_ristretto255_add
Language: PHP
Lines: 6
Full Code:
--------------------------------------------------------------------------------
function sodium_crypto_core_ristretto255_add(
    #[\SensitiveParameter]
    $p,
    #[\SensitiveParameter]
    $q
) {
    return ParagonIE_Sodium_Compat::ristretto255_add($p, $q, true);
}
--------------------------------------------------------------------------------


Function 2: sodium_crypto_core_ristretto255_from_hash
Language: PHP
Lines: 5
Full Code:
--------------------------------------------------------------------------------
function sodium_crypto_core_ristretto255_from_hash(
    #[\SensitiveParameter]
    $s
) {
    return ParagonIE_Sodium_Compat::ristretto255_from_hash($s, true);
}
--------------------------------------------------------------------------------


Function 3: sodium_crypto_core_ristretto255_is_valid_point
Language: PHP
Lines: 5
Full Code:
--------------------------------------------------------------------------------
function sodium_crypto_core_ristretto255_is_valid_point(
    #[\SensitiveParameter]
    $s
) {
    return ParagonIE_Sodium_Compat::ristretto255_is_valid_point($s, true);
}
--------------------------------------------------------------------------------


Function 4: sodium_crypto_core_ristretto255_scalar_add
Language: PHP
Lines: 6
Full Code:
--------------------------------------------------------------------------------
function sodium_crypto_core_ristretto255_scalar_add(
    #[\SensitiveParameter]
    $x,
    #[\SensitiveParameter]
    $y
) {
    return ParagonIE_Sodium_Compat::ristretto255_scalar_add($x, $y, true);
}
--------------------------------------------------------------------------------


Function 5: sodium_crypto_core_ristretto255_scalar_mul
Language: PHP
Lines: 6
Full Code:
--------------------------------------------------------------------------------
function sodium_crypto_core_ristretto255_scalar_mul(
    #[\SensitiveParameter]
    $x,
    #[\SensitiveParameter]
    $y
) {
    return ParagonIE_Sodium_Compat::ristretto255_scalar_mul($x, $y, true);
}
--------------------------------------------------------------------------------


Function 6: sodium_crypto_scalarmult_ristretto255
Language: PHP
Lines: 6
Full Code:
--------------------------------------------------------------------------------
function sodium_crypto_scalarmult_ristretto255(
    #[\SensitiveParameter]
    $n,
    #[\SensitiveParameter]
    $p
) {
    return ParagonIE_Sodium_Compat::scalarmult_ristretto255($n, $p, true);
}
--------------------------------------------------------------------------------

================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T04:59:34.733Z
Question Type: true-false
Function: sodium_crypto_core_ristretto255_add
Function Size: 277 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: sodium_crypto_core_ristretto255_add (PHP)\n// Adds two Ristretto255 points.\n\nfunction sodium_crypto_core_ristretto255_add(\n    #[\SensitiveParameter]\n    $p,\n    #[\SensitiveParameter]\n    $q\n) {\n    return ParagonIE_Sodium_Compat::ristretto255_add($p, $q, true);\n}
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T04:59:36.793Z
Question Type: select-all
Function: sodium_crypto_core_ristretto255_scalar_mul
Function Size: 305 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: sodium_crypto_core_ristretto255_scalar_mul (PHP)\n// Multiplies two Ristretto255 scalars.\n\nfunction sodium_crypto_core_ristretto255_scalar_mul(\n    #[\SensitiveParameter]\n    $x,\n    #[\SensitiveParameter]\n    $y\n) {\n    return ParagonIE_Sodium_Compat::ristretto255_scalar_mul($x, $y, tru
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T04:59:40.807Z
Question Type: function-variant
Function: sodium_crypto_scalarmult_ristretto255
Function Size: 318 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: sodium_crypto_scalarmult_ristretto255 (PHP)\n// Computes the scalar multiplication of a Ristretto255 point.\n\nfunction sodium_crypto_scalarmult_ristretto255(\n    #[\SensitiveParameter]\n    $n,\n    #[\SensitiveParameter]\n    $p\n) {\n    return ParagonIE_Sodium_Compat::scalarmult_ristretto25
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T04:59:40.952Z
Question Type: function-variant
Function: sodium_crypto_core_ristretto255_from_hash
Function Size: 268 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: sodium_crypto_core_ristretto255_from_hash (PHP)\n// Creates a Ristretto255 point from a hash.\n\nfunction sodium_crypto_core_ristretto255_from_hash(\n    #[\SensitiveParameter]\n    $s\n) {\n    return ParagonIE_Sodium_Compat::ristretto255_from_hash($s, true);\n}
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T04:59:41.858Z
Question Type: select-all
Function: sodium_crypto_scalarmult_ristretto255
Function Size: 318 characters
Questions Generated: 0
Repository: Unknown
Function Preview: // Function: sodium_crypto_scalarmult_ristretto255 (PHP)\n// Computes the scalar multiplication of a Ristretto255 point.\n\nfunction sodium_crypto_scalarmult_ristretto255(\n    #[\SensitiveParameter]\n    $n,\n    #[\SensitiveParameter]\n    $p\n) {\n    return ParagonIE_Sodium_Compat::scalarmult_ristretto25
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T04:59:46.173Z
Question Type: select-all
Function: sodium_crypto_core_ristretto255_add
Function Size: 277 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: sodium_crypto_core_ristretto255_add (PHP)\n// Adds two Ristretto255 points.\n\nfunction sodium_crypto_core_ristretto255_add(\n    #[\SensitiveParameter]\n    $p,\n    #[\SensitiveParameter]\n    $q\n) {\n    return ParagonIE_Sodium_Compat::ristretto255_add($p, $q, true);\n}
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T04:59:46.896Z
Question Type: multiple-choice
Function: sodium_crypto_core_ristretto255_scalar_mul
Function Size: 305 characters
Questions Generated: 0
Repository: Unknown
Function Preview: // Function: sodium_crypto_core_ristretto255_scalar_mul (PHP)\n// Multiplies two Ristretto255 scalars.\n\nfunction sodium_crypto_core_ristretto255_scalar_mul(\n    #[\SensitiveParameter]\n    $x,\n    #[\SensitiveParameter]\n    $y\n) {\n    return ParagonIE_Sodium_Compat::ristretto255_scalar_mul($x, $y, tru
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T04:59:49.372Z
Question Type: select-all
Function: sodium_crypto_core_ristretto255_is_valid_point
Function Size: 297 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: sodium_crypto_core_ristretto255_is_valid_point (PHP)\n// Checks if a given string is a valid Ristretto255 point.\n\nfunction sodium_crypto_core_ristretto255_is_valid_point(\n    #[\SensitiveParameter]\n    $s\n) {\n    return ParagonIE_Sodium_Compat::ristretto255_is_valid_point($s, true);\n}
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T04:59:54.899Z
Question Type: order-sequence
Function: sodium_crypto_core_ristretto255_scalar_add
Function Size: 299 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: sodium_crypto_core_ristretto255_scalar_add (PHP)\n// Adds two Ristretto255 scalars.\n\nfunction sodium_crypto_core_ristretto255_scalar_add(\n    #[\SensitiveParameter]\n    $x,\n    #[\SensitiveParameter]\n    $y\n) {\n    return ParagonIE_Sodium_Compat::ristretto255_scalar_add($x, $y, true);\n}
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T04:59:56.627Z
Question Type: function-variant
Function: sodium_crypto_core_ristretto255_is_valid_point
Function Size: 297 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: sodium_crypto_core_ristretto255_is_valid_point (PHP)\n// Checks if a given string is a valid Ristretto255 point.\n\nfunction sodium_crypto_core_ristretto255_is_valid_point(\n    #[\SensitiveParameter]\n    $s\n) {\n    return ParagonIE_Sodium_Compat::ristretto255_is_valid_point($s, true);\n}
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T04:59:56.944Z
Question Type: order-sequence
Function: sodium_crypto_core_ristretto255_from_hash
Function Size: 268 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: sodium_crypto_core_ristretto255_from_hash (PHP)\n// Creates a Ristretto255 point from a hash.\n\nfunction sodium_crypto_core_ristretto255_from_hash(\n    #[\SensitiveParameter]\n    $s\n) {\n    return ParagonIE_Sodium_Compat::ristretto255_from_hash($s, true);\n}
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T05:00:01.165Z
Question Type: true-false
Function: sodium_crypto_core_ristretto255_is_valid_point
Function Size: 297 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: sodium_crypto_core_ristretto255_is_valid_point (PHP)\n// Checks if a given string is a valid Ristretto255 point.\n\nfunction sodium_crypto_core_ristretto255_is_valid_point(\n    #[\SensitiveParameter]\n    $s\n) {\n    return ParagonIE_Sodium_Compat::ristretto255_is_valid_point($s, true);\n}
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T05:00:01.525Z
Question Type: function-variant
Function: sodium_crypto_core_ristretto255_scalar_mul
Function Size: 305 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: sodium_crypto_core_ristretto255_scalar_mul (PHP)\n// Multiplies two Ristretto255 scalars.\n\nfunction sodium_crypto_core_ristretto255_scalar_mul(\n    #[\SensitiveParameter]\n    $x,\n    #[\SensitiveParameter]\n    $y\n) {\n    return ParagonIE_Sodium_Compat::ristretto255_scalar_mul($x, $y, tru
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T05:00:04.477Z
Question Type: select-all
Function: sodium_crypto_core_ristretto255_scalar_add
Function Size: 299 characters
Questions Generated: 0
Repository: Unknown
Function Preview: // Function: sodium_crypto_core_ristretto255_scalar_add (PHP)\n// Adds two Ristretto255 scalars.\n\nfunction sodium_crypto_core_ristretto255_scalar_add(\n    #[\SensitiveParameter]\n    $x,\n    #[\SensitiveParameter]\n    $y\n) {\n    return ParagonIE_Sodium_Compat::ristretto255_scalar_add($x, $y, true);\n}
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T05:00:05.337Z
Question Type: function-variant
Function: sodium_crypto_core_ristretto255_add
Function Size: 277 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: sodium_crypto_core_ristretto255_add (PHP)\n// Adds two Ristretto255 points.\n\nfunction sodium_crypto_core_ristretto255_add(\n    #[\SensitiveParameter]\n    $p,\n    #[\SensitiveParameter]\n    $q\n) {\n    return ParagonIE_Sodium_Compat::ristretto255_add($p, $q, true);\n}
================================================================================


=== SESSION SUMMARY ===
Session ID: session-1760546051744
Repository: Unknown
Total Questions Generated: 12
Total Chunks Processed: 6
Ended: 2025-10-16T05:00:05.338Z
================================================================================


--- FUNCTION EXTRACTION ---
Timestamp: 2025-10-16T05:00:21.193Z
File: Find us a working transport.
Functions Extracted: 2


Function 1: get_transport
Language: PHP
Lines: 12
Full Code:
--------------------------------------------------------------------------------
/**
 * Get a working transport.
 *
 * @param array<string, bool> $capabilities Optional. Associative array of capabilities to test against, i.e. `['<capability>' => true]`.
 * @return \WpOrg\Requests\Transport
 * @throws \WpOrg\Requests\Exception If no valid transport is found (`notransport`).
 */
protected static function get_transport(array $capabilities = []) {
	$class = self::get_transport_class($capabilities);

	if ($class === '') {
		throw new Exception('No working transports found', 'notransport', self::$transports);
	}

	return new $class();
}
--------------------------------------------------------------------------------


Function 2: request
Language: PHP
Lines: 42
Full Code:
--------------------------------------------------------------------------------
/**
 * Main interface for HTTP requests
 *
 * This method initiates a request and sends it via a transport before
 * parsing.
 *
 * @param string|Stringable $url URL to request
 * @param array $headers Extra headers to send with the request
 * @param array|null $data Data to send either as a query string for GET/HEAD requests, or in the body for POST requests
 * @param string $type HTTP request type (use Requests constants)
 * @param array $options Options for the request (see description for more information)
 * @return \WpOrg\Requests\Response
 * @throws \WpOrg\Requests\Exception\InvalidArgument When the passed $url argument is not a string or Stringable.
 * @throws \WpOrg\Requests\Exception\InvalidArgument When the passed $type argument is not a string.
 * @throws \WpOrg\Requests\Exception\InvalidArgument When the passed $options argument is not an array.
 * @throws \WpOrg\Requests\Exception On invalid URLs (`nonhttp`)
 */
public static function request($url, $headers = [], $data = [], $type = self::GET, $options = []) {
	if (InputValidator::is_string_or_stringable($url) === false) {
		throw InvalidArgument::create(1, '$url', 'string|Stringable', gettype($url));
	}

	if (is_string($type) === false) {
		throw InvalidArgument::create(4, '$type', 'string', gettype($type));
	}

	if (is_array($options) === false) {
		throw InvalidArgument::create(5, '$options', 'array', gettype($options));
	}

	if (empty($options['type'])) {
		$options['type'] = $type;
	}

	$options = array_merge(self::get_default_options(), $options);

	self::set_defaults($url, $headers, $data, $type, $options);

	$options['hooks']->dispatch('requests.before_request', [&$url, &$headers, &$data, &$type, &$options]);

	if (!empty($options['transport'])) {
		$transport = $options['transport'];

		if (is_string($options['transport'])) {
			$transport = new $transport();
		}
	} else {
		$need_ssl     = (stripos($url, 'https://') === 0);
		$capabilities = [Capability::SSL => $need_ssl];
		$transport    = self::get_transport($capabilities);
	}

	$response = $transport->request($url, $headers, $data, $options);

	$options['hooks']->dispatch('requests.before_parse', [&$response, $url, $headers, $data, $type, $options]);

	return self::parse_response($response, $url, $headers, $data, $options);
}
--------------------------------------------------------------------------------

================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T05:00:26.371Z
Question Type: true-false
Function: get_transport
Function Size: 660 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: get_transport (PHP)\n// Retrieves a working transport based on the provided capabilities.\n\n/**\n * Get a working transport.\n *\n * @param array<string, bool> $capabilities Optional. Associative array of capabilities to test against, i.e. `['<capability>' => true]`.\n * @return \WpOrg\Reques
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T05:00:32.806Z
Question Type: true-false
Function: request
Function Size: 2398 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: request (PHP)\n// Handles the main logic for sending HTTP requests and processing responses.\n\n/**\n * Main interface for HTTP requests\n *\n * This method initiates a request and sends it via a transport before\n * parsing.\n *\n * @param string|Stringable $url URL to request\n * @param array $
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T05:00:33.371Z
Question Type: order-sequence
Function: request
Function Size: 2398 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: request (PHP)\n// Handles the main logic for sending HTTP requests and processing responses.\n\n/**\n * Main interface for HTTP requests\n *\n * This method initiates a request and sends it via a transport before\n * parsing.\n *\n * @param string|Stringable $url URL to request\n * @param array $
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T05:00:34.420Z
Question Type: order-sequence
Function: get_transport
Function Size: 660 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: get_transport (PHP)\n// Retrieves a working transport based on the provided capabilities.\n\n/**\n * Get a working transport.\n *\n * @param array<string, bool> $capabilities Optional. Associative array of capabilities to test against, i.e. `['<capability>' => true]`.\n * @return \WpOrg\Reques
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T05:00:34.635Z
Question Type: select-all
Function: get_transport
Function Size: 660 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: get_transport (PHP)\n// Retrieves a working transport based on the provided capabilities.\n\n/**\n * Get a working transport.\n *\n * @param array<string, bool> $capabilities Optional. Associative array of capabilities to test against, i.e. `['<capability>' => true]`.\n * @return \WpOrg\Reques
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T05:00:42.020Z
Question Type: select-all
Function: get_transport
Function Size: 660 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: get_transport (PHP)\n// Retrieves a working transport based on the provided capabilities.\n\n/**\n * Get a working transport.\n *\n * @param array<string, bool> $capabilities Optional. Associative array of capabilities to test against, i.e. `['<capability>' => true]`.\n * @return \WpOrg\Reques
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T05:00:46.115Z
Question Type: select-all
Function: request
Function Size: 2398 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: request (PHP)\n// Handles the main logic for sending HTTP requests and processing responses.\n\n/**\n * Main interface for HTTP requests\n *\n * This method initiates a request and sends it via a transport before\n * parsing.\n *\n * @param string|Stringable $url URL to request\n * @param array $
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T05:00:48.958Z
Question Type: select-all
Function: get_transport
Function Size: 660 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: get_transport (PHP)\n// Retrieves a working transport based on the provided capabilities.\n\n/**\n * Get a working transport.\n *\n * @param array<string, bool> $capabilities Optional. Associative array of capabilities to test against, i.e. `['<capability>' => true]`.\n * @return \WpOrg\Reques
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T05:00:52.699Z
Question Type: function-variant
Function: get_transport
Function Size: 660 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: get_transport (PHP)\n// Retrieves a working transport based on the provided capabilities.\n\n/**\n * Get a working transport.\n *\n * @param array<string, bool> $capabilities Optional. Associative array of capabilities to test against, i.e. `['<capability>' => true]`.\n * @return \WpOrg\Reques
================================================================================


=== SESSION SUMMARY ===
Session ID: session-1760546051744
Repository: Unknown
Total Questions Generated: 9
Total Chunks Processed: 2
Ended: 2025-10-16T05:00:52.797Z
================================================================================


--- FUNCTION EXTRACTION ---
Timestamp: 2025-10-16T05:05:50.585Z
File: [2 files: index.ts, index.test.tsx]
Functions Extracted: 4


Function 1: createScopedAnimate
Language: TypeScript
Lines: 45
Full Code:
--------------------------------------------------------------------------------
export function createScopedAnimate(scope?: AnimationScope) {
    function scopedAnimate(
        sequence: AnimationSequence,
        options?: SequenceOptions
    ): AnimationPlaybackControlsWithThen
    function scopedAnimate(
        value: string | MotionValue<string>,
        keyframes: string | UnresolvedValueKeyframe<string>[],
        options?: ValueAnimationTransition<string>
    ): AnimationPlaybackControlsWithThen
    function scopedAnimate(
        value: number | MotionValue<number>,
        keyframes: number | UnresolvedValueKeyframe<number>[],
        options?: ValueAnimationTransition<number>
    ): AnimationPlaybackControlsWithThen
    function scopedAnimate<V extends string | number>(
        value: V | MotionValue<V>,
        keyframes: V | UnresolvedValueKeyframe<V>[],
        options?: ValueAnimationTransition<V>
    ): AnimationPlaybackControlsWithThen
    function scopedAnimate(
        element: ElementOrSelector,
        keyframes: DOMKeyframesDefinition,
        options?: DynamicAnimationOptions
    ): AnimationPlaybackControlsWithThen
    function scopedAnimate<O extends {}>(
        object: O | O[],
        keyframes: ObjectTarget<O>,
        options?: DynamicAnimationOptions
    ): AnimationPlaybackControlsWithThen
    function scopedAnimate<O extends {}>(
        subjectOrSequence:
            | AnimationSequence
            | MotionValue<number>
            | MotionValue<string>
            | number
            | string
            | ElementOrSelector
            | O
            | O[],
        optionsOrKeyframes?:
            | SequenceOptions
            | number
            | string
            | UnresolvedValueKeyframe<number>[]
            | UnresolvedValueKeyframe<string>[]
            | DOMKeyframesDefinition
            | ObjectTarget<O>,
        options?:
            | ValueAnimationTransition<number>
            | ValueAnimationTransition<string>
            | DynamicAnimationOptions
    ): AnimationPlaybackControlsWithThen {
        let animations: AnimationPlaybackControlsWithThen[] = []
        let animationOnComplete: VoidFunction | undefined

        if (isSequence(subjectOrSequence)) {
            animations = animateSequence(
                subjectOrSequence,
                optionsOrKeyframes as SequenceOptions,
                scope
            )
        } else {
            // Implementation details...
        }
    }
}
--------------------------------------------------------------------------------


Function 2: onDragStart
Language: JavaScript
Lines: 15
Full Code:
--------------------------------------------------------------------------------
const onDragStart = jest.fn()
const Component = () => (
    <MockDrag>
        <motion.div drag onDragStart={onDragStart} />
    </MockDrag>
)
const { container, rerender } = render(<Component />)
rerender(<Component />)
const pointer = await drag(container.firstChild).to(100, 100)
pointer.end()
await nextFrame()
expect(onDragStart).toBeCalledTimes(1)
--------------------------------------------------------------------------------


Function 3: willChange is applied correctly
Language: JavaScript
Lines: 15
Full Code:
--------------------------------------------------------------------------------
const willChange = new WillChangeMotionValue("auto")
const Component = () => (
    <MockDrag>
        <motion.div
            data-testid="draggable"
            drag
            dragTransition={{
                bounceStiffness: 100000,
                bounceDamping: 100000,
            }}
            style={{ willChange }}
        />
    </MockDrag>
)
const { container, rerender } = render(<Component />)
rerender(<Component />)
const pointer = await drag(container.firstChild).to(100, 100)
await nextFrame()
expect(expect(willChange.get()).toBe("transform"))
pointer.end()
--------------------------------------------------------------------------------


Function 4: onDragEnd
Language: JavaScript
Lines: 15
Full Code:
--------------------------------------------------------------------------------
const onDragEnd = jest.fn()
const Component = () => (
    <MockDrag>
        <motion.div drag onDragEnd={onDragEnd} />
    </MockDrag>
)
const { container, rerender } = render(<Component />)
rerender(<Component />)
const pointer = await drag(container.firstChild).to(100, 100)
pointer.end()
await nextFrame()
expect(onDragEnd).toBeCalledTimes(1)
--------------------------------------------------------------------------------

================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T05:05:57.331Z
Question Type: select-all
Function: onDragStart
Function Size: 479 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: onDragStart (JavaScript)\n// Tests that the onDragStart event fires correctly when the drag action is initiated.\n\nconst onDragStart = jest.fn()\nconst Component = () => (\n    <MockDrag>\n        <motion.div drag onDragStart={onDragStart} />\n    </MockDrag>\n)\nconst { container, rerender } =
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T05:06:00.035Z
Question Type: order-sequence
Function: onDragStart
Function Size: 479 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: onDragStart (JavaScript)\n// Tests that the onDragStart event fires correctly when the drag action is initiated.\n\nconst onDragStart = jest.fn()\nconst Component = () => (\n    <MockDrag>\n        <motion.div drag onDragStart={onDragStart} />\n    </MockDrag>\n)\nconst { container, rerender } =
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T05:06:04.346Z
Question Type: select-all
Function: onDragEnd
Function Size: 467 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: onDragEnd (JavaScript)\n// Tests that the onDragEnd event fires correctly when the drag action is completed.\n\nconst onDragEnd = jest.fn()\nconst Component = () => (\n    <MockDrag>\n        <motion.div drag onDragEnd={onDragEnd} />\n    </MockDrag>\n)\nconst { container, rerender } = render(<C
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T05:06:06.091Z
Question Type: select-all
Function: createScopedAnimate
Function Size: 2644 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: createScopedAnimate (TypeScript)\n// Creates an animation function that is optionally scoped to a specific element, allowing for various types of animations including sequences, strings, numbers, elements, and objects.\n\nexport function createScopedAnimate(scope?: AnimationScope) {\n    fu
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T05:06:11.666Z
Question Type: select-all
Function: willChange is applied correctly
Function Size: 715 characters
Questions Generated: 0
Repository: Unknown
Function Preview: // Function: willChange is applied correctly (JavaScript)\n// Tests that the willChange style is applied correctly during a drag action.\n\nconst willChange = new WillChangeMotionValue("auto")\nconst Component = () => (\n    <MockDrag>\n        <motion.div\n            data-testid="draggable"\n            d
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T05:06:13.090Z
Question Type: function-variant
Function: onDragStart
Function Size: 479 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: onDragStart (JavaScript)\n// Tests that the onDragStart event fires correctly when the drag action is initiated.\n\nconst onDragStart = jest.fn()\nconst Component = () => (\n    <MockDrag>\n        <motion.div drag onDragStart={onDragStart} />\n    </MockDrag>\n)\nconst { container, rerender } =
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T05:06:20.590Z
Question Type: function-variant
Function: onDragEnd
Function Size: 467 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: onDragEnd (JavaScript)\n// Tests that the onDragEnd event fires correctly when the drag action is completed.\n\nconst onDragEnd = jest.fn()\nconst Component = () => (\n    <MockDrag>\n        <motion.div drag onDragEnd={onDragEnd} />\n    </MockDrag>\n)\nconst { container, rerender } = render(<C
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T05:06:21.405Z
Question Type: multiple-choice
Function: onDragStart
Function Size: 479 characters
Questions Generated: 3
Repository: Unknown
Function Preview: // Function: onDragStart (JavaScript)\n// Tests that the onDragStart event fires correctly when the drag action is initiated.\n\nconst onDragStart = jest.fn()\nconst Component = () => (\n    <MockDrag>\n        <motion.div drag onDragStart={onDragStart} />\n    </MockDrag>\n)\nconst { container, rerender } =
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T05:06:26.455Z
Question Type: order-sequence
Function: willChange is applied correctly
Function Size: 715 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: willChange is applied correctly (JavaScript)\n// Tests that the willChange style is applied correctly during a drag action.\n\nconst willChange = new WillChangeMotionValue("auto")\nconst Component = () => (\n    <MockDrag>\n        <motion.div\n            data-testid="draggable"\n            d
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T05:06:28.001Z
Question Type: select-all
Function: onDragEnd
Function Size: 467 characters
Questions Generated: 0
Repository: Unknown
Function Preview: // Function: onDragEnd (JavaScript)\n// Tests that the onDragEnd event fires correctly when the drag action is completed.\n\nconst onDragEnd = jest.fn()\nconst Component = () => (\n    <MockDrag>\n        <motion.div drag onDragEnd={onDragEnd} />\n    </MockDrag>\n)\nconst { container, rerender } = render(<C
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T05:06:32.813Z
Question Type: true-false
Function: createScopedAnimate
Function Size: 2644 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: createScopedAnimate (TypeScript)\n// Creates an animation function that is optionally scoped to a specific element, allowing for various types of animations including sequences, strings, numbers, elements, and objects.\n\nexport function createScopedAnimate(scope?: AnimationScope) {\n    fu
================================================================================


=== SESSION SUMMARY ===
Session ID: session-1760546051744
Repository: Unknown
Total Questions Generated: 11
Total Chunks Processed: 4
Ended: 2025-10-16T05:06:32.895Z
================================================================================


--- FUNCTION EXTRACTION ---
Timestamp: 2025-10-16T05:06:45.101Z
File: motiondivision-motion-b5df740/packages/framer-motion/src/animation/animate/subject.ts
Functions Extracted: 1


Function 1: animateSubject
Language: TypeScript
Lines: 61
Full Code:
--------------------------------------------------------------------------------
export function animateSubject<O extends Object>(
    subject:
        | MotionValue<number>
        | MotionValue<string>
        | number
        | string
        | ElementOrSelector
        | O
        | O[],
    keyframes:
        | number
        | string
        | UnresolvedValueKeyframe<number>[]
        | UnresolvedValueKeyframe<string>[]
        | DOMKeyframesDefinition
        | ObjectTarget<O>,
    options?:
        | ValueAnimationTransition<number>
        | ValueAnimationTransition<string>
        | DynamicAnimationOptions,
    scope?: AnimationScope
): AnimationPlaybackControlsWithThen[] {
    const animations: AnimationPlaybackControlsWithThen[] = []

    if (isSingleValue(subject, keyframes)) {
        animations.push(
            animateSingleValue(
                subject,
                isDOMKeyframes(keyframes)
                    ? (keyframes as any).default || keyframes
                    : keyframes,
                options ? (options as any).default || options : options
            )
        )
    } else {
        const subjects = resolveSubjects(
            subject,
            keyframes as DOMKeyframesDefinition,
            scope
        )

        const numSubjects = subjects.length

        invariant(
            Boolean(numSubjects),
            "No valid elements provided.",
            "no-valid-elements"
        )

        for (let i = 0; i < numSubjects; i++) {
            const thisSubject = subjects[i]

            invariant(
                thisSubject !== null,
                "You're trying to perform an animation on null. Ensure that selectors are correctly finding elements and refs are correctly hydrated.",
                "animate-null"
            )

            const createVisualElement =
                thisSubject instanceof Element
                    ? createDOMVisualElement
                    : createObjectVisualElement

            if (!visualElementStore.has(thisSubject)) {
                createVisualElement(thisSubject as any)
            }

            const visualElement = visualElementStore.get(thisSubject)!;
            const transition = { ...options }

            if (
                "delay" in transition &&
                typeof transition.delay === "function"
            ) {
                transition.delay = transition.delay(i, numSubjects)
            }

            animations.push(
                ...animateTarget(
                    visualElement,
                    { ...(keyframes as {}), transition } as TargetAndTransition,
                    {}
                )
            )
        }
    }

    return animations
}
--------------------------------------------------------------------------------

================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T05:06:56.382Z
Question Type: order-sequence
Function: animateSubject
Function Size: 2785 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: animateSubject (TypeScript)\n// Animates a subject (string, number, DOM element, or object) based on provided keyframes and options.\n\nexport function animateSubject<O extends Object>(\n    subject:\n        | MotionValue<number>\n        | MotionValue<string>\n        | number\n        | stri
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T05:06:58.623Z
Question Type: true-false
Function: animateSubject
Function Size: 2785 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: animateSubject (TypeScript)\n// Animates a subject (string, number, DOM element, or object) based on provided keyframes and options.\n\nexport function animateSubject<O extends Object>(\n    subject:\n        | MotionValue<number>\n        | MotionValue<string>\n        | number\n        | stri
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T05:06:59.880Z
Question Type: select-all
Function: animateSubject
Function Size: 2785 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: animateSubject (TypeScript)\n// Animates a subject (string, number, DOM element, or object) based on provided keyframes and options.\n\nexport function animateSubject<O extends Object>(\n    subject:\n        | MotionValue<number>\n        | MotionValue<string>\n        | number\n        | stri
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T05:07:11.034Z
Question Type: order-sequence
Function: animateSubject
Function Size: 2785 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: animateSubject (TypeScript)\n// Animates a subject (string, number, DOM element, or object) based on provided keyframes and options.\n\nexport function animateSubject<O extends Object>(\n    subject:\n        | MotionValue<number>\n        | MotionValue<string>\n        | number\n        | stri
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T05:07:15.148Z
Question Type: function-variant
Function: animateSubject
Function Size: 2785 characters
Questions Generated: 0
Repository: Unknown
Function Preview: // Function: animateSubject (TypeScript)\n// Animates a subject (string, number, DOM element, or object) based on provided keyframes and options.\n\nexport function animateSubject<O extends Object>(\n    subject:\n        | MotionValue<number>\n        | MotionValue<string>\n        | number\n        | stri
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T05:07:25.449Z
Question Type: select-all
Function: animateSubject
Function Size: 2785 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: animateSubject (TypeScript)\n// Animates a subject (string, number, DOM element, or object) based on provided keyframes and options.\n\nexport function animateSubject<O extends Object>(\n    subject:\n        | MotionValue<number>\n        | MotionValue<string>\n        | number\n        | stri
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T05:07:26.529Z
Question Type: function-variant
Function: animateSubject
Function Size: 2785 characters
Questions Generated: 0
Repository: Unknown
Function Preview: // Function: animateSubject (TypeScript)\n// Animates a subject (string, number, DOM element, or object) based on provided keyframes and options.\n\nexport function animateSubject<O extends Object>(\n    subject:\n        | MotionValue<number>\n        | MotionValue<string>\n        | number\n        | stri
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T05:07:27.777Z
Question Type: true-false
Function: animateSubject
Function Size: 2785 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: animateSubject (TypeScript)\n// Animates a subject (string, number, DOM element, or object) based on provided keyframes and options.\n\nexport function animateSubject<O extends Object>(\n    subject:\n        | MotionValue<number>\n        | MotionValue<string>\n        | number\n        | stri
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T05:07:29.904Z
Question Type: function-variant
Function: animateSubject
Function Size: 2785 characters
Questions Generated: 0
Repository: Unknown
Function Preview: // Function: animateSubject (TypeScript)\n// Animates a subject (string, number, DOM element, or object) based on provided keyframes and options.\n\nexport function animateSubject<O extends Object>(\n    subject:\n        | MotionValue<number>\n        | MotionValue<string>\n        | number\n        | stri
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T05:07:31.283Z
Question Type: multiple-choice
Function: animateSubject
Function Size: 2785 characters
Questions Generated: 3
Repository: Unknown
Function Preview: // Function: animateSubject (TypeScript)\n// Animates a subject (string, number, DOM element, or object) based on provided keyframes and options.\n\nexport function animateSubject<O extends Object>(\n    subject:\n        | MotionValue<number>\n        | MotionValue<string>\n        | number\n        | stri
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T05:07:41.677Z
Question Type: select-all
Function: animateSubject
Function Size: 2785 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: animateSubject (TypeScript)\n// Animates a subject (string, number, DOM element, or object) based on provided keyframes and options.\n\nexport function animateSubject<O extends Object>(\n    subject:\n        | MotionValue<number>\n        | MotionValue<string>\n        | number\n        | stri
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T05:07:43.052Z
Question Type: select-all
Function: animateSubject
Function Size: 2785 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: animateSubject (TypeScript)\n// Animates a subject (string, number, DOM element, or object) based on provided keyframes and options.\n\nexport function animateSubject<O extends Object>(\n    subject:\n        | MotionValue<number>\n        | MotionValue<string>\n        | number\n        | stri
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T05:07:45.709Z
Question Type: select-all
Function: animateSubject
Function Size: 2785 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: animateSubject (TypeScript)\n// Animates a subject (string, number, DOM element, or object) based on provided keyframes and options.\n\nexport function animateSubject<O extends Object>(\n    subject:\n        | MotionValue<number>\n        | MotionValue<string>\n        | number\n        | stri
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T05:07:46.638Z
Question Type: function-variant
Function: animateSubject
Function Size: 2785 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: animateSubject (TypeScript)\n// Animates a subject (string, number, DOM element, or object) based on provided keyframes and options.\n\nexport function animateSubject<O extends Object>(\n    subject:\n        | MotionValue<number>\n        | MotionValue<string>\n        | number\n        | stri
================================================================================


=== SESSION SUMMARY ===
Session ID: session-1760546051744
Repository: Unknown
Total Questions Generated: 13
Total Chunks Processed: 1
Ended: 2025-10-16T05:08:11.740Z
================================================================================


--- FUNCTION EXTRACTION ---
Timestamp: 2025-10-16T05:24:17.676Z
File: + 3 = 14
Functions Extracted: 3


Function 1: onDragEnd
Language: JavaScript
Lines: 20
Full Code:
--------------------------------------------------------------------------------
const onDragEnd = deferred<Point>()
const p: Point = { x: 0, y: 0 }

const Component = () => (
    <MockDrag>
        <motion.div
            data-testid="draggable"
            drag
            onDrag={(_e, { point }) => {
                p.x = point.x
                p.y = point.y
            }}
            onDragEnd={(_e, { point }) => {
                onDragEnd.resolve(point)
            }}
            style={{ x: 100, y: 100 }}
        />
    </MockDrag>
)

const { getByTestId, rerender } = render(<Component />)
rerender(<Component />)

const pointer = await drag(getByTestId("draggable")).to(50, 50)
pointer.end()

await expect(onDragEnd.promise).resolves.toEqual(p)
--------------------------------------------------------------------------------


Function 2: onDragTransitionEnd
Language: JavaScript
Lines: 20
Full Code:
--------------------------------------------------------------------------------
const onDragTransitionEnd = deferred<boolean>()
const Component = () => (
    <MockDrag>
        <motion.div
            drag
            onDragTransitionEnd={() =>
                onDragTransitionEnd.resolve(true)
            }
            dragConstraints={{
                top: 0,
                left: 0,
                right: 0,
                bottom: 0,
            }}
            dragTransition={{
                bounceStiffness: 100000,
                bounceDamping: 100000,
            }}
        />
    </MockDrag>
)

const { container, rerender } = render(<Component />)
rerender(<Component />)

const pointer = await drag(container.firstChild).to(1, 1)
await pointer.to(50, 50)
pointer.end()

expect(onDragTransitionEnd.promise).resolves.toBe(true)
--------------------------------------------------------------------------------


Function 3: whileDrag
Language: JavaScript
Lines: 20
Full Code:
--------------------------------------------------------------------------------
const opacity = motionValue(0)
const Component = () => (
    <MockDrag>
        <motion.div
            drag
            whileDrag={{ opacity: 0.5 }}
            transition={{ type: false }}
            style={{ opacity }}
        />
    </MockDrag>
)

const { container, rerender } = render(<Component />)
rerender(<Component />)

const pointer = await drag(container.firstChild).to(0, 100)
await pointer.to(4, 50)
expect(opacity.get()).toBe(0.5)
await pointer.to(10, 200)
pointer.end()

await nextFrame()
expect(opacity.get()).toBe(0)
--------------------------------------------------------------------------------

================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T05:24:26.285Z
Question Type: select-all
Function: onDragTransitionEnd
Function Size: 915 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: onDragTransitionEnd (JavaScript)\n// Handles drag transition end event and resolves the promise to indicate the transition has completed.\n\nconst onDragTransitionEnd = deferred<boolean>()\nconst Component = () => (\n    <MockDrag>\n        <motion.div\n            drag\n            onDragTrans
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T05:24:27.420Z
Question Type: select-all
Function: onDragTransitionEnd
Function Size: 915 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: onDragTransitionEnd (JavaScript)\n// Handles drag transition end event and resolves the promise to indicate the transition has completed.\n\nconst onDragTransitionEnd = deferred<boolean>()\nconst Component = () => (\n    <MockDrag>\n        <motion.div\n            drag\n            onDragTrans
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T05:24:29.836Z
Question Type: function-variant
Function: onDragTransitionEnd
Function Size: 915 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: onDragTransitionEnd (JavaScript)\n// Handles drag transition end event and resolves the promise to indicate the transition has completed.\n\nconst onDragTransitionEnd = deferred<boolean>()\nconst Component = () => (\n    <MockDrag>\n        <motion.div\n            drag\n            onDragTrans
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T05:24:38.623Z
Question Type: order-sequence
Function: onDragTransitionEnd
Function Size: 915 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: onDragTransitionEnd (JavaScript)\n// Handles drag transition end event and resolves the promise to indicate the transition has completed.\n\nconst onDragTransitionEnd = deferred<boolean>()\nconst Component = () => (\n    <MockDrag>\n        <motion.div\n            drag\n            onDragTrans
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T05:24:40.637Z
Question Type: order-sequence
Function: onDragEnd
Function Size: 800 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: onDragEnd (JavaScript)\n// Handles drag end event and resolves the promise with the final pointer position.\n\nconst onDragEnd = deferred<Point>()\nconst p: Point = { x: 0, y: 0 }\n\nconst Component = () => (\n    <MockDrag>\n        <motion.div\n            data-testid="draggable"\n            d
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T05:24:45.100Z
Question Type: select-all
Function: whileDrag
Function Size: 649 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: whileDrag (JavaScript)\n// Applies an animation state (opacity) while the element is being dragged.\n\nconst opacity = motionValue(0)\nconst Component = () => (\n    <MockDrag>\n        <motion.div\n            drag\n            whileDrag={{ opacity: 0.5 }}\n            transition={{ type: false
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T05:24:46.522Z
Question Type: function-variant
Function: whileDrag
Function Size: 649 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: whileDrag (JavaScript)\n// Applies an animation state (opacity) while the element is being dragged.\n\nconst opacity = motionValue(0)\nconst Component = () => (\n    <MockDrag>\n        <motion.div\n            drag\n            whileDrag={{ opacity: 0.5 }}\n            transition={{ type: false
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T05:24:47.228Z
Question Type: true-false
Function: whileDrag
Function Size: 649 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: whileDrag (JavaScript)\n// Applies an animation state (opacity) while the element is being dragged.\n\nconst opacity = motionValue(0)\nconst Component = () => (\n    <MockDrag>\n        <motion.div\n            drag\n            whileDrag={{ opacity: 0.5 }}\n            transition={{ type: false
================================================================================


=== SESSION SUMMARY ===
Session ID: session-1760546051744
Repository: Unknown
Total Questions Generated: 8
Total Chunks Processed: 3
Ended: 2025-10-16T05:24:47.305Z
================================================================================


--- FUNCTION EXTRACTION ---
Timestamp: 2025-10-16T05:25:03.939Z
File: [2 files: hover.ts, animations for instance if layout="size" and an element has only changed position]
Functions Extracted: 6


Function 1: hover
Language: TypeScript
Lines: 38
Full Code:
--------------------------------------------------------------------------------
export function hover(
    elementOrSelector: ElementOrSelector,
    onHoverStart: OnHoverStartEvent,
    options: EventOptions = {}
): VoidFunction {
    const [elements, eventOptions, cancel] = setupGesture(
        elementOrSelector,
        options
    )

    const onPointerEnter = (enterEvent: PointerEvent) => {
        if (!isValidHover(enterEvent)) return

        const { target } = enterEvent
        const onHoverEnd = onHoverStart(target as Element, enterEvent)

        if (typeof onHoverEnd !== "function" || !target) return

        const onPointerLeave = (leaveEvent: PointerEvent) => {
            if (!isValidHover(leaveEvent)) return

            onHoverEnd(leaveEvent)
            target.removeEventListener(
                "pointerleave",
                onPointerLeave as EventListener
            )
        }

        target.addEventListener(
            "pointerleave",
            onPointerLeave as EventListener,
            eventOptions
        )
    }

    elements.forEach((element) => {
        element.addEventListener(
            "pointerenter",
            onPointerEnter as EventListener,
            eventOptions
        )
    })

    return cancel
}
--------------------------------------------------------------------------------


Function 2: propagateDirtyNodes
Language: TypeScript
Lines: 14
Full Code:
--------------------------------------------------------------------------------
export function propagateDirtyNodes(node: IProjectionNode) {
    if (statsBuffer.value) {
        metrics.nodes++
    }

    if (!node.parent) return

    if (!node.isProjecting()) {
        node.isProjectionDirty = node.parent.isProjectionDirty
    }

    node.isSharedProjectionDirty ||= Boolean(
        node.isProjectionDirty ||
            node.parent.isProjectionDirty ||
            node.parent.isSharedProjectionDirty
    )

    node.isTransformDirty ||= node.parent.isTransformDirty
}
--------------------------------------------------------------------------------


Function 3: cleanDirtyNodes
Language: TypeScript
Lines: 6
Full Code:
--------------------------------------------------------------------------------
export function cleanDirtyNodes(node: IProjectionNode) {
    node.isProjectionDirty =
        node.isSharedProjectionDirty =
        node.isTransformDirty =
            false
}
--------------------------------------------------------------------------------


Function 4: finishAnimation
Language: TypeScript
Lines: 6
Full Code:
--------------------------------------------------------------------------------
function finishAnimation(node: IProjectionNode) {
    node.finishAnimation()
    node.targetDelta = node.relativeTarget = node.target = undefined
    node.isProjectionDirty = true
}
--------------------------------------------------------------------------------


Function 5: mixAxisDelta
Language: TypeScript
Lines: 6
Full Code:
--------------------------------------------------------------------------------
export function mixAxisDelta(output: AxisDelta, delta: AxisDelta, p: number) {
    output.translate = mixNumber(delta.translate, 0, p)
    output.scale = mixNumber(delta.scale, 1, p)
    output.origin = delta.origin
    output.originPoint = delta.originPoint
}
--------------------------------------------------------------------------------


Function 6: mixBox
Language: TypeScript
Lines: 6
Full Code:
--------------------------------------------------------------------------------
export function mixBox(output: Box, from: Box, to: Box, p: number) {
    mixAxis(output.x, from.x, to.x, p)
    mixAxis(output.y, from.y, to.y, p)
}
--------------------------------------------------------------------------------

================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T05:25:13.272Z
Question Type: select-all
Function: cleanDirtyNodes
Function Size: 274 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: cleanDirtyNodes (TypeScript)\n// Resets the dirty state flags for a projection node.\n\nexport function cleanDirtyNodes(node: IProjectionNode) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n        node.isTransformDirty =\n            false\n}
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T05:25:14.517Z
Question Type: select-all
Function: hover
Function Size: 1293 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: hover (TypeScript)\n// Creates a hover gesture that manages pointer enter and leave events.\n\nexport function hover(\n    elementOrSelector: ElementOrSelector,\n    onHoverStart: OnHoverStartEvent,\n    options: EventOptions = {}\n): VoidFunction {\n    const [elements, eventOptions, cancel] =
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T05:25:17.244Z
Question Type: function-variant
Function: mixBox
Function Size: 252 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: mixBox (TypeScript)\n// Interpolates between two bounding boxes based on a progress value.\n\nexport function mixBox(output: Box, from: Box, to: Box, p: number) {\n    mixAxis(output.x, from.x, to.x, p)\n    mixAxis(output.y, from.y, to.y, p)\n}
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T05:25:17.322Z
Question Type: function-variant
Function: cleanDirtyNodes
Function Size: 274 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: cleanDirtyNodes (TypeScript)\n// Resets the dirty state flags for a projection node.\n\nexport function cleanDirtyNodes(node: IProjectionNode) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n        node.isTransformDirty =\n            false\n}
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T05:25:22.100Z
Question Type: true-false
Function: mixBox
Function Size: 252 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: mixBox (TypeScript)\n// Interpolates between two bounding boxes based on a progress value.\n\nexport function mixBox(output: Box, from: Box, to: Box, p: number) {\n    mixAxis(output.x, from.x, to.x, p)\n    mixAxis(output.y, from.y, to.y, p)\n}
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T05:25:23.864Z
Question Type: select-all
Function: propagateDirtyNodes
Function Size: 603 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: propagateDirtyNodes (TypeScript)\n// Propagates the dirty state of projection nodes up the tree.\n\nexport function propagateDirtyNodes(node: IProjectionNode) {\n    if (statsBuffer.value) {\n        metrics.nodes++\n    }\n\n    if (!node.parent) return\n\n    if (!node.isProjecting()) {\n       
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T05:25:25.761Z
Question Type: function-variant
Function: finishAnimation
Function Size: 296 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: finishAnimation (TypeScript)\n// Finalizes the animation for a projection node and marks it as dirty.\n\nfunction finishAnimation(node: IProjectionNode) {\n    node.finishAnimation()\n    node.targetDelta = node.relativeTarget = node.target = undefined\n    node.isProjectionDirty = true\n}
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T05:25:26.442Z
Question Type: select-all
Function: mixBox
Function Size: 252 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: mixBox (TypeScript)\n// Interpolates between two bounding boxes based on a progress value.\n\nexport function mixBox(output: Box, from: Box, to: Box, p: number) {\n    mixAxis(output.x, from.x, to.x, p)\n    mixAxis(output.y, from.y, to.y, p)\n}
================================================================================


=== SESSION SUMMARY ===
Session ID: session-1760546051744
Repository: Unknown
Total Questions Generated: 8
Total Chunks Processed: 6
Ended: 2025-10-16T05:25:26.469Z
================================================================================


--- FUNCTION EXTRACTION ---
Timestamp: 2025-10-16T05:25:44.627Z
File: [3 files: index.test.tsx, useSpring.tsx, utils.ts]
Functions Extracted: 3


Function 1: DragExample
Language: TypeScript
Lines: 12
Full Code:
--------------------------------------------------------------------------------
function DragExample() {
    const dragX = useMotionValue(0)
    const dragY = useMotionValue(0)
    const dragXPX = useTransform(dragX, (v) => `${v}%`)
    const dragYPX = useTransform(dragY, (v) => `${v}%`)
    const x = useSpring(dragXPX, spring)
    const y = useSpring(dragYPX, spring)

    return (
        <motion.div
            drag
            dragMomentum={false}
            _dragX={dragX}
            _dragY={dragY}
            style={{ width: 100, height: 100, background: "red", x, y }}
        >
            Drag
        </motion.div>
    )
}
--------------------------------------------------------------------------------


Function 2: RerenderExample
Language: TypeScript
Lines: 22
Full Code:
--------------------------------------------------------------------------------
function RerenderExample() {
    const [{ x, y }, setMousePosition] = useState({ x: 0, y: 0 })

    const updateMousePosition = useRef((e) => {
        frame.postRender(() => setMousePosition({ x: e.clientX, y: e.clientY }))
    })

    const size = 40
    const ref = useRef<HTMLDivElement>(null)

    return (
        <motion.div
            ref={ref}
            animate={{ x, y }}
            transition={spring}
            style={{
                width: 100,
                height: 100,
                background: "green",
                position: "absolute",
                inset: 0,
            }}
            onTapStart={() => {
                window.addEventListener(
                    "mousemove",
                    updateMousePosition.current
                )
            }}
            onTap={() => {
                window.removeEventListener(
                    "mousemove",
                    updateMousePosition.current
                )
            }}
            onTapCancel={() => {
                window.removeEventListener(
                    "mousemove",
                    updateMousePosition.current
                )
            }}
        >
            Rerender
        </motion.div>
    )
}
--------------------------------------------------------------------------------


Function 3: MouseEventExample
Language: TypeScript
Lines: 22
Full Code:
--------------------------------------------------------------------------------
function MouseEventExample() {
    const xPoint = useMotionValue(0)
    const yPoint = useMotionValue(0)
    const x = useSpring(0, spring)
    const y = useSpring(0, spring)
    const ref = useRef<HTMLDivElement>(null)
    const onMove = useRef<(event: MouseEvent) => void>(
        ({ clientX, clientY }: MouseEvent) => {
            const element = ref.current!

            x.set(clientX - element.offsetLeft - element.offsetWidth / 2)
            y.set(clientY - element.offsetTop - element.offsetHeight / 2)
        }
    )

    function startPointer() {
        window.addEventListener("pointermove", onMove.current)
    }

    function cancelPointer() {
        window.removeEventListener("pointermove", onMove.current)
    }

    return (
        <motion.div
            ref={ref}
            style={{ width: 100, height: 100, background: "yellow", x, y }}
            onTapStart={startPointer}
            onTapCancel={cancelPointer}
            onTap={cancelPointer}
        >
            Mouse Event
        </motion.div>
    )
}
--------------------------------------------------------------------------------

================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T05:25:53.164Z
Question Type: order-sequence
Function: DragExample
Function Size: 669 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: DragExample (TypeScript)\n// A draggable component that uses motion values to track its position.\n\nfunction DragExample() {\n    const dragX = useMotionValue(0)\n    const dragY = useMotionValue(0)\n    const dragXPX = useTransform(dragX, (v) => `${v}%`)\n    const dragYPX = useTransform(dra
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T05:25:57.190Z
Question Type: order-sequence
Function: RerenderExample
Function Size: 1370 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: RerenderExample (TypeScript)\n// A component that updates its position based on mouse movement and re-renders accordingly.\n\nfunction RerenderExample() {\n    const [{ x, y }, setMousePosition] = useState({ x: 0, y: 0 })\n\n    const updateMousePosition = useRef((e) => {\n        frame.postRe
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T05:25:57.362Z
Question Type: select-all
Function: DragExample
Function Size: 669 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: DragExample (TypeScript)\n// A draggable component that uses motion values to track its position.\n\nfunction DragExample() {\n    const dragX = useMotionValue(0)\n    const dragY = useMotionValue(0)\n    const dragXPX = useTransform(dragX, (v) => `${v}%`)\n    const dragYPX = useTransform(dra
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T05:25:57.632Z
Question Type: select-all
Function: RerenderExample
Function Size: 1370 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: RerenderExample (TypeScript)\n// A component that updates its position based on mouse movement and re-renders accordingly.\n\nfunction RerenderExample() {\n    const [{ x, y }, setMousePosition] = useState({ x: 0, y: 0 })\n\n    const updateMousePosition = useRef((e) => {\n        frame.postRe
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T05:26:11.284Z
Question Type: select-all
Function: RerenderExample
Function Size: 1370 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: RerenderExample (TypeScript)\n// A component that updates its position based on mouse movement and re-renders accordingly.\n\nfunction RerenderExample() {\n    const [{ x, y }, setMousePosition] = useState({ x: 0, y: 0 })\n\n    const updateMousePosition = useRef((e) => {\n        frame.postRe
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T05:26:17.465Z
Question Type: function-variant
Function: DragExample
Function Size: 669 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: DragExample (TypeScript)\n// A draggable component that uses motion values to track its position.\n\nfunction DragExample() {\n    const dragX = useMotionValue(0)\n    const dragY = useMotionValue(0)\n    const dragXPX = useTransform(dragX, (v) => `${v}%`)\n    const dragYPX = useTransform(dra
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T05:26:18.319Z
Question Type: multiple-choice
Function: DragExample
Function Size: 669 characters
Questions Generated: 3
Repository: Unknown
Function Preview: // Function: DragExample (TypeScript)\n// A draggable component that uses motion values to track its position.\n\nfunction DragExample() {\n    const dragX = useMotionValue(0)\n    const dragY = useMotionValue(0)\n    const dragXPX = useTransform(dragX, (v) => `${v}%`)\n    const dragYPX = useTransform(dra
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T05:26:20.491Z
Question Type: function-variant
Function: DragExample
Function Size: 669 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: DragExample (TypeScript)\n// A draggable component that uses motion values to track its position.\n\nfunction DragExample() {\n    const dragX = useMotionValue(0)\n    const dragY = useMotionValue(0)\n    const dragXPX = useTransform(dragX, (v) => `${v}%`)\n    const dragYPX = useTransform(dra
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T05:26:25.921Z
Question Type: true-false
Function: MouseEventExample
Function Size: 1166 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: MouseEventExample (TypeScript)\n// A component that tracks mouse movement and updates its position accordingly.\n\nfunction MouseEventExample() {\n    const xPoint = useMotionValue(0)\n    const yPoint = useMotionValue(0)\n    const x = useSpring(0, spring)\n    const y = useSpring(0, spring)\n
================================================================================


=== SESSION SUMMARY ===
Session ID: session-1760546051744
Repository: Unknown
Total Questions Generated: 11
Total Chunks Processed: 3
Ended: 2025-10-16T05:26:25.997Z
================================================================================


--- FUNCTION EXTRACTION ---
Timestamp: 2025-10-16T05:45:23.812Z
File: [2 files: delta-calc.ts, use-transform.ts]
Functions Extracted: 3


Function 1: calcAxisDelta
Language: TypeScript
Lines: 15
Full Code:
--------------------------------------------------------------------------------
export function calcAxisDelta(
    delta: AxisDelta,
    source: Axis,
    target: Axis,
    origin: number = 0.5
) {
    delta.origin = origin;
    delta.originPoint = mixNumber(source.min, source.max, delta.origin);
    delta.scale = calcLength(target) / calcLength(source);
    delta.translate =
        mixNumber(target.min, target.max, delta.origin) - delta.originPoint;

    if (
        (delta.scale >= SCALE_MIN && delta.scale <= SCALE_MAX) ||
        isNaN(delta.scale)
    ) {
        delta.scale = 1.0;
    }

    if (
        (delta.translate >= TRANSLATE_MIN &&
            delta.translate <= TRANSLATE_MAX) ||
        isNaN(delta.translate)
    ) {
        delta.translate = 0.0;
    }
}
--------------------------------------------------------------------------------


Function 2: calcBoxDelta
Language: TypeScript
Lines: 10
Full Code:
--------------------------------------------------------------------------------
export function calcBoxDelta(
    delta: Delta,
    source: Box,
    target: Box,
    origin?: ResolvedValues
): void {
    calcAxisDelta(
        delta.x,
        source.x,
        target.x,
        origin ? (origin.originX as number) : undefined
    );
    calcAxisDelta(
        delta.y,
        source.y,
        target.y,
        origin ? (origin.originY as number) : undefined
    );
}
--------------------------------------------------------------------------------


Function 3: useTransform
Language: TypeScript
Lines: 20
Full Code:
--------------------------------------------------------------------------------
export function useTransform<I, O>(
    input:
        | MotionValue<I>
        | MotionValue<string>[]
        | MotionValue<number>[]
        | MotionValue<AnyResolvedKeyframe>[]
        | (() => O),
    inputRangeOrTransformer?: InputRange | Transformer<I, O>,
    outputRange?: O[],
    options?: TransformOptions<O>
): MotionValue<O> {
    if (typeof input === "function") {
        return useComputed(input);
    }

    const transformer =
        typeof inputRangeOrTransformer === "function"
            ? inputRangeOrTransformer
            : transform(inputRangeOrTransformer!, outputRange!, options);

    return Array.isArray(input)
        ? useListTransform(
              input,
              transformer as MultiTransformer<AnyResolvedKeyframe, O>
          )
        : useListTransform([input], ([latest]) =>
              (transformer as SingleTransformer<I, O>)(latest)
          );
}
--------------------------------------------------------------------------------

================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T05:45:35.520Z
Question Type: select-all
Function: calcBoxDelta
Function Size: 499 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: calcBoxDelta (TypeScript)\n// Calculates the delta for a box based on source and target boxes.\n\nexport function calcBoxDelta(\n    delta: Delta,\n    source: Box,\n    target: Box,\n    origin?: ResolvedValues\n): void {\n    calcAxisDelta(\n        delta.x,\n        source.x,\n        target.x,\n
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T05:45:45.458Z
Question Type: true-false
Function: calcAxisDelta
Function Size: 811 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: calcAxisDelta (TypeScript)\n// Calculates the delta for an axis based on source and target axes.\n\nexport function calcAxisDelta(\n    delta: AxisDelta,\n    source: Axis,\n    target: Axis,\n    origin: number = 0.5\n) {\n    delta.origin = origin;\n    delta.originPoint = mixNumber(source.min,
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T05:45:48.025Z
Question Type: select-all
Function: calcAxisDelta
Function Size: 811 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: calcAxisDelta (TypeScript)\n// Calculates the delta for an axis based on source and target axes.\n\nexport function calcAxisDelta(\n    delta: AxisDelta,\n    source: Axis,\n    target: Axis,\n    origin: number = 0.5\n) {\n    delta.origin = origin;\n    delta.originPoint = mixNumber(source.min,
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T05:45:51.406Z
Question Type: function-variant
Function: useTransform
Function Size: 1019 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: useTransform (TypeScript)\n// Creates a MotionValue that transforms the output of another MotionValue.\n\nexport function useTransform<I, O>(\n    input:\n        | MotionValue<I>\n        | MotionValue<string>[]\n        | MotionValue<number>[]\n        | MotionValue<AnyResolvedKeyframe>[]\n   
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T05:45:53.852Z
Question Type: function-variant
Function: useTransform
Function Size: 1019 characters
Questions Generated: 0
Repository: Unknown
Function Preview: // Function: useTransform (TypeScript)\n// Creates a MotionValue that transforms the output of another MotionValue.\n\nexport function useTransform<I, O>(\n    input:\n        | MotionValue<I>\n        | MotionValue<string>[]\n        | MotionValue<number>[]\n        | MotionValue<AnyResolvedKeyframe>[]\n   
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T05:45:59.890Z
Question Type: select-all
Function: calcBoxDelta
Function Size: 499 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: calcBoxDelta (TypeScript)\n// Calculates the delta for a box based on source and target boxes.\n\nexport function calcBoxDelta(\n    delta: Delta,\n    source: Box,\n    target: Box,\n    origin?: ResolvedValues\n): void {\n    calcAxisDelta(\n        delta.x,\n        source.x,\n        target.x,\n
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T05:46:04.209Z
Question Type: select-all
Function: calcAxisDelta
Function Size: 811 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: calcAxisDelta (TypeScript)\n// Calculates the delta for an axis based on source and target axes.\n\nexport function calcAxisDelta(\n    delta: AxisDelta,\n    source: Axis,\n    target: Axis,\n    origin: number = 0.5\n) {\n    delta.origin = origin;\n    delta.originPoint = mixNumber(source.min,
================================================================================


=== SESSION SUMMARY ===
Session ID: session-1760546051744
Repository: Unknown
Total Questions Generated: 6
Total Chunks Processed: 3
Ended: 2025-10-16T05:46:04.320Z
================================================================================


--- FUNCTION EXTRACTION ---
Timestamp: 2025-10-16T05:46:33.376Z
File: [2 files: useSpring.tsx, hover.ts]
Functions Extracted: 4


Function 1: DragExample
Language: TypeScript
Lines: 15
Full Code:
--------------------------------------------------------------------------------
function DragExample() {
    const dragX = useMotionValue(0)
    const dragY = useMotionValue(0)
    const dragXPX = useTransform(dragX, (v) => `${v}%`)
    const dragYPX = useTransform(dragY, (v) => `${v}%`)
    const x = useSpring(dragXPX, spring)
    const y = useSpring(dragYPX, spring)

    return (
        <motion.div
            drag
            dragMomentum={false}
            _dragX={dragX}
            _dragY={dragY}
            style={{ width: 100, height: 100, background: "red", x, y }}
        >
            Drag
        </motion.div>
    )
}
--------------------------------------------------------------------------------


Function 2: RerenderExample
Language: TypeScript
Lines: 22
Full Code:
--------------------------------------------------------------------------------
function RerenderExample() {
    const [{ x, y }, setMousePosition] = useState({ x: 0, y: 0 })

    const updateMousePosition = useRef((e) => {
        frame.postRender(() => setMousePosition({ x: e.clientX, y: e.clientY }))
    })

    const size = 40
    const ref = useRef<HTMLDivElement>(null)

    return (
        <motion.div
            ref={ref}
            animate={{ x, y }}
            transition={spring}
            style={{
                width: 100,
                height: 100,
                background: "green",
                position: "absolute",
                inset: 0,
            }}
            onTapStart={() => {
                window.addEventListener(
                    "mousemove",
                    updateMousePosition.current
                )
            }}
            onTap={() => {
                window.removeEventListener(
                    "mousemove",
                    updateMousePosition.current
                )
            }}
            onTapCancel={() => {
                window.removeEventListener(
                    "mousemove",
                    updateMousePosition.current
                )
            }}
        >
            Rerender
        </motion.div>
    )
}
--------------------------------------------------------------------------------


Function 3: MouseEventExample
Language: TypeScript
Lines: 24
Full Code:
--------------------------------------------------------------------------------
function MouseEventExample() {
    const xPoint = useMotionValue(0)
    const yPoint = useMotionValue(0)
    const x = useSpring(0, spring)
    const y = useSpring(0, spring)
    const ref = useRef<HTMLDivElement>(null)
    const onMove = useRef<(event: MouseEvent) => void>(
        ({ clientX, clientY }: MouseEvent) => {
            const element = ref.current!

            x.set(clientX - element.offsetLeft - element.offsetWidth / 2)
            y.set(clientY - element.offsetTop - element.offsetHeight / 2)
        }
    )

    function startPointer() {
        window.addEventListener("pointermove", onMove.current)
    }

    function cancelPointer() {
        window.removeEventListener("pointermove", onMove.current)
    }

    return (
        <motion.div
            ref={ref}
            style={{ width: 100, height: 100, background: "yellow", x, y }}
            onTapStart={startPointer}
            onTapCancel={cancelPointer}
            onTap={cancelPointer}
        >
            Mouse Event
        </motion.div>
    )
}
--------------------------------------------------------------------------------


Function 4: hover
Language: TypeScript
Lines: 30
Full Code:
--------------------------------------------------------------------------------
export function hover(
    elementOrSelector: ElementOrSelector,
    onHoverStart: OnHoverStartEvent,
    options: EventOptions = {}
): VoidFunction {
    const [elements, eventOptions, cancel] = setupGesture(
        elementOrSelector,
        options
    )

    const onPointerEnter = (enterEvent: PointerEvent) => {
        if (!isValidHover(enterEvent)) return

        const { target } = enterEvent
        const onHoverEnd = onHoverStart(target as Element, enterEvent)

        if (typeof onHoverEnd !== "function" || !target) return

        const onPointerLeave = (leaveEvent: PointerEvent) => {
            if (!isValidHover(leaveEvent)) return

            onHoverEnd(leaveEvent)
            target.removeEventListener(
                "pointerleave",
                onPointerLeave as EventListener
            )
        }

        target.addEventListener(
            "pointerleave",
            onPointerLeave as EventListener,
            eventOptions
        )
    }

    elements.forEach((element) => {
        element.addEventListener(
            "pointerenter",
            onPointerEnter as EventListener,
            eventOptions
        )
    })

    return cancel
}
--------------------------------------------------------------------------------

================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T05:46:42.310Z
Question Type: select-all
Function: MouseEventExample
Function Size: 1153 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: MouseEventExample (TypeScript)\n// Creates a component that moves based on mouse pointer position.\n\nfunction MouseEventExample() {\n    const xPoint = useMotionValue(0)\n    const yPoint = useMotionValue(0)\n    const x = useSpring(0, spring)\n    const y = useSpring(0, spring)\n    const ref
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T05:46:50.367Z
Question Type: select-all
Function: hover
Function Size: 1308 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: hover (TypeScript)\n// Sets up a hover gesture on specified elements, handling hover start and end events.\n\nexport function hover(\n    elementOrSelector: ElementOrSelector,\n    onHoverStart: OnHoverStartEvent,\n    options: EventOptions = {}\n): VoidFunction {\n    const [elements, eventOpt
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T05:47:03.429Z
Question Type: function-variant
Function: DragExample
Function Size: 667 characters
Questions Generated: 0
Repository: Unknown
Function Preview: // Function: DragExample (TypeScript)\n// Creates a draggable component that moves based on user drag input.\n\nfunction DragExample() {\n    const dragX = useMotionValue(0)\n    const dragY = useMotionValue(0)\n    const dragXPX = useTransform(dragX, (v) => `${v}%`)\n    const dragYPX = useTransform(dragY
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T05:47:03.456Z
Question Type: function-variant
Function: hover
Function Size: 1308 characters
Questions Generated: 0
Repository: Unknown
Function Preview: // Function: hover (TypeScript)\n// Sets up a hover gesture on specified elements, handling hover start and end events.\n\nexport function hover(\n    elementOrSelector: ElementOrSelector,\n    onHoverStart: OnHoverStartEvent,\n    options: EventOptions = {}\n): VoidFunction {\n    const [elements, eventOpt
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T05:47:12.363Z
Question Type: function-variant
Function: RerenderExample
Function Size: 1351 characters
Questions Generated: 0
Repository: Unknown
Function Preview: // Function: RerenderExample (TypeScript)\n// Creates a component that updates its position based on mouse movement.\n\nfunction RerenderExample() {\n    const [{ x, y }, setMousePosition] = useState({ x: 0, y: 0 })\n\n    const updateMousePosition = useRef((e) => {\n        frame.postRender(() => setMouse
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T05:47:15.855Z
Question Type: order-sequence
Function: DragExample
Function Size: 667 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: DragExample (TypeScript)\n// Creates a draggable component that moves based on user drag input.\n\nfunction DragExample() {\n    const dragX = useMotionValue(0)\n    const dragY = useMotionValue(0)\n    const dragXPX = useTransform(dragX, (v) => `${v}%`)\n    const dragYPX = useTransform(dragY
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T05:47:18.595Z
Question Type: order-sequence
Function: MouseEventExample
Function Size: 1153 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: MouseEventExample (TypeScript)\n// Creates a component that moves based on mouse pointer position.\n\nfunction MouseEventExample() {\n    const xPoint = useMotionValue(0)\n    const yPoint = useMotionValue(0)\n    const x = useSpring(0, spring)\n    const y = useSpring(0, spring)\n    const ref
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T05:47:20.397Z
Question Type: function-variant
Function: hover
Function Size: 1308 characters
Questions Generated: 0
Repository: Unknown
Function Preview: // Function: hover (TypeScript)\n// Sets up a hover gesture on specified elements, handling hover start and end events.\n\nexport function hover(\n    elementOrSelector: ElementOrSelector,\n    onHoverStart: OnHoverStartEvent,\n    options: EventOptions = {}\n): VoidFunction {\n    const [elements, eventOpt
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T05:47:27.041Z
Question Type: select-all
Function: DragExample
Function Size: 667 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: DragExample (TypeScript)\n// Creates a draggable component that moves based on user drag input.\n\nfunction DragExample() {\n    const dragX = useMotionValue(0)\n    const dragY = useMotionValue(0)\n    const dragXPX = useTransform(dragX, (v) => `${v}%`)\n    const dragYPX = useTransform(dragY
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T05:47:33.888Z
Question Type: true-false
Function: RerenderExample
Function Size: 1351 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: RerenderExample (TypeScript)\n// Creates a component that updates its position based on mouse movement.\n\nfunction RerenderExample() {\n    const [{ x, y }, setMousePosition] = useState({ x: 0, y: 0 })\n\n    const updateMousePosition = useRef((e) => {\n        frame.postRender(() => setMouse
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T05:47:34.407Z
Question Type: true-false
Function: hover
Function Size: 1308 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: hover (TypeScript)\n// Sets up a hover gesture on specified elements, handling hover start and end events.\n\nexport function hover(\n    elementOrSelector: ElementOrSelector,\n    onHoverStart: OnHoverStartEvent,\n    options: EventOptions = {}\n): VoidFunction {\n    const [elements, eventOpt
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T05:47:38.053Z
Question Type: multiple-choice
Function: DragExample
Function Size: 667 characters
Questions Generated: 3
Repository: Unknown
Function Preview: // Function: DragExample (TypeScript)\n// Creates a draggable component that moves based on user drag input.\n\nfunction DragExample() {\n    const dragX = useMotionValue(0)\n    const dragY = useMotionValue(0)\n    const dragXPX = useTransform(dragX, (v) => `${v}%`)\n    const dragYPX = useTransform(dragY
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T05:47:45.899Z
Question Type: function-variant
Function: MouseEventExample
Function Size: 1153 characters
Questions Generated: 0
Repository: Unknown
Function Preview: // Function: MouseEventExample (TypeScript)\n// Creates a component that moves based on mouse pointer position.\n\nfunction MouseEventExample() {\n    const xPoint = useMotionValue(0)\n    const yPoint = useMotionValue(0)\n    const x = useSpring(0, spring)\n    const y = useSpring(0, spring)\n    const ref
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T05:47:47.589Z
Question Type: select-all
Function: RerenderExample
Function Size: 1351 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: RerenderExample (TypeScript)\n// Creates a component that updates its position based on mouse movement.\n\nfunction RerenderExample() {\n    const [{ x, y }, setMousePosition] = useState({ x: 0, y: 0 })\n\n    const updateMousePosition = useRef((e) => {\n        frame.postRender(() => setMouse
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T05:47:47.903Z
Question Type: select-all
Function: RerenderExample
Function Size: 1351 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: RerenderExample (TypeScript)\n// Creates a component that updates its position based on mouse movement.\n\nfunction RerenderExample() {\n    const [{ x, y }, setMousePosition] = useState({ x: 0, y: 0 })\n\n    const updateMousePosition = useRef((e) => {\n        frame.postRender(() => setMouse
================================================================================


=== SESSION SUMMARY ===
Session ID: session-1760546051744
Repository: Unknown
Total Questions Generated: 12
Total Chunks Processed: 4
Ended: 2025-10-16T05:47:47.908Z
================================================================================


--- FUNCTION EXTRACTION ---
Timestamp: 2025-10-16T05:54:47.499Z
File: motiondivision-motion-b5df740/packages/framer-motion/src/animation/animate/subject.ts
Functions Extracted: 1


Function 1: animateSubject
Language: TypeScript
Lines: 49
Full Code:
--------------------------------------------------------------------------------
export function animateSubject<O extends Object>(
    subject:
        | MotionValue<number>
        | MotionValue<string>
        | number
        | string
        | ElementOrSelector
        | O
        | O[],
    keyframes:
        | number
        | string
        | UnresolvedValueKeyframe<number>[]
        | UnresolvedValueKeyframe<string>[]
        | DOMKeyframesDefinition
        | ObjectTarget<O>,
    options?:
        | ValueAnimationTransition<number>
        | ValueAnimationTransition<string>
        | DynamicAnimationOptions,
    scope?: AnimationScope
): AnimationPlaybackControlsWithThen[] {
    const animations: AnimationPlaybackControlsWithThen[] = []

    if (isSingleValue(subject, keyframes)) {
        animations.push(
            animateSingleValue(
                subject,
                isDOMKeyframes(keyframes)
                    ? (keyframes as any).default || keyframes
                    : keyframes,
                options ? (options as any).default || options : options
            )
        )
    } else {
        const subjects = resolveSubjects(
            subject,
            keyframes as DOMKeyframesDefinition,
            scope
        )

        const numSubjects = subjects.length

        invariant(
            Boolean(numSubjects),
            "No valid elements provided.",
            "no-valid-elements"
        )

        for (let i = 0; i < numSubjects; i++) {
            const thisSubject = subjects[i]

            invariant(
                thisSubject !== null,
                "You're trying to perform an animation on null. Ensure that selectors are correctly finding elements and refs are correctly hydrated.",
                "animate-null"
            )

            const createVisualElement =
                thisSubject instanceof Element
                    ? createDOMVisualElement
                    : createObjectVisualElement

            if (!visualElementStore.has(thisSubject)) {
                createVisualElement(thisSubject as any)
            }

            const visualElement = visualElementStore.get(thisSubject)!;
            const transition = { ...options }

            if (
                "delay" in transition &&
                typeof transition.delay === "function"
            ) {
                transition.delay = transition.delay(i, numSubjects)
            }

            animations.push(
                ...animateTarget(
                    visualElement,
                    { ...(keyframes as {}), transition } as TargetAndTransition,
                    {}
                )
            )
        }
    }

    return animations
}
--------------------------------------------------------------------------------

================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T05:54:55.101Z
Question Type: true-false
Function: animateSubject
Function Size: 2810 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: animateSubject (TypeScript)\n// Animates a subject (string, number, element, or object) based on provided keyframes and options, returning playback controls.\n\nexport function animateSubject<O extends Object>(\n    subject:\n        | MotionValue<number>\n        | MotionValue<string>\n      
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T05:55:02.236Z
Question Type: select-all
Function: animateSubject
Function Size: 2810 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: animateSubject (TypeScript)\n// Animates a subject (string, number, element, or object) based on provided keyframes and options, returning playback controls.\n\nexport function animateSubject<O extends Object>(\n    subject:\n        | MotionValue<number>\n        | MotionValue<string>\n      
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T05:55:06.013Z
Question Type: select-all
Function: animateSubject
Function Size: 2810 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: animateSubject (TypeScript)\n// Animates a subject (string, number, element, or object) based on provided keyframes and options, returning playback controls.\n\nexport function animateSubject<O extends Object>(\n    subject:\n        | MotionValue<number>\n        | MotionValue<string>\n      
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T05:55:17.558Z
Question Type: function-variant
Function: animateSubject
Function Size: 2810 characters
Questions Generated: 0
Repository: Unknown
Function Preview: // Function: animateSubject (TypeScript)\n// Animates a subject (string, number, element, or object) based on provided keyframes and options, returning playback controls.\n\nexport function animateSubject<O extends Object>(\n    subject:\n        | MotionValue<number>\n        | MotionValue<string>\n      
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T05:55:20.074Z
Question Type: select-all
Function: animateSubject
Function Size: 2810 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: animateSubject (TypeScript)\n// Animates a subject (string, number, element, or object) based on provided keyframes and options, returning playback controls.\n\nexport function animateSubject<O extends Object>(\n    subject:\n        | MotionValue<number>\n        | MotionValue<string>\n      
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T05:55:25.129Z
Question Type: function-variant
Function: animateSubject
Function Size: 2810 characters
Questions Generated: 0
Repository: Unknown
Function Preview: // Function: animateSubject (TypeScript)\n// Animates a subject (string, number, element, or object) based on provided keyframes and options, returning playback controls.\n\nexport function animateSubject<O extends Object>(\n    subject:\n        | MotionValue<number>\n        | MotionValue<string>\n      
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T05:55:26.975Z
Question Type: multiple-choice
Function: animateSubject
Function Size: 2810 characters
Questions Generated: 3
Repository: Unknown
Function Preview: // Function: animateSubject (TypeScript)\n// Animates a subject (string, number, element, or object) based on provided keyframes and options, returning playback controls.\n\nexport function animateSubject<O extends Object>(\n    subject:\n        | MotionValue<number>\n        | MotionValue<string>\n      
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T05:55:29.659Z
Question Type: order-sequence
Function: animateSubject
Function Size: 2810 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: animateSubject (TypeScript)\n// Animates a subject (string, number, element, or object) based on provided keyframes and options, returning playback controls.\n\nexport function animateSubject<O extends Object>(\n    subject:\n        | MotionValue<number>\n        | MotionValue<string>\n      
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T05:55:32.254Z
Question Type: function-variant
Function: animateSubject
Function Size: 2810 characters
Questions Generated: 0
Repository: Unknown
Function Preview: // Function: animateSubject (TypeScript)\n// Animates a subject (string, number, element, or object) based on provided keyframes and options, returning playback controls.\n\nexport function animateSubject<O extends Object>(\n    subject:\n        | MotionValue<number>\n        | MotionValue<string>\n      
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T05:55:33.541Z
Question Type: true-false
Function: animateSubject
Function Size: 2810 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: animateSubject (TypeScript)\n// Animates a subject (string, number, element, or object) based on provided keyframes and options, returning playback controls.\n\nexport function animateSubject<O extends Object>(\n    subject:\n        | MotionValue<number>\n        | MotionValue<string>\n      
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T05:55:39.695Z
Question Type: select-all
Function: animateSubject
Function Size: 2810 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: animateSubject (TypeScript)\n// Animates a subject (string, number, element, or object) based on provided keyframes and options, returning playback controls.\n\nexport function animateSubject<O extends Object>(\n    subject:\n        | MotionValue<number>\n        | MotionValue<string>\n      
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T05:55:46.136Z
Question Type: select-all
Function: animateSubject
Function Size: 2810 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: animateSubject (TypeScript)\n// Animates a subject (string, number, element, or object) based on provided keyframes and options, returning playback controls.\n\nexport function animateSubject<O extends Object>(\n    subject:\n        | MotionValue<number>\n        | MotionValue<string>\n      
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T05:55:59.736Z
Question Type: function-variant
Function: animateSubject
Function Size: 2810 characters
Questions Generated: 0
Repository: Unknown
Function Preview: // Function: animateSubject (TypeScript)\n// Animates a subject (string, number, element, or object) based on provided keyframes and options, returning playback controls.\n\nexport function animateSubject<O extends Object>(\n    subject:\n        | MotionValue<number>\n        | MotionValue<string>\n      
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T05:56:01.186Z
Question Type: order-sequence
Function: animateSubject
Function Size: 2810 characters
Questions Generated: 0
Repository: Unknown
Function Preview: // Function: animateSubject (TypeScript)\n// Animates a subject (string, number, element, or object) based on provided keyframes and options, returning playback controls.\n\nexport function animateSubject<O extends Object>(\n    subject:\n        | MotionValue<number>\n        | MotionValue<string>\n      
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T05:56:03.558Z
Question Type: function-variant
Function: animateSubject
Function Size: 2810 characters
Questions Generated: 0
Repository: Unknown
Function Preview: // Function: animateSubject (TypeScript)\n// Animates a subject (string, number, element, or object) based on provided keyframes and options, returning playback controls.\n\nexport function animateSubject<O extends Object>(\n    subject:\n        | MotionValue<number>\n        | MotionValue<string>\n      
================================================================================


=== SESSION SUMMARY ===
Session ID: session-1760546051744
Repository: Unknown
Total Questions Generated: 11
Total Chunks Processed: 1
Ended: 2025-10-16T05:56:03.559Z
================================================================================


--- FUNCTION EXTRACTION ---
Timestamp: 2025-10-16T05:56:22.920Z
File: animations for instance if layout="size" and an element has only changed position
Functions Extracted: 7


Function 1: propagateDirtyNodes
Language: TypeScript
Lines: 10
Full Code:
--------------------------------------------------------------------------------
export function propagateDirtyNodes(node: IProjectionNode) {
    if (statsBuffer.value) {
        metrics.nodes++
    }

    if (!node.parent) return

    if (!node.isProjecting()) {
        node.isProjectionDirty = node.parent.isProjectionDirty
    }

    node.isSharedProjectionDirty ||= Boolean(
        node.isProjectionDirty ||
            node.parent.isProjectionDirty ||
            node.parent.isSharedProjectionDirty
    )

    node.isTransformDirty ||= node.parent.isTransformDirty
}
--------------------------------------------------------------------------------


Function 2: cleanDirtyNodes
Language: TypeScript
Lines: 5
Full Code:
--------------------------------------------------------------------------------
export function cleanDirtyNodes(node: IProjectionNode) {
    node.isProjectionDirty =
        node.isSharedProjectionDirty =
        node.isTransformDirty =
            false
}
--------------------------------------------------------------------------------


Function 3: resetTransformStyle
Language: TypeScript
Lines: 7
Full Code:
--------------------------------------------------------------------------------
function resetTransformStyle(node: IProjectionNode) {
    const { visualElement } = node.options
    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {
        visualElement.notify("BeforeLayoutMeasure")
    }

    node.resetTransform()
}
--------------------------------------------------------------------------------


Function 4: finishAnimation
Language: TypeScript
Lines: 6
Full Code:
--------------------------------------------------------------------------------
function finishAnimation(node: IProjectionNode) {
    node.finishAnimation()
    node.targetDelta = node.relativeTarget = node.target = undefined
    node.isProjectionDirty = true
}
--------------------------------------------------------------------------------


Function 5: mixAxisDelta
Language: TypeScript
Lines: 6
Full Code:
--------------------------------------------------------------------------------
export function mixAxisDelta(output: AxisDelta, delta: AxisDelta, p: number) {
    output.translate = mixNumber(delta.translate, 0, p)
    output.scale = mixNumber(delta.scale, 1, p)
    output.origin = delta.origin
    output.originPoint = delta.originPoint
}
--------------------------------------------------------------------------------


Function 6: mixAxis
Language: TypeScript
Lines: 5
Full Code:
--------------------------------------------------------------------------------
export function mixAxis(output: Axis, from: Axis, to: Axis, p: number) {
    output.min = mixNumber(from.min, to.min, p)
    output.max = mixNumber(from.max, to.max, p)
}
--------------------------------------------------------------------------------


Function 7: mixBox
Language: TypeScript
Lines: 5
Full Code:
--------------------------------------------------------------------------------
export function mixBox(output: Box, from: Box, to: Box, p: number) {
    mixAxis(output.x, from.x, to.x, p)
    mixAxis(output.y, from.y, to.y, p)
}
--------------------------------------------------------------------------------

================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T05:56:28.544Z
Question Type: true-false
Function: mixAxisDelta
Function Size: 372 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: mixAxisDelta (TypeScript)\n// Mixes the delta values for an axis based on a given progress factor.\n\nexport function mixAxisDelta(output: AxisDelta, delta: AxisDelta, p: number) {\n    output.translate = mixNumber(delta.translate, 0, p)\n    output.scale = mixNumber(delta.scale, 1, p)\n    o
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T05:56:30.800Z
Question Type: select-all
Function: cleanDirtyNodes
Function Size: 257 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: cleanDirtyNodes (TypeScript)\n// Resets the dirty flags for a node.\n\nexport function cleanDirtyNodes(node: IProjectionNode) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n        node.isTransformDirty =\n            false\n}
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T05:56:34.617Z
Question Type: function-variant
Function: cleanDirtyNodes
Function Size: 257 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: cleanDirtyNodes (TypeScript)\n// Resets the dirty flags for a node.\n\nexport function cleanDirtyNodes(node: IProjectionNode) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n        node.isTransformDirty =\n            false\n}
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T05:56:35.074Z
Question Type: order-sequence
Function: mixBox
Function Size: 256 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: mixBox (TypeScript)\n// Mixes two box values for both x and y axes based on a progress factor.\n\nexport function mixBox(output: Box, from: Box, to: Box, p: number) {\n    mixAxis(output.x, from.x, to.x, p)\n    mixAxis(output.y, from.y, to.y, p)\n}
================================================================================


=== SESSION SUMMARY ===
Session ID: session-1760546051744
Repository: Unknown
Total Questions Generated: 4
Total Chunks Processed: 7
Ended: 2025-10-16T05:56:35.112Z
================================================================================


--- FUNCTION EXTRACTION ---
Timestamp: 2025-10-16T05:56:56.551Z
File: motiondivision-motion-b5df740/packages/motion-dom/src/value/index.ts
Functions Extracted: 6


Function 1: setCurrent
Language: TypeScript
Lines: 7
Full Code:
--------------------------------------------------------------------------------
setCurrent(current: V) {
        this.current = current;
        this.updatedAt = time.now();

        if (this.canTrackVelocity === null && current !== undefined) {
            this.canTrackVelocity = isFloat(this.current);
        }
    }
--------------------------------------------------------------------------------


Function 2: onChange
Language: TypeScript
Lines: 7
Full Code:
--------------------------------------------------------------------------------
onChange(subscription: Subscriber<V>): () => void {
        if (process.env.NODE_ENV !== "production") {
            warnOnce(
                false,
                `value.onChange(callback) is deprecated. Switch to value.on("change", callback).`
            );
        }
        return this.on("change", subscription);
    }
--------------------------------------------------------------------------------


Function 3: on
Language: TypeScript
Lines: 15
Full Code:
--------------------------------------------------------------------------------
on<EventName extends keyof MotionValueEventCallbacks<V>>(eventName: EventName, callback: MotionValueEventCallbacks<V>[EventName]) {
        if (!this.events[eventName]) {
            this.events[eventName] = new SubscriptionManager();
        }

        const unsubscribe = this.events[eventName].add(callback);

        if (eventName === "change") {
            return () => {
                unsubscribe();

                frame.read(() => {
                    if (!this.events.change.getSize()) {
                        this.stop();
                    }
                });
            };
        }

        return unsubscribe;
    }
--------------------------------------------------------------------------------


Function 4: set
Language: TypeScript
Lines: 7
Full Code:
--------------------------------------------------------------------------------
set(v: V) {
        if (!this.passiveEffect) {
            this.updateAndNotify(v);
        } else {
            this.passiveEffect(v, this.updateAndNotify);
        }
    }
--------------------------------------------------------------------------------


Function 5: jump
Language: TypeScript
Lines: 7
Full Code:
--------------------------------------------------------------------------------
jump(v: V, endAnimation = true) {
        this.updateAndNotify(v);
        this.prev = v;
        this.prevUpdatedAt = this.prevFrameValue = undefined;
        endAnimation && this.stop();
        if (this.stopPassiveEffect) this.stopPassiveEffect();
    }
--------------------------------------------------------------------------------


Function 6: updateAndNotify
Language: TypeScript
Lines: 7
Full Code:
--------------------------------------------------------------------------------
updateAndNotify = (v: V) => {
        const currentTime = time.now();

        if (this.updatedAt !== currentTime) {
            this.setPrevFrameValue();
        }

        this.prev = this.current;

        this.setCurrent(v);
    }
--------------------------------------------------------------------------------

================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T05:57:01.027Z
Question Type: true-false
Function: updateAndNotify
Function Size: 344 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: updateAndNotify (TypeScript)\n// Updates the MotionValue and notifies subscribers of the change.\n\nupdateAndNotify = (v: V) => {\n        const currentTime = time.now();\n\n        if (this.updatedAt !== currentTime) {\n            this.setPrevFrameValue();\n        }\n\n        this.prev = this
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T05:57:02.356Z
Question Type: select-all
Function: updateAndNotify
Function Size: 344 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: updateAndNotify (TypeScript)\n// Updates the MotionValue and notifies subscribers of the change.\n\nupdateAndNotify = (v: V) => {\n        const currentTime = time.now();\n\n        if (this.updatedAt !== currentTime) {\n            this.setPrevFrameValue();\n        }\n\n        this.prev = this
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T05:57:04.564Z
Question Type: select-all
Function: set
Function Size: 296 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: set (TypeScript)\n// Sets the state of the MotionValue, notifying subscribers if no passive effect is active.\n\nset(v: V) {\n        if (!this.passiveEffect) {\n            this.updateAndNotify(v);\n        } else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-16T05:57:06.313Z
Question Type: function-variant
Function: onChange
Function Size: 438 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: onChange (TypeScript)\n// Adds a subscriber for change events and returns an unsubscribe function.\n\nonChange(subscription: Subscriber<V>): () => void {\n        if (process.env.NODE_ENV !== "production") {\n            warnOnce(\n                false,\n                `value.onChange(callba
================================================================================


=== SESSION SUMMARY ===
Session ID: session-1760546051744
Repository: Unknown
Total Questions Generated: 4
Total Chunks Processed: 6
Ended: 2025-10-16T05:57:06.367Z
================================================================================

