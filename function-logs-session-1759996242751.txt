=== FUNCTION EXTRACTION & QUESTION GENERATION LOG ===
Session ID: session-1759996242751
Started: 2025-10-09T07:50:42.751Z


--- FUNCTION EXTRACTION ---
Timestamp: 2025-10-09T07:50:42.752Z
File: airbnb-lottie-web-bede03d/player/js/utils/common.js
Functions Extracted: 6


Function 1: BMMath.abs
Language: JavaScript
Lines: 11
Full Code:
--------------------------------------------------------------------------------
BMMath.abs = function (val) {
  var tOfVal = typeof val;
  if (tOfVal === 'object' && val.length) {
    var absArr = createSizedArray(val.length);
    var i;
    var len = val.length;
    for (i = 0; i < len; i += 1) {
      absArr[i] = Math.abs(val[i]);
    }
    return absArr;
  }
  return Math.abs(val);
};
--------------------------------------------------------------------------------


Function 2: HSVtoRGB
Language: JavaScript
Lines: 15
Full Code:
--------------------------------------------------------------------------------
function HSVtoRGB(h, s, v) {
  var r;
  var g;
  var b;
  var i;
  var f;
  var p;
  var q;
  var t;
  i = Math.floor(h * 6);
  f = h * 6 - i;
  p = v * (1 - s);
  q = v * (1 - f * s);
  t = v * (1 - (1 - f) * s);
  switch (i % 6) {
    case 0: r = v; g = t; b = p; break;
    case 1: r = q; g = v; b = p; break;
    case 2: r = p; g = v; b = t; break;
    case 3: r = p; g = q; b = v; break;
    case 4: r = t; g = p; b = v; break;
    case 5: r = v; g = p; b = q; break;
    default: break;
  }
  return [r, g, b];
}
--------------------------------------------------------------------------------


Function 3: RGBtoHSV
Language: JavaScript
Lines: 15
Full Code:
--------------------------------------------------------------------------------
function RGBtoHSV(r, g, b) {
  var max = Math.max(r, g, b);
  var min = Math.min(r, g, b);
  var d = max - min;
  var h;
  var s = (max === 0 ? 0 : d / max);
  var v = max / 255;

  switch (max) {
    case min: h = 0; break;
    case r: h = (g - b) + d * (g < b ? 6 : 0); h /= 6 * d; break;
    case g: h = (b - r) + d * 2; h /= 6 * d; break;
    case b: h = (r - g) + d * 4; h /= 6 * d; break;
    default: break;
  }

  return [h, s, v];
}
--------------------------------------------------------------------------------


Function 4: addSaturationToRGB
Language: JavaScript
Lines: 11
Full Code:
--------------------------------------------------------------------------------
function addSaturationToRGB(color, offset) {
  var hsv = RGBtoHSV(color[0] * 255, color[1] * 255, color[2] * 255);
  hsv[1] += offset;
  if (hsv[1] > 1) {
    hsv[1] = 1;
  } else if (hsv[1] <= 0) {
    hsv[1] = 0;
  }
  return HSVtoRGB(hsv[0], hsv[1], hsv[2]);
}
--------------------------------------------------------------------------------


Function 5: addBrightnessToRGB
Language: JavaScript
Lines: 11
Full Code:
--------------------------------------------------------------------------------
function addBrightnessToRGB(color, offset) {
  var hsv = RGBtoHSV(color[0] * 255, color[1] * 255, color[2] * 255);
  hsv[2] += offset;
  if (hsv[2] > 1) {
    hsv[2] = 1;
  } else if (hsv[2] < 0) {
    hsv[2] = 0;
  }
  return HSVtoRGB(hsv[0], hsv[1], hsv[2]);
}
--------------------------------------------------------------------------------


Function 6: addHueToRGB
Language: JavaScript
Lines: 11
Full Code:
--------------------------------------------------------------------------------
function addHueToRGB(color, offset) {
  var hsv = RGBtoHSV(color[0] * 255, color[1] * 255, color[2] * 255);
  hsv[0] += offset / 360;
  if (hsv[0] > 1) {
    hsv[0] -= 1;
  } else if (hsv[0] < 0) {
    hsv[0] += 1;
  }
  return HSVtoRGB(hsv[0], hsv[1], hsv[2]);
}
--------------------------------------------------------------------------------

================================================================================

--- FUNCTION EXTRACTION ---
Timestamp: 2025-10-09T07:51:20.965Z
File: airbnb-lottie-web-bede03d/player/js/animation/AnimationManager.js
Functions Extracted: 10


Function 1: removeElement
Language: JavaScript
Lines: 12
Full Code:
--------------------------------------------------------------------------------
function removeElement(ev) {
    var i = 0;
    var animItem = ev.target;
    while (i < len) {
      if (registeredAnimations[i].animation === animItem) {
        registeredAnimations.splice(i, 1);
        i -= 1;
        len -= 1;
        if (!animItem.isPaused) {
          subtractPlayingCount();
        }
      }
      i += 1;
    }
  }
--------------------------------------------------------------------------------


Function 2: registerAnimation
Language: JavaScript
Lines: 15
Full Code:
--------------------------------------------------------------------------------
function registerAnimation(element, animationData) {
    if (!element) {
      return null;
    }
    var i = 0;
    while (i < len) {
      if (registeredAnimations[i].elem === element && registeredAnimations[i].elem !== null) {
        return registeredAnimations[i].animation;
      }
      i += 1;
    }
    var animItem = new AnimationItem();
    setupAnimation(animItem, element);
    animItem.setData(element, animationData);
    return animItem;
  }
--------------------------------------------------------------------------------


Function 3: getRegisteredAnimations
Language: JavaScript
Lines: 10
Full Code:
--------------------------------------------------------------------------------
function getRegisteredAnimations() {
    var i;
    var lenAnims = registeredAnimations.length;
    var animations = [];
    for (i = 0; i < lenAnims; i += 1) {
      animations.push(registeredAnimations[i].animation);
    }
    return animations;
  }
--------------------------------------------------------------------------------


Function 4: loadAnimation
Language: JavaScript
Lines: 6
Full Code:
--------------------------------------------------------------------------------
function loadAnimation(params) {
    var animItem = new AnimationItem();
    setupAnimation(animItem, null);
    animItem.setParams(params);
    return animItem;
  }
--------------------------------------------------------------------------------


Function 5: setSpeed
Language: JavaScript
Lines: 7
Full Code:
--------------------------------------------------------------------------------
function setSpeed(val, animation) {
    var i;
    for (i = 0; i < len; i += 1) {
      registeredAnimations[i].animation.setSpeed(val, animation);
    }
  }
--------------------------------------------------------------------------------


Function 6: play
Language: JavaScript
Lines: 7
Full Code:
--------------------------------------------------------------------------------
function play(animation) {
    var i;
    for (i = 0; i < len; i += 1) {
      registeredAnimations[i].animation.play(animation);
    }
  }
--------------------------------------------------------------------------------


Function 7: resume
Language: JavaScript
Lines: 15
Full Code:
--------------------------------------------------------------------------------
function resume(nowTime) {
    var elapsedTime = nowTime - initTime;
    var i;
    for (i = 0; i < len; i += 1) {
      registeredAnimations[i].animation.advanceTime(elapsedTime);
    }
    initTime = nowTime;
    if (playingAnimationsNum && !_isFrozen) {
      window.requestAnimationFrame(resume);
    } else {
      _stopped = true;
    }
  }
--------------------------------------------------------------------------------


Function 8: searchAnimations
Language: JavaScript
Lines: 22
Full Code:
--------------------------------------------------------------------------------
function searchAnimations(animationData, standalone, renderer) {
    var animElements = [].concat([].slice.call(document.getElementsByClassName('lottie'),
      [].slice.call(document.getElementsByClassName('bodymovin')));
    var i;
    var lenAnims = animElements.length;
    for (i = 0; i < lenAnims; i += 1) {
      if (renderer) {
        animElements[i].setAttribute('data-bm-type', renderer);
      }
      registerAnimation(animElements[i], animationData);
    }
    if (standalone && lenAnims === 0) {
      if (!renderer) {
        renderer = 'svg';
      }
      var body = document.getElementsByTagName('body')[0];
      body.innerText = '';
      var div = createTag('div');
      div.style.width = '100%';
      div.style.height = '100%';
      div.setAttribute('data-bm-type', renderer);
      body.appendChild(div);
      registerAnimation(div, animationData);
    }
  }
--------------------------------------------------------------------------------


Function 9: resize
Language: JavaScript
Lines: 7
Full Code:
--------------------------------------------------------------------------------
function resize() {
    var i;
    for (i = 0; i < len; i += 1) {
      registeredAnimations[i].animation.resize();
    }
  }
--------------------------------------------------------------------------------


Function 10: setVolume
Language: JavaScript
Lines: 7
Full Code:
--------------------------------------------------------------------------------
function setVolume(val, animation) {
    var i;
    for (i = 0; i < len; i += 1) {
      registeredAnimations[i].animation.setVolume(val, animation);
    }
  }
--------------------------------------------------------------------------------

================================================================================

--- FUNCTION EXTRACTION ---
Timestamp: 2025-10-09T07:52:06.225Z
File: airbnb-lottie-web-bede03d/player/js/animation/AnimationManagerWorkerOverride.js
Functions Extracted: 16


Function 1: removeElement
Language: JavaScript
Lines: 11
Full Code:
--------------------------------------------------------------------------------
function removeElement(ev) {
    var i = 0;
    var animItem = ev.target;
    while (i < len) {
      if (registeredAnimations[i].animation === animItem) {
        registeredAnimations.splice(i, 1);
        i -= 1;
        len -= 1;
        if (!animItem.isPaused) {
          subtractPlayingCount();
        }
      }
      i += 1;
    }
  }
--------------------------------------------------------------------------------


Function 2: registerAnimation
Language: JavaScript
Lines: 15
Full Code:
--------------------------------------------------------------------------------
function registerAnimation(element, animationData) {
    if (!element) {
      return null;
    }
    var i = 0;
    while (i < len) {
      if (registeredAnimations[i].elem === element && registeredAnimations[i].elem !== null) {
        return registeredAnimations[i].animation;
      }
      i += 1;
    }
    var animItem = new AnimationItem();
    setupAnimation(animItem, element);
    animItem.setData(element, animationData);
    return animItem;
  }
--------------------------------------------------------------------------------


Function 3: getRegisteredAnimations
Language: JavaScript
Lines: 10
Full Code:
--------------------------------------------------------------------------------
function getRegisteredAnimations() {
    var i;
    var lenAnims = registeredAnimations.length;
    var animations = [];
    for (i = 0; i < lenAnims; i += 1) {
      animations.push(registeredAnimations[i].animation);
    }
    return animations;
  }
--------------------------------------------------------------------------------


Function 4: setupAnimation
Language: JavaScript
Lines: 7
Full Code:
--------------------------------------------------------------------------------
function setupAnimation(animItem, element) {
    animItem.addEventListener('destroy', removeElement);
    animItem.addEventListener('_active', addPlayingCount);
    animItem.addEventListener('_idle', subtractPlayingCount);
    registeredAnimations.push({ elem: element, animation: animItem });
    len += 1;
  }
--------------------------------------------------------------------------------


Function 5: loadAnimation
Language: JavaScript
Lines: 6
Full Code:
--------------------------------------------------------------------------------
function loadAnimation(params) {
    var animItem = new AnimationItem();
    setupAnimation(animItem, null);
    animItem.setParams(params);
    return animItem;
  }
--------------------------------------------------------------------------------


Function 6: setSpeed
Language: JavaScript
Lines: 7
Full Code:
--------------------------------------------------------------------------------
function setSpeed(val, animation) {
    var i;
    for (i = 0; i < len; i += 1) {
      registeredAnimations[i].animation.setSpeed(val, animation);
    }
  }
--------------------------------------------------------------------------------


Function 7: setDirection
Language: JavaScript
Lines: 7
Full Code:
--------------------------------------------------------------------------------
function setDirection(val, animation) {
    var i;
    for (i = 0; i < len; i += 1) {
      registeredAnimations[i].animation.setDirection(val, animation);
    }
  }
--------------------------------------------------------------------------------


Function 8: play
Language: JavaScript
Lines: 7
Full Code:
--------------------------------------------------------------------------------
function play(animation) {
    var i;
    for (i = 0; i < len; i += 1) {
      registeredAnimations[i].animation.play(animation);
    }
  }
--------------------------------------------------------------------------------


Function 9: resume
Language: JavaScript
Lines: 12
Full Code:
--------------------------------------------------------------------------------
function resume(nowTime) {
    var elapsedTime = nowTime - initTime;
    var i;
    for (i = 0; i < len; i += 1) {
      registeredAnimations[i].animation.advanceTime(elapsedTime);
    }
    initTime = nowTime;
    if (playingAnimationsNum && !_isFrozen) {
      requestAnimationFrame(resume);
    } else {
      _stopped = true;
    }
  }
--------------------------------------------------------------------------------


Function 10: pause
Language: JavaScript
Lines: 7
Full Code:
--------------------------------------------------------------------------------
function pause(animation) {
    var i;
    for (i = 0; i < len; i += 1) {
      registeredAnimations[i].animation.pause(animation);
    }
  }
--------------------------------------------------------------------------------


Function 11: goToAndStop
Language: JavaScript
Lines: 7
Full Code:
--------------------------------------------------------------------------------
function goToAndStop(value, isFrame, animation) {
    var i;
    for (i = 0; i < len; i += 1) {
      registeredAnimations[i].animation.goToAndStop(value, isFrame, animation);
    }
  }
--------------------------------------------------------------------------------


Function 12: stop
Language: JavaScript
Lines: 7
Full Code:
--------------------------------------------------------------------------------
function stop(animation) {
    var i;
    for (i = 0; i < len; i += 1) {
      registeredAnimations[i].animation.stop(animation);
    }
  }
--------------------------------------------------------------------------------


Function 13: togglePause
Language: JavaScript
Lines: 7
Full Code:
--------------------------------------------------------------------------------
function togglePause(animation) {
    var i;
    for (i = 0; i < len; i += 1) {
      registeredAnimations[i].animation.togglePause(animation);
    }
  }
--------------------------------------------------------------------------------


Function 14: destroy
Language: JavaScript
Lines: 8
Full Code:
--------------------------------------------------------------------------------
function destroy(animation) {
    var i;
    for (i = (len - 1); i >= 0; i -= 1) {
      registeredAnimations[i].animation.destroy(animation);
    }
  }
--------------------------------------------------------------------------------


Function 15: resize
Language: JavaScript
Lines: 7
Full Code:
--------------------------------------------------------------------------------
function resize() {
    var i;
    for (i = 0; i < len; i += 1) {
      registeredAnimations[i].animation.resize();
    }
  }
--------------------------------------------------------------------------------


Function 16: activate
Language: JavaScript
Lines: 7
Full Code:
--------------------------------------------------------------------------------
function activate() {
    if (!_isFrozen && playingAnimationsNum) {
      if (_stopped) {
        requestAnimationFrame(first);
        _stopped = false;
      }
    }
  }
--------------------------------------------------------------------------------

================================================================================

--- FUNCTION EXTRACTION ---
Timestamp: 2025-10-09T07:53:49.103Z
File: airbnb-lottie-web-bede03d/player/js/utils/imagePreloader.js
Functions Extracted: 11


Function 1: imageLoaded
Language: JavaScript
Lines: 7
Full Code:
--------------------------------------------------------------------------------
function imageLoaded() {
    this.loadedAssets += 1;
    if (this.loadedAssets === this.totalImages && this.loadedFootagesCount === this.totalFootages) {
        if (this.imagesLoadedCb) {
            this.imagesLoadedCb(null);
        }
    }
}
--------------------------------------------------------------------------------


Function 2: footageLoaded
Language: JavaScript
Lines: 7
Full Code:
--------------------------------------------------------------------------------
function footageLoaded() {
    this.loadedFootagesCount += 1;
    if (this.loadedAssets === this.totalImages && this.loadedFootagesCount === this.totalFootages) {
        if (this.imagesLoadedCb) {
            this.imagesLoadedCb(null);
        }
    }
}
--------------------------------------------------------------------------------


Function 3: getAssetsPath
Language: JavaScript
Lines: 15
Full Code:
--------------------------------------------------------------------------------
function getAssetsPath(assetData, assetsPath, originalPath) {
    var path = '';
    if (assetData.e) {
        path = assetData.p;
    } else if (assetsPath) {
        var imagePath = assetData.p;
        if (imagePath.indexOf('images/') !== -1) {
            imagePath = imagePath.split('/')[1];
        }
        path = assetsPath + imagePath;
    } else {
        path = originalPath;
        path += assetData.u ? assetData.u : '';
        path += assetData.p;
    }
    return path;
}
--------------------------------------------------------------------------------


Function 4: testImageLoaded
Language: JavaScript
Lines: 10
Full Code:
--------------------------------------------------------------------------------
function testImageLoaded(img) {
    var _count = 0;
    var intervalId = setInterval(function () {
        var box = img.getBBox();
        if (box.width || _count > 500) {
            this._imageLoaded();
            clearInterval(intervalId);
        }
        _count += 1;
    }.bind(this), 50);
}
--------------------------------------------------------------------------------


Function 5: createImageData
Language: JavaScript
Lines: 22
Full Code:
--------------------------------------------------------------------------------
function createImageData(assetData) {
    var path = getAssetsPath(assetData, this.assetsPath, this.path);
    var img = createNS('image');
    if (isSafari) {
        this.testImageLoaded(img);
    } else {
        img.addEventListener('load', this._imageLoaded, false);
    }
    img.addEventListener('error', function () {
        ob.img = proxyImage;
        this._imageLoaded();
    }.bind(this), false);
    img.setAttributeNS('http://www.w3.org/1999/xlink', 'href', path);
    if (this._elementHelper.append) {
        this._elementHelper.append(img);
    } else {
        this._elementHelper.appendChild(img);
    }
    var ob = {
        img: img,
        assetData: assetData,
    };
    return ob;
}
--------------------------------------------------------------------------------


Function 6: createImgData
Language: JavaScript
Lines: 17
Full Code:
--------------------------------------------------------------------------------
function createImgData(assetData) {
    var path = getAssetsPath(assetData, this.assetsPath, this.path);
    var img = createTag('img');
    img.crossOrigin = 'anonymous';
    img.addEventListener('load', this._imageLoaded, false);
    img.addEventListener('error', function () {
        ob.img = proxyImage;
        this._imageLoaded();
    }.bind(this), false);
    img.src = path;
    var ob = {
        img: img,
        assetData: assetData,
    };
    return ob;
}
--------------------------------------------------------------------------------


Function 7: createFootageData
Language: JavaScript
Lines: 15
Full Code:
--------------------------------------------------------------------------------
function createFootageData(data) {
    var ob = {
        assetData: data,
    };
    var path = getAssetsPath(data, this.assetsPath, this.path);
    dataManager.loadData(path, function (footageData) {
        ob.img = footageData;
        this._footageLoaded();
    }.bind(this), function () {
        ob.img = {};
        this._footageLoaded();
    }.bind(this));
    return ob;
}
--------------------------------------------------------------------------------


Function 8: loadAssets
Language: JavaScript
Lines: 15
Full Code:
--------------------------------------------------------------------------------
function loadAssets(assets, cb) {
    this.imagesLoadedCb = cb;
    var i;
    var len = assets.length;
    for (i = 0; i < len; i += 1) {
        if (!assets[i].layers) {
            if (!assets[i].t || assets[i].t === 'seq') {
                this.totalImages += 1;
                this.images.push(this._createImageData(assets[i]));
            } else if (assets[i].t === 3) {
                this.totalFootages += 1;
                this.images.push(this.createFootageData(assets[i]));
            }
        }
    }
}
--------------------------------------------------------------------------------


Function 9: getAsset
Language: JavaScript
Lines: 11
Full Code:
--------------------------------------------------------------------------------
function getAsset(assetData) {
    var i = 0;
    var len = this.images.length;
    while (i < len) {
        if (this.images[i].assetData === assetData) {
            return this.images[i].img;
        }
        i += 1;
    }
    return null;
}
--------------------------------------------------------------------------------


Function 10: setCacheType
Language: JavaScript
Lines: 9
Full Code:
--------------------------------------------------------------------------------
function setCacheType(type, elementHelper) {
    if (type === 'svg') {
        this._elementHelper = elementHelper;
        this._createImageData = this.createImageData.bind(this);
    } else {
        this._createImageData = this.createImgData.bind(this);
    }
}
--------------------------------------------------------------------------------


Function 11: ImagePreloaderFactory
Language: JavaScript
Lines: 15
Full Code:
--------------------------------------------------------------------------------
function ImagePreloaderFactory() {
    this._imageLoaded = imageLoaded.bind(this);
    this._footageLoaded = footageLoaded.bind(this);
    this.testImageLoaded = testImageLoaded.bind(this);
    this.createFootageData = createFootageData.bind(this);
    this.assetsPath = '';
    this.path = '';
    this.totalImages = 0;
    this.totalFootages = 0;
    this.loadedAssets = 0;
    this.loadedFootagesCount = 0;
    this.imagesLoadedCb = null;
    this.images = [];
}
--------------------------------------------------------------------------------

================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-09T07:53:58.800Z
Question Type: true-false
Function: removeElement
Function Size: 444 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: removeElement (JavaScript)\n// Removes an animation from the registered animations list.\n\nfunction removeElement(ev) {\n    var i = 0;\n    var animItem = ev.target;\n    while (i < len) {\n      if (registeredAnimations[i].animation === animItem) {\n        registeredAnimations.splice(i, 1);
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-09T07:54:01.188Z
Question Type: select-all
Function: searchAnimations
Function Size: 993 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: searchAnimations (JavaScript)\n// Searches for animations in the document and registers them.\n\nfunction searchAnimations(animationData, standalone, renderer) {\n    var animElements = [].concat([].slice.call(document.getElementsByClassName('lottie'),\n      [].slice.call(document.getElemen
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-09T07:54:04.082Z
Question Type: multiple-choice
Function: setDirection
Function Size: 257 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: setDirection (JavaScript)\n// Sets the direction of all registered animations.\n\nfunction setDirection(val, animation) {\n    var i;\n    for (i = 0; i < len; i += 1) {\n      registeredAnimations[i].animation.setDirection(val, animation);\n    }\n  }
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-09T07:54:07.500Z
Question Type: function-variant
Function: addBrightnessToRGB
Function Size: 351 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: addBrightnessToRGB (JavaScript)\n// Adjusts the brightness of an RGB color.\n\nfunction addBrightnessToRGB(color, offset) {\n  var hsv = RGBtoHSV(color[0] * 255, color[1] * 255, color[2] * 255);\n  hsv[2] += offset;\n  if (hsv[2] > 1) {\n    hsv[2] = 1;\n  } else if (hsv[2] < 0) {\n    hsv[2] = 
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-09T07:54:14.983Z
Question Type: select-all
Function: addHueToRGB
Function Size: 338 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: addHueToRGB (JavaScript)\n// Adjusts the hue of an RGB color.\n\nfunction addHueToRGB(color, offset) {\n  var hsv = RGBtoHSV(color[0] * 255, color[1] * 255, color[2] * 255);\n  hsv[0] += offset / 360;\n  if (hsv[0] > 1) {\n    hsv[0] -= 1;\n  } else if (hsv[0] < 0) {\n    hsv[0] += 1;\n  }\n  retu
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-09T07:54:15.859Z
Question Type: multiple-choice
Function: resume
Function Size: 426 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: resume (JavaScript)\n// Resumes the animations based on the elapsed time.\n\nfunction resume(nowTime) {\n    var elapsedTime = nowTime - initTime;\n    var i;\n    for (i = 0; i < len; i += 1) {\n      registeredAnimations[i].animation.advanceTime(elapsedTime);\n    }\n    initTime = nowTime;\n  
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-09T07:54:19.467Z
Question Type: function-variant
Function: resize
Function Size: 197 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: resize (JavaScript)\n// Resizes all registered animations.\n\nfunction resize() {\n    var i;\n    for (i = 0; i < len; i += 1) {\n      registeredAnimations[i].animation.resize();\n    }\n  }
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-09T07:54:27.238Z
Question Type: order-sequence
Function: resume
Function Size: 433 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: resume (JavaScript)\n// Resumes the animations based on the elapsed time.\n\nfunction resume(nowTime) {\n    var elapsedTime = nowTime - initTime;\n    var i;\n    for (i = 0; i < len; i += 1) {\n      registeredAnimations[i].animation.advanceTime(elapsedTime);\n    }\n    initTime = nowTime;\n  
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-09T07:54:28.282Z
Question Type: function-variant
Function: ImagePreloaderFactory
Function Size: 578 characters
Questions Generated: 1
Repository: Unknown
Function Preview: // Function: ImagePreloaderFactory (JavaScript)\n// Factory function for creating an instance of ImagePreloader.\n\nfunction ImagePreloaderFactory() {\n    this._imageLoaded = imageLoaded.bind(this);\n    this._footageLoaded = footageLoaded.bind(this);\n    this.testImageLoaded = testImageLoaded.bind(this
================================================================================

--- QUESTION GENERATION ---
Timestamp: 2025-10-09T07:54:28.797Z
Question Type: select-all
Function: setCacheType
Function Size: 376 characters
Questions Generated: 0
Repository: Unknown
Function Preview: // Function: setCacheType (JavaScript)\n// Sets the cache type and binds the appropriate image creation method.\n\nfunction setCacheType(type, elementHelper) {\n    if (type === 'svg') {\n        this._elementHelper = elementHelper;\n        this._createImageData = this.createImageData.bind(this);\n    } e
================================================================================


=== SESSION SUMMARY ===
Session ID: session-1759996242751
Repository: Unknown
Total Questions Generated: 9
Total Chunks Processed: 43
Ended: 2025-10-09T07:54:30.902Z
================================================================================

